theory rabbit begin

// Function signature and definition of the equational theory E

builtins: natural-numbers
functions: dec/2, enc/2, fst/1, pair/2, pk/1, sign/2, snd/1, true/0,
           verify/3
equations:
    dec(enc(loc__1, loc__0), loc__0) = loc__1,
    fst(<loc__1, loc__0>) = loc__1,
    fst(<x.1, x.2>) = x.1,
    snd(<loc__1, loc__0>) = loc__0,
    snd(<x.1, x.2>) = x.2,
    verify(sign(loc__1, loc__0), loc__1, pk(loc__0)) = true







rule (modulo E) Const__nonce_a:
   [ Fr( nonce_a ) ]
  --[
  Init__( 'rab__Const__nonce_a' ),
  Init__( <'rab__Const__nonce_a', nonce_a> ),
  !Const__( 'rab__nonce_a', nonce_a )
  ]->
   [ !Const__( 'rab__nonce_a', nonce_a ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) Const__nonce_b:
   [ Fr( nonce_b ) ]
  --[
  Init__( 'rab__Const__nonce_b' ),
  Init__( <'rab__Const__nonce_b', nonce_b> ),
  !Const__( 'rab__nonce_b', nonce_b )
  ]->
   [ !Const__( 'rab__nonce_b', nonce_b ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) Const__priv_key_alice:
   [ Fr( priv_key_alice ) ]
  --[
  Init__( 'rab__Const__priv_key_alice' ),
  Init__( <'rab__Const__priv_key_alice', priv_key_alice> ),
  !Const__( 'rab__priv_key_alice', priv_key_alice )
  ]->
   [ !Const__( 'rab__priv_key_alice', priv_key_alice ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) Const__priv_key_bob:
   [ Fr( priv_key_bob ) ]
  --[
  Init__( 'rab__Const__priv_key_bob' ),
  Init__( <'rab__Const__priv_key_bob', priv_key_bob> ),
  !Const__( 'rab__priv_key_bob', priv_key_bob )
  ]->
   [ !Const__( 'rab__priv_key_bob', priv_key_bob ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) Init__system[role=system]:
   [ ]
  --[ Init__( 'rab__system' ) ]->
   [
   State__Alice( <'rab_____0', 'rab__rab', %1>, 'rab__', 'rab__', 'rab__',
                 'rab__'
   ),
   State__Bob( <'rab_____0', 'rab__rab', %1>, 'rab__', 'rab__', 'rab__',
               'rab__'
   ),
   !ACP__GEN__( 'rab__system__', 'rab__rab' )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) Init__system__ACP__0[role=system]:
   [ !ACP__GEN__( 'rab__system__', 'rab__rab' ) ]
  --[ Init__( 'rab__system__ACP__0' ) ]->
   [ !ACP__( <'rab__Bob', 'rab__rab'>, 'rab__udp', 'rab__recv' ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) Init__system__ACP__1[role=system]:
   [ !ACP__GEN__( 'rab__system__', 'rab__rab' ) ]
  --[ Init__( 'rab__system__ACP__1' ) ]->
   [ !ACP__( <'rab__Bob', 'rab__rab'>, 'rab__udp', 'rab__send' ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) Init__system__ACP__2[role=system]:
   [ !ACP__GEN__( 'rab__system__', 'rab__rab' ) ]
  --[ Init__( 'rab__system__ACP__2' ) ]->
   [ !ACP__( <'rab__Alice', 'rab__rab'>, 'rab__udp', 'rab__recv' ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) Init__system__ACP__3[role=system]:
   [ !ACP__GEN__( 'rab__system__', 'rab__rab' ) ]
  --[ Init__( 'rab__system__ACP__3' ) ]->
   [ !ACP__( <'rab__Alice', 'rab__rab'>, 'rab__udp', 'rab__send' ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) Alice__merged_____0_____2__1_0__133[role=Alice]:
   [
   State__Alice( <'rab_____0', param, %v__>, return__var__0, 'rab__',
                 'rab__', 'rab__'
   ),
   !Const__( 'rab__priv_key_bob', priv_key_bob__0 )
   ]
  --[ Transition__( <'rab__Alice', param>, 'rab_____0', %v__ ) ]->
   [
   State__Alice( <'rab_____2__1_0', param, %v__>, 'rab__', 'rab__',
                 <'rab____secret__pub_bob', 'rab__'>, 'rab__'
   ),
   File__Alice( param, 'rab____secret__pub_bob', pk(priv_key_bob__0) ),
   !ACP__( <'rab__Alice', param>, 'rab____secret__pub_bob', 'rab__fclose' ),
   !ACP__( <'rab__Alice', param>, 'rab____secret__pub_bob', 'rab__fread' ),
   !ACP__( <'rab__Alice', param>, 'rab____secret__pub_bob', 'rab__fopen' )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) Alice__merged_____1_____9__131[role=Alice]:
   [
   State__Alice( <'rab_____1', param, %v__>, return__var__1, 'rab__',
                 'rab__', 'rab__'
   ),
   File__Alice( param, loc__0, n__0__3 ),
   !ACP__( <'rab__Alice', param>, 'rab____secret__pub_bob', 'rab__fopen' ),
   !ACP__( <'rab__Alice', param>, 'rab____secret__pub_bob', 'rab__fopen' ),
   !ACP__( <'rab__Alice', param>, 'rab__udp', 'rab__send' ),
   !Const__( 'rab__nonce_a', nonce_a__31 ),
   !Const__( 'rab__nonce_a', nonce_a__24 ), !Eq__( n__0__3, n__0__20 ),
   Fr( n__0__4 )
   ]
  --[ Transition__( <'rab__Alice', param>, 'rab_____1', %v__ ) ]->
   [
   State__Alice( <'rab_____9', param, %v__>, 'rab__', 'rab__',
                 <enc(<nonce_a__24, 'rab__Alice'>, n__0__20), n__0__20, n__0__4>, 'rab__'
   ),
   File__Alice( param, loc__0, n__0__3 ),
   Fd__Alice( param, n__0__4, n__0__20 ),
   Out( enc(<nonce_a__24, 'rab__Alice'>, n__0__20) ),
   Store( 'rab__udp', enc(<nonce_a__24, 'rab__Alice'>, n__0__20) ),
   AliceSendNonceA( nonce_a__31 )
   ]

  // loop breaker: [1]
  /* has exactly the trivial AC variant */

rule (modulo E) Alice__merged_____2__1_0_____9__122[role=Alice]:
   [
   State__Alice( <'rab_____2__1_0', param, %v__>, return__var__11, 'rab__',
                 <l__0__11, l__1__11>, 'rab__'
   ),
   File__Alice( param, loc__0, n__0__11 ), In( n__1__11 ),
   !ACP__( <'rab__Alice', param>, l__0__11, 'rab__fopen' ),
   !ACP__( <'rab__Alice', param>, l__0__11, 'rab__fopen' ),
   !ACP__( <'rab__Alice', param>, 'rab__udp', 'rab__send' ),
   !Const__( 'rab__nonce_a', nonce_a__31 ),
   !Const__( 'rab__nonce_a', nonce_a__24 ), !Eq__( n__1__11, n__0__20 ),
   Fr( n__0__12 )
   ]
  --[ Transition__( <'rab__Alice', param>, 'rab_____2__1_0', %v__ ) ]->
   [
   State__Alice( <'rab_____9', param, %v__>, 'rab__', 'rab__',
                 <enc(<nonce_a__24, 'rab__Alice'>, n__0__20), n__0__20, n__0__12>, 'rab__'
   ),
   File__Alice( param, loc__0, n__1__11 ),
   Fd__Alice( param, n__0__12, n__0__20 ),
   Out( enc(<nonce_a__24, 'rab__Alice'>, n__0__20) ),
   Store( 'rab__udp', enc(<nonce_a__24, 'rab__Alice'>, n__0__20) ),
   AliceSendNonceA( nonce_a__31 )
   ]

  // loop breaker: [1]
  /* has exactly the trivial AC variant */

rule (modulo E) Alice__merged_____9_____11__1_0__102[role=Alice]:
   [
   State__Alice( <'rab_____9', param, %v__>, return__var__32, 'rab__',
                 <l__0__32, l__1__32, l__2__32>, 'rab__'
   ),
   !Const__( 'rab__nonce_a', nonce_a__32 )
   ]
  --[
  Transition__( <'rab__Alice', param>, 'rab_____9', %v__ ),
  AliceSendNonceATag( nonce_a__32 )
  ]->
   [
   State__Alice( <'rab_____11__1_0', param, %v__>, 'rab__', 'rab__',
                 <'rab__udp', 'rab__', l__0__32, l__1__32, l__2__32>, 'rab__'
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) Alice__merged_____9_____11__0_0__101[role=Alice]:
   [
   State__Alice( <'rab_____9', param, %v__>, return__var__32, 'rab__',
                 <l__0__32, l__1__32, l__2__32>, 'rab__'
   ),
   !Const__( 'rab__nonce_a', nonce_a__32 )
   ]
  --[
  Transition__( <'rab__Alice', param>, 'rab_____9', %v__ ),
  AliceSendNonceATag( nonce_a__32 )
  ]->
   [
   State__Alice( <'rab_____11__0_0', param, %v__>, 'rab__', 'rab__',
                 <'rab__udp', 'rab__', l__0__32, l__1__32, l__2__32>, 'rab__'
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) Alice__merged_____11__0_0_____15__0_1__98[role=Alice]:
   [
   State__Alice( <'rab_____11__0_0', param, %v__>, return__var__35, 'rab__',
                 <l__0__35, l__1__35, l__2__35, l__3__35, l__4__35>, 'rab__'
   ),
   Store( l__0__35, n__0__35 ),
   !ACP__( <'rab__Alice', param>, l__0__35, 'rab__recv' ),
   !Const__( 'rab__priv_key_alice', priv_key_alice__44 ),
   !Const__( 'rab__nonce_a', nonce_a__48 ),
   !Const__( 'rab__nonce_a', nonce_a__47 ),
   !Eq__( fst(dec(n__0__35, priv_key_alice__44)), nonce_a__47 )
   ]
  --[
  Transition__( <'rab__Alice', param>, 'rab_____11__0_0', %v__ ),
  SecretNonceAlice( nonce_a__48 )
  ]->
   [
   State__Alice( <'rab_____15__0_1', param, %v__>, 'rab__', 'rab__',
                 <snd(dec(n__0__35, priv_key_alice__44)), 
                  fst(dec(n__0__35, priv_key_alice__44)), 
                  dec(n__0__35, priv_key_alice__44), n__0__35, l__2__35, l__3__35, l__4__35
                 >,
                 'rab__'
   )
   ]

  /*
  rule (modulo AC) Alice__merged_____11__0_0_____15__0_1__98[role=Alice]:
     [
     State__Alice( <'rab_____11__0_0', param, %v__>, return__var__35, 'rab__',
                   <l__0__35, l__1__35, l__2__35, l__3__35, l__4__35>, 'rab__'
     ),
     Store( l__0__35, n__0__35 ),
     !ACP__( <'rab__Alice', param>, l__0__35, 'rab__recv' ),
     !Const__( 'rab__priv_key_alice', priv_key_alice__44 ),
     !Const__( 'rab__nonce_a', nonce_a__48 ),
     !Const__( 'rab__nonce_a', nonce_a__47 ), !Eq__( z, nonce_a__47 )
     ]
    --[
    Transition__( <'rab__Alice', param>, 'rab_____11__0_0', %v__ ),
    SecretNonceAlice( nonce_a__48 )
    ]->
     [
     State__Alice( <'rab_____15__0_1', param, %v__>, 'rab__', 'rab__',
                   <z.1, z, z.2, n__0__35, l__2__35, l__3__35, l__4__35>, 'rab__'
     )
     ]
    variants (modulo AC)
    1. n__0__35
             = n__0__35.28
       priv_key_alice__44
             = priv_key_alice__44.32
       z     = fst(dec(n__0__35.28, priv_key_alice__44.32))
       z.1   = snd(dec(n__0__35.28, priv_key_alice__44.32))
       z.2   = dec(n__0__35.28, priv_key_alice__44.32)
    
    2. n__0__35
             = enc(z.48, priv_key_alice__44.36)
       priv_key_alice__44
             = priv_key_alice__44.36
       z     = fst(z.48)
       z.1   = snd(z.48)
       z.2   = z.48
    
    3. n__0__35
             = enc(<z.44, z.46>, priv_key_alice__44.35)
       priv_key_alice__44
             = priv_key_alice__44.35
       z     = z.44
       z.1   = z.46
       z.2   = <z.44, z.46>
  */

rule (modulo E) Alice__merged_____11__1_0_____15__0_1__94[role=Alice]:
   [
   State__Alice( <'rab_____11__1_0', param, %v__>, return__var__40, 'rab__',
                 <l__0__40, l__1__40, l__2__40, l__3__40, l__4__40>, 'rab__'
   ),
   Store( l__0__40, n__0__40 ), In( n__1__40 ),
   !ACP__( <'rab__Alice', param>, l__0__40, 'rab__recv' ),
   !Const__( 'rab__priv_key_alice', priv_key_alice__44 ),
   !Const__( 'rab__nonce_a', nonce_a__48 ),
   !Const__( 'rab__nonce_a', nonce_a__47 ),
   !Eq__( fst(dec(n__1__40, priv_key_alice__44)), nonce_a__47 )
   ]
  --[
  Transition__( <'rab__Alice', param>, 'rab_____11__1_0', %v__ ),
  SecretNonceAlice( nonce_a__48 )
  ]->
   [
   State__Alice( <'rab_____15__0_1', param, %v__>, 'rab__', 'rab__',
                 <snd(dec(n__1__40, priv_key_alice__44)), 
                  fst(dec(n__1__40, priv_key_alice__44)), 
                  dec(n__1__40, priv_key_alice__44), n__1__40, l__2__40, l__3__40, l__4__40
                 >,
                 'rab__'
   )
   ]

  /*
  rule (modulo AC) Alice__merged_____11__1_0_____15__0_1__94[role=Alice]:
     [
     State__Alice( <'rab_____11__1_0', param, %v__>, return__var__40, 'rab__',
                   <l__0__40, l__1__40, l__2__40, l__3__40, l__4__40>, 'rab__'
     ),
     Store( l__0__40, n__0__40 ), In( n__1__40 ),
     !ACP__( <'rab__Alice', param>, l__0__40, 'rab__recv' ),
     !Const__( 'rab__priv_key_alice', priv_key_alice__44 ),
     !Const__( 'rab__nonce_a', nonce_a__48 ),
     !Const__( 'rab__nonce_a', nonce_a__47 ), !Eq__( z, nonce_a__47 )
     ]
    --[
    Transition__( <'rab__Alice', param>, 'rab_____11__1_0', %v__ ),
    SecretNonceAlice( nonce_a__48 )
    ]->
     [
     State__Alice( <'rab_____15__0_1', param, %v__>, 'rab__', 'rab__',
                   <z.1, z, z.2, n__1__40, l__2__40, l__3__40, l__4__40>, 'rab__'
     )
     ]
    variants (modulo AC)
    1. n__1__40
             = n__1__40.29
       priv_key_alice__44
             = priv_key_alice__44.33
       z     = fst(dec(n__1__40.29, priv_key_alice__44.33))
       z.1   = snd(dec(n__1__40.29, priv_key_alice__44.33))
       z.2   = dec(n__1__40.29, priv_key_alice__44.33)
    
    2. n__1__40
             = enc(z.49, priv_key_alice__44.37)
       priv_key_alice__44
             = priv_key_alice__44.37
       z     = fst(z.49)
       z.1   = snd(z.49)
       z.2   = z.49
    
    3. n__1__40
             = enc(<z.45, z.47>, priv_key_alice__44.36)
       priv_key_alice__44
             = priv_key_alice__44.36
       z     = z.45
       z.1   = z.47
       z.2   = <z.45, z.47>
  */

rule (modulo E) Alice__merged_____15__0_1_____15__0_3__0_1__86[role=Alice]:
   [
   State__Alice( <'rab_____15__0_1', param, %v__>, return__var__49, 'rab__',
                 <l__0__49, l__1__49, l__2__49, l__3__49, l__4__49, l__5__49, l__6__49>,
                 'rab__'
   ),
   !Const__( 'rab__nonce_b', nonce_b__49 ),
   !ACP__( <'rab__Alice', param>, 'rab__udp', 'rab__send' )
   ]
  --[ Transition__( <'rab__Alice', param>, 'rab_____15__0_1', %v__ ) ]->
   [
   State__Alice( <'rab_____15__0_3__0_1', param, %v__>, 'rab__', 'rab__',
                 <enc(nonce_b__49, l__5__49), 'rab__udp', enc(nonce_b__49, l__5__49), 
                  l__0__49, l__1__49, l__2__49, l__3__49, l__4__49, l__5__49, l__6__49>,
                 'rab__'
   ),
   Out( enc(nonce_b__49, l__5__49) ),
   Store( 'rab__udp', enc(nonce_b__49, l__5__49) )
   ]

  // loop breaker: [0]
  /* has exactly the trivial AC variant */

rule (modulo E) Alice__merged_____15__0_3__0_1_____25__81[role=Alice]:
   [
   State__Alice( <'rab_____15__0_3__0_1', param, %v__>, return__var__55,
                 'rab__',
                 <l__0__55, l__1__55, l__2__55, l__3__55, l__4__55, l__5__55, l__6__55, 
                  l__7__55, l__8__55, l__9__55>,
                 'rab__'
   ),
   Fd__Alice( param, l__9__55, n__0__59 )
   ]
  --[
  Transition__( <'rab__Alice', param>, 'rab_____15__0_3__0_1', %v__ ),
  AliceClose( )
  ]->
   [
   State__Alice( <'rab_____25', param, %v__>, 'rab__', 'rab__', 'rab__',
                 'rab__'
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) Alice__init_filesys_____0_____1__0[role=Alice]:
   [
   State__Alice( <'rab_____0', param, %v__>, return__var__0, 'rab__',
                 'rab__', 'rab__'
   ),
   !Const__( 'rab__priv_key_bob', priv_key_bob__0 )
   ]
  --[ Transition__( <'rab__Alice', param>, 'rab_____0', %v__ ) ]->
   [
   State__Alice( <'rab_____1', param, %v__>, 'rab__', 'rab__', 'rab__',
                 'rab__'
   ),
   File__Alice( param, 'rab____secret__pub_bob', pk(priv_key_bob__0) ),
   !ACP__( <'rab__Alice', param>, 'rab____secret__pub_bob', 'rab__fclose' ),
   !ACP__( <'rab__Alice', param>, 'rab____secret__pub_bob', 'rab__fread' ),
   !ACP__( <'rab__Alice', param>, 'rab____secret__pub_bob', 'rab__fopen' )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) Bob__merged_____0_____3__0_0__85[role=Bob]:
   [
   State__Bob( <'rab_____0', param, %v__>, return__var__0, 'rab__', 'rab__',
               'rab__'
   ),
   !Const__( 'rab__priv_key_alice', priv_key_alice__0 )
   ]
  --[ Transition__( <'rab__Bob', param>, 'rab_____0', %v__ ), BobOpen( )
  ]->
   [
   State__Bob( <'rab_____3__0_0', param, %v__>, 'rab__', 'rab__',
               <'rab__udp', 'rab__'>, pk(priv_key_alice__0)
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) Bob__merged_____0_____3__1_0__84[role=Bob]:
   [
   State__Bob( <'rab_____0', param, %v__>, return__var__0, 'rab__', 'rab__',
               'rab__'
   ),
   !Const__( 'rab__priv_key_alice', priv_key_alice__0 )
   ]
  --[ Transition__( <'rab__Bob', param>, 'rab_____0', %v__ ), BobOpen( )
  ]->
   [
   State__Bob( <'rab_____3__1_0', param, %v__>, 'rab__', 'rab__',
               <'rab__udp', 'rab__'>, pk(priv_key_alice__0)
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) Bob__merged_____3__0_0_____9__79[role=Bob]:
   [
   State__Bob( <'rab_____3__0_0', param, %v__>, return__var__4, 'rab__',
               <l__0__4, l__1__4>, t__0__4
   ),
   Store( l__0__4, n__0__4 ),
   !ACP__( <'rab__Bob', param>, l__0__4, 'rab__recv' ),
   !Const__( 'rab__priv_key_bob', priv_key_bob__13 ),
   !ACP__( <'rab__Bob', param>, 'rab__udp', 'rab__send' ),
   !Const__( 'rab__nonce_b', nonce_b__21 ),
   !Const__( 'rab__priv_key_alice', priv_key_alice__14 ),
   !Const__( 'rab__nonce_b', nonce_b__14 ),
   !Const__( 'rab__nonce_a', nonce_a__14 )
   ]
  --[ Transition__( <'rab__Bob', param>, 'rab_____3__0_0', %v__ ) ]->
   [
   State__Bob( <'rab_____9', param, %v__>, 'rab__', 'rab__',
               <enc(<nonce_a__14, nonce_b__14>, pk(priv_key_alice__14)), 
                fst(dec(n__0__4, priv_key_bob__13)), n__0__4>,
               t__0__4
   ),
   Out( enc(<nonce_a__14, nonce_b__14>, pk(priv_key_alice__14)) ),
   Store( 'rab__udp',
          enc(<nonce_a__14, nonce_b__14>, pk(priv_key_alice__14))
   ),
   BobSendNonceB( nonce_b__21 )
   ]

  // loop breaker: [1]
  /*
  rule (modulo AC) Bob__merged_____3__0_0_____9__79[role=Bob]:
     [
     State__Bob( <'rab_____3__0_0', param, %v__>, return__var__4, 'rab__',
                 <l__0__4, l__1__4>, t__0__4
     ),
     Store( l__0__4, n__0__4 ),
     !ACP__( <'rab__Bob', param>, l__0__4, 'rab__recv' ),
     !Const__( 'rab__priv_key_bob', priv_key_bob__13 ),
     !ACP__( <'rab__Bob', param>, 'rab__udp', 'rab__send' ),
     !Const__( 'rab__nonce_b', nonce_b__21 ),
     !Const__( 'rab__priv_key_alice', priv_key_alice__14 ),
     !Const__( 'rab__nonce_b', nonce_b__14 ),
     !Const__( 'rab__nonce_a', nonce_a__14 )
     ]
    --[ Transition__( <'rab__Bob', param>, 'rab_____3__0_0', %v__ ) ]->
     [
     State__Bob( <'rab_____9', param, %v__>, 'rab__', 'rab__',
                 <enc(<nonce_a__14, nonce_b__14>, pk(priv_key_alice__14)), z, n__0__4>,
                 t__0__4
     ),
     Out( enc(<nonce_a__14, nonce_b__14>, pk(priv_key_alice__14)) ),
     Store( 'rab__udp',
            enc(<nonce_a__14, nonce_b__14>, pk(priv_key_alice__14))
     ),
     BobSendNonceB( nonce_b__21 )
     ]
    variants (modulo AC)
    1. n__0__4
             = n__0__4.32
       priv_key_bob__13
             = priv_key_bob__13.38
       z     = fst(dec(n__0__4.32, priv_key_bob__13.38))
    
    2. n__0__4
             = enc(x.362, priv_key_bob__13.186)
       priv_key_bob__13
             = priv_key_bob__13.186
       z     = fst(x.362)
    
    3. n__0__4
             = enc(<z.202, x.364>, priv_key_bob__13.187)
       priv_key_bob__13
             = priv_key_bob__13.187
       z     = z.202
    // loop breaker: [1]
  */

rule (modulo E) Bob__merged_____3__1_0_____9__75[role=Bob]:
   [
   State__Bob( <'rab_____3__1_0', param, %v__>, return__var__9, 'rab__',
               <l__0__9, l__1__9>, t__0__9
   ),
   Store( l__0__9, n__0__9 ), In( n__1__9 ),
   !ACP__( <'rab__Bob', param>, l__0__9, 'rab__recv' ),
   !Const__( 'rab__priv_key_bob', priv_key_bob__13 ),
   !ACP__( <'rab__Bob', param>, 'rab__udp', 'rab__send' ),
   !Const__( 'rab__nonce_b', nonce_b__21 ),
   !Const__( 'rab__priv_key_alice', priv_key_alice__14 ),
   !Const__( 'rab__nonce_b', nonce_b__14 ),
   !Const__( 'rab__nonce_a', nonce_a__14 )
   ]
  --[ Transition__( <'rab__Bob', param>, 'rab_____3__1_0', %v__ ) ]->
   [
   State__Bob( <'rab_____9', param, %v__>, 'rab__', 'rab__',
               <enc(<nonce_a__14, nonce_b__14>, pk(priv_key_alice__14)), 
                fst(dec(n__1__9, priv_key_bob__13)), n__1__9>,
               t__0__9
   ),
   Out( enc(<nonce_a__14, nonce_b__14>, pk(priv_key_alice__14)) ),
   Store( 'rab__udp',
          enc(<nonce_a__14, nonce_b__14>, pk(priv_key_alice__14))
   ),
   BobSendNonceB( nonce_b__21 )
   ]

  // loop breaker: [1]
  /*
  rule (modulo AC) Bob__merged_____3__1_0_____9__75[role=Bob]:
     [
     State__Bob( <'rab_____3__1_0', param, %v__>, return__var__9, 'rab__',
                 <l__0__9, l__1__9>, t__0__9
     ),
     Store( l__0__9, n__0__9 ), In( n__1__9 ),
     !ACP__( <'rab__Bob', param>, l__0__9, 'rab__recv' ),
     !Const__( 'rab__priv_key_bob', priv_key_bob__13 ),
     !ACP__( <'rab__Bob', param>, 'rab__udp', 'rab__send' ),
     !Const__( 'rab__nonce_b', nonce_b__21 ),
     !Const__( 'rab__priv_key_alice', priv_key_alice__14 ),
     !Const__( 'rab__nonce_b', nonce_b__14 ),
     !Const__( 'rab__nonce_a', nonce_a__14 )
     ]
    --[ Transition__( <'rab__Bob', param>, 'rab_____3__1_0', %v__ ) ]->
     [
     State__Bob( <'rab_____9', param, %v__>, 'rab__', 'rab__',
                 <enc(<nonce_a__14, nonce_b__14>, pk(priv_key_alice__14)), z, n__1__9>,
                 t__0__9
     ),
     Out( enc(<nonce_a__14, nonce_b__14>, pk(priv_key_alice__14)) ),
     Store( 'rab__udp',
            enc(<nonce_a__14, nonce_b__14>, pk(priv_key_alice__14))
     ),
     BobSendNonceB( nonce_b__21 )
     ]
    variants (modulo AC)
    1. n__1__9
             = n__1__9.33
       priv_key_bob__13
             = priv_key_bob__13.39
       z     = fst(dec(n__1__9.33, priv_key_bob__13.39))
    
    2. n__1__9
             = enc(x.363, priv_key_bob__13.187)
       priv_key_bob__13
             = priv_key_bob__13.187
       z     = fst(x.363)
    
    3. n__1__9
             = enc(<z.203, x.365>, priv_key_bob__13.188)
       priv_key_bob__13
             = priv_key_bob__13.188
       z     = z.203
    // loop breaker: [1]
  */

rule (modulo E) Bob__merged_____9_____11__1_0__63[role=Bob]:
   [
   State__Bob( <'rab_____9', param, %v__>, return__var__22, 'rab__',
               <l__0__22, l__1__22, l__2__22>, t__0__22
   ),
   !Const__( 'rab__nonce_b', nonce_b__22 )
   ]
  --[
  Transition__( <'rab__Bob', param>, 'rab_____9', %v__ ),
  BobSendNonceBTag( nonce_b__22 )
  ]->
   [
   State__Bob( <'rab_____11__1_0', param, %v__>, 'rab__', 'rab__',
               <'rab__udp', 'rab__', l__0__22, l__1__22, l__2__22>, t__0__22
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) Bob__merged_____9_____11__0_0__62[role=Bob]:
   [
   State__Bob( <'rab_____9', param, %v__>, return__var__22, 'rab__',
               <l__0__22, l__1__22, l__2__22>, t__0__22
   ),
   !Const__( 'rab__nonce_b', nonce_b__22 )
   ]
  --[
  Transition__( <'rab__Bob', param>, 'rab_____9', %v__ ),
  BobSendNonceBTag( nonce_b__22 )
  ]->
   [
   State__Bob( <'rab_____11__0_0', param, %v__>, 'rab__', 'rab__',
               <'rab__udp', 'rab__', l__0__22, l__1__22, l__2__22>, t__0__22
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) Bob__merged_____11__0_0_____13__0_1__59[role=Bob]:
   [
   State__Bob( <'rab_____11__0_0', param, %v__>, return__var__25, 'rab__',
               <l__0__25, l__1__25, l__2__25, l__3__25, l__4__25>, t__0__25
   ),
   Store( l__0__25, n__0__25 ),
   !ACP__( <'rab__Bob', param>, l__0__25, 'rab__recv' ),
   !Const__( 'rab__priv_key_bob', priv_key_bob__34 ),
   !Const__( 'rab__nonce_b', nonce_b__36 ),
   !Const__( 'rab__nonce_b', nonce_b__35 ),
   !Eq__( dec(n__0__25, priv_key_bob__34), nonce_b__35 )
   ]
  --[
  Transition__( <'rab__Bob', param>, 'rab_____11__0_0', %v__ ),
  SecretNonceBob( nonce_b__36 )
  ]->
   [
   State__Bob( <'rab_____13__0_1', param, %v__>, 'rab__', 'rab__',
               <dec(n__0__25, priv_key_bob__34), n__0__25, l__2__25, l__3__25, l__4__25
               >,
               t__0__25
   )
   ]

  /*
  rule (modulo AC) Bob__merged_____11__0_0_____13__0_1__59[role=Bob]:
     [
     State__Bob( <'rab_____11__0_0', param, %v__>, return__var__25, 'rab__',
                 <l__0__25, l__1__25, l__2__25, l__3__25, l__4__25>, t__0__25
     ),
     Store( l__0__25, n__0__25 ),
     !ACP__( <'rab__Bob', param>, l__0__25, 'rab__recv' ),
     !Const__( 'rab__priv_key_bob', priv_key_bob__34 ),
     !Const__( 'rab__nonce_b', nonce_b__36 ),
     !Const__( 'rab__nonce_b', nonce_b__35 ), !Eq__( z, nonce_b__35 )
     ]
    --[
    Transition__( <'rab__Bob', param>, 'rab_____11__0_0', %v__ ),
    SecretNonceBob( nonce_b__36 )
    ]->
     [
     State__Bob( <'rab_____13__0_1', param, %v__>, 'rab__', 'rab__',
                 <z, n__0__25, l__2__25, l__3__25, l__4__25>, t__0__25
     )
     ]
    variants (modulo AC)
    1. n__0__25
             = n__0__25.26
       priv_key_bob__34
             = priv_key_bob__34.30
       z     = dec(n__0__25.26, priv_key_bob__34.30)
    
    2. n__0__25
             = enc(z.42, priv_key_bob__34.32)
       priv_key_bob__34
             = priv_key_bob__34.32
       z     = z.42
  */

rule (modulo E) Bob__merged_____11__1_0_____13__0_1__55[role=Bob]:
   [
   State__Bob( <'rab_____11__1_0', param, %v__>, return__var__30, 'rab__',
               <l__0__30, l__1__30, l__2__30, l__3__30, l__4__30>, t__0__30
   ),
   Store( l__0__30, n__0__30 ), In( n__1__30 ),
   !ACP__( <'rab__Bob', param>, l__0__30, 'rab__recv' ),
   !Const__( 'rab__priv_key_bob', priv_key_bob__34 ),
   !Const__( 'rab__nonce_b', nonce_b__36 ),
   !Const__( 'rab__nonce_b', nonce_b__35 ),
   !Eq__( dec(n__1__30, priv_key_bob__34), nonce_b__35 )
   ]
  --[
  Transition__( <'rab__Bob', param>, 'rab_____11__1_0', %v__ ),
  SecretNonceBob( nonce_b__36 )
  ]->
   [
   State__Bob( <'rab_____13__0_1', param, %v__>, 'rab__', 'rab__',
               <dec(n__1__30, priv_key_bob__34), n__1__30, l__2__30, l__3__30, l__4__30
               >,
               t__0__30
   )
   ]

  /*
  rule (modulo AC) Bob__merged_____11__1_0_____13__0_1__55[role=Bob]:
     [
     State__Bob( <'rab_____11__1_0', param, %v__>, return__var__30, 'rab__',
                 <l__0__30, l__1__30, l__2__30, l__3__30, l__4__30>, t__0__30
     ),
     Store( l__0__30, n__0__30 ), In( n__1__30 ),
     !ACP__( <'rab__Bob', param>, l__0__30, 'rab__recv' ),
     !Const__( 'rab__priv_key_bob', priv_key_bob__34 ),
     !Const__( 'rab__nonce_b', nonce_b__36 ),
     !Const__( 'rab__nonce_b', nonce_b__35 ), !Eq__( z, nonce_b__35 )
     ]
    --[
    Transition__( <'rab__Bob', param>, 'rab_____11__1_0', %v__ ),
    SecretNonceBob( nonce_b__36 )
    ]->
     [
     State__Bob( <'rab_____13__0_1', param, %v__>, 'rab__', 'rab__',
                 <z, n__1__30, l__2__30, l__3__30, l__4__30>, t__0__30
     )
     ]
    variants (modulo AC)
    1. n__1__30
             = n__1__30.27
       priv_key_bob__34
             = priv_key_bob__34.31
       z     = dec(n__1__30.27, priv_key_bob__34.31)
    
    2. n__1__30
             = enc(z.43, priv_key_bob__34.33)
       priv_key_bob__34
             = priv_key_bob__34.33
       z     = z.43
  */

rule (modulo E) Bob__merged_____13__0_1_____20__49[role=Bob]:
   [
   State__Bob( <'rab_____13__0_1', param, %v__>, return__var__37, 'rab__',
               <l__0__37, l__1__37, l__2__37, l__3__37, l__4__37>, t__0__37
   )
   ]
  --[
  Transition__( <'rab__Bob', param>, 'rab_____13__0_1', %v__ ), BobClose( )
  ]->
   [
   State__Bob( <'rab_____20', param, %v__>, 'rab__', 'rab__', 'rab__',
               t__0__37
   )
   ]

  /* has exactly the trivial AC variant */

restriction Init__:
  "∀ x #i #j. ((Init__( x ) @ #i) ∧ (Init__( x ) @ #j)) ⇒ (#i = #j)"
  // safety formula

rule (modulo E) Equality_gen:
   [ ] --> [ !Eq__( x, x ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) NEquality_gen:
   [ ] --[ NEq___( x, y ) ]-> [ !NEq__( x, y ) ]

  /* has exactly the trivial AC variant */

restriction NEquality_rule:
  "∀ x #i. (NEq___( x, x ) @ #i) ⇒ (⊥)"
  // safety formula

lemma AlwaysStarts__ [reuse, use_induction]:
  all-traces
  "∀ x p #i.
    (Loop__Back( x, p ) @ #i) ⇒
    (∃ #j. (Loop__Start( x, p ) @ #j) ∧ (#j < #i))"
/*
guarded formula characterizing all counter-examples:
"∃ x p #i.
  (Loop__Back( x, p ) @ #i)
 ∧
  ∀ #j. (Loop__Start( x, p ) @ #j) ⇒ ¬(#j < #i)"
*/
induction
  case empty_trace
  by contradiction /* from formulas */
next
  case non_empty_trace
  simplify
  solve( (last(#i))  ∥
         (∃ #j. (Loop__Start( x, p ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #i)) )
    case case_1
    by solve( Loop__Back( x, p ) @ #i )
  next
    case case_2
    by contradiction /* from formulas */
  qed
qed

lemma AlwaysStartsWhenEnds__ [reuse, use_induction]:
  all-traces
  "∀ x p #i.
    (Loop__Finish( x, p ) @ #i) ⇒
    (∃ #j. (Loop__Start( x, p ) @ #j) ∧ (#j < #i))"
/*
guarded formula characterizing all counter-examples:
"∃ x p #i.
  (Loop__Finish( x, p ) @ #i)
 ∧
  ∀ #j. (Loop__Start( x, p ) @ #j) ⇒ ¬(#j < #i)"
*/
induction
  case empty_trace
  by contradiction /* from formulas */
next
  case non_empty_trace
  simplify
  solve( (last(#i))  ∥
         (∃ #j. (Loop__Start( x, p ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #i)) )
    case case_1
    by solve( Loop__Finish( x, p ) @ #i )
  next
    case case_2
    by contradiction /* from formulas */
  qed
qed

lemma TransitionOnce__ [reuse, use_induction]:
  all-traces
  "∀ x p %i #j #k.
    ((Transition__( x, p, %i ) @ #j) ∧ (Transition__( x, p, %i ) @ #k)) ⇒
    (#j = #k)"
/*
guarded formula characterizing all counter-examples:
"∃ x p %i #j #k.
  (Transition__( x, p, %i ) @ #j) ∧ (Transition__( x, p, %i ) @ #k)
 ∧
  ¬(#j = #k)"
*/
induction
  case empty_trace
  by contradiction /* from formulas */
next
  case non_empty_trace
  simplify
  solve( (#j < #k)  ∥ (#k < #j) )
    case case_1
    solve( Transition__( x, p, %i ) @ #j )
      case Alice__init_filesys_____0_____1__0
      solve( State__Alice( <'rab_____0', param, %i>, return__var__0, 'rab__',
                           'rab__', 'rab__'
             ) ▶₀ #j )
        case Init__system
        solve( !Const__( 'rab__priv_key_bob', priv_key_bob__0 ) ▶₁ #j )
          case Const__priv_key_bob
          solve( Transition__( <'rab__Alice', 'rab__rab'>, 'rab_____0', %1 ) @ #k )
            case Alice__init_filesys_____0_____1__0
            solve( State__Alice( <'rab_____0', 'rab__rab', %1>, return__var__0,
                                 'rab__', 'rab__', 'rab__'
                   ) ▶₀ #k )
              case Init__system
              by contradiction /* cyclic */
            qed
          next
            case Alice__merged_____0_____2__1_0__133
            by solve( State__Alice( <'rab_____0', 'rab__rab', %1>, return__var__0,
                                    'rab__', 'rab__', 'rab__'
                      ) ▶₀ #k )
          qed
        qed
      qed
    next
      case Alice__merged_____0_____2__1_0__133
      solve( State__Alice( <'rab_____0', param, %i>, return__var__0, 'rab__',
                           'rab__', 'rab__'
             ) ▶₀ #j )
        case Init__system
        solve( !Const__( 'rab__priv_key_bob', priv_key_bob__0 ) ▶₁ #j )
          case Const__priv_key_bob
          solve( Transition__( <'rab__Alice', 'rab__rab'>, 'rab_____0', %1 ) @ #k )
            case Alice__init_filesys_____0_____1__0
            by solve( State__Alice( <'rab_____0', 'rab__rab', %1>, return__var__0,
                                    'rab__', 'rab__', 'rab__'
                      ) ▶₀ #k )
          next
            case Alice__merged_____0_____2__1_0__133
            solve( State__Alice( <'rab_____0', 'rab__rab', %1>, return__var__0,
                                 'rab__', 'rab__', 'rab__'
                   ) ▶₀ #k )
              case Init__system
              by contradiction /* cyclic */
            qed
          qed
        qed
      qed
    next
      case Alice__merged_____11__0_0_____15__0_1__98
      solve( State__Alice( <'rab_____11__0_0', param, %i>, return__var__35,
                           'rab__', <l__0__35, l__1__35, l__2__35, l__3__35, l__4__35>, 'rab__'
             ) ▶₀ #j )
        case Alice__merged_____9_____11__0_0__101_case_1
        solve( Store( 'rab__udp', n__0__35 ) ▶₁ #j )
          case Alice__merged_____15__0_1_____15__0_3__0_1__86
          solve( !ACP__( <'rab__Alice', 'rab__rab'>, 'rab__udp', 'rab__recv'
                 ) ▶₂ #j )
            case Init__system__ACP__2
            solve( !Const__( 'rab__priv_key_alice', priv_key_alice__44 ) ▶₃ #j )
              case Const__priv_key_alice
              solve( !Const__( 'rab__nonce_a', nonce_a__48 ) ▶₄ #j )
                case Const__nonce_a
                solve( !Const__( 'rab__nonce_a', nonce_a__47 ) ▶₅ #j )
                  case Const__nonce_a
                  by solve( !Eq__( fst(z), ~n ) ▶₆ #j )
                qed
              qed
            qed
          qed
        next
          case Alice__merged_____1_____9__131
          solve( !ACP__( <'rab__Alice', 'rab__rab'>, 'rab__udp', 'rab__recv'
                 ) ▶₂ #j )
            case Init__system__ACP__2
            solve( !Const__( 'rab__priv_key_alice', priv_key_alice__44 ) ▶₃ #j )
              case Const__priv_key_alice
              solve( !Const__( 'rab__nonce_a', nonce_a__48 ) ▶₄ #j )
                case Const__nonce_a
                solve( !Const__( 'rab__nonce_a', nonce_a__47 ) ▶₅ #j )
                  case Const__nonce_a
                  solve( !Eq__( z, ~n ) ▶₆ #j )
                    case Equality_gen
                    solve( Transition__( <'rab__Alice', 'rab__rab'>, 'rab_____11__0_0', %1
                           ) @ #k )
                      case Alice__merged_____11__0_0_____15__0_1__98
                      solve( State__Alice( <'rab_____11__0_0', 'rab__rab', %1>,
                                           return__var__35, 'rab__',
                                           <l__0__35, l__1__35, l__2__35, l__3__35.1, l__4__35>, 'rab__'
                             ) ▶₀ #k )
                        case Alice__merged_____9_____11__0_0__101
                        by contradiction /* cyclic */
                      qed
                    qed
                  qed
                qed
              qed
            qed
          qed
        next
          case Bob__merged_____3__0_0_____9__79
          solve( !ACP__( <'rab__Alice', 'rab__rab'>, 'rab__udp', 'rab__recv'
                 ) ▶₂ #j )
            case Init__system__ACP__2
            solve( !Const__( 'rab__priv_key_alice', priv_key_alice__44 ) ▶₃ #j )
              case Const__priv_key_alice
              solve( !Const__( 'rab__nonce_a', nonce_a__48 ) ▶₄ #j )
                case Const__nonce_a
                solve( !Const__( 'rab__nonce_a', nonce_a__47 ) ▶₅ #j )
                  case Const__nonce_a
                  by solve( !Eq__( fst(dec(enc(<~n, ~n.2>, pk(~n.3)), ~n.3)), ~n ) ▶₆ #j )
                qed
              qed
            qed
          qed
        next
          case Bob__merged_____3__1_0_____9__75
          solve( !ACP__( <'rab__Alice', 'rab__rab'>, 'rab__udp', 'rab__recv'
                 ) ▶₂ #j )
            case Init__system__ACP__2
            solve( !Const__( 'rab__priv_key_alice', priv_key_alice__44 ) ▶₃ #j )
              case Const__priv_key_alice
              solve( !Const__( 'rab__nonce_a', nonce_a__48 ) ▶₄ #j )
                case Const__nonce_a
                solve( !Const__( 'rab__nonce_a', nonce_a__47 ) ▶₅ #j )
                  case Const__nonce_a
                  by solve( !Eq__( fst(dec(enc(<~n, ~n.2>, pk(~n.3)), ~n.3)), ~n ) ▶₆ #j )
                qed
              qed
            qed
          qed
        qed
      next
        case Alice__merged_____9_____11__0_0__101_case_2
        solve( Store( 'rab__udp', n__0__35 ) ▶₁ #j )
          case Alice__merged_____15__0_1_____15__0_3__0_1__86
          solve( !ACP__( <'rab__Alice', 'rab__rab'>, 'rab__udp', 'rab__recv'
                 ) ▶₂ #j )
            case Init__system__ACP__2
            solve( !Const__( 'rab__priv_key_alice', priv_key_alice__44 ) ▶₃ #j )
              case Const__priv_key_alice
              solve( !Const__( 'rab__nonce_a', nonce_a__48 ) ▶₄ #j )
                case Const__nonce_a
                solve( !Const__( 'rab__nonce_a', nonce_a__47 ) ▶₅ #j )
                  case Const__nonce_a
                  by solve( !Eq__( fst(z), ~n ) ▶₆ #j )
                qed
              qed
            qed
          qed
        next
          case Alice__merged_____2__1_0_____9__122
          solve( !ACP__( <'rab__Alice', 'rab__rab'>, 'rab__udp', 'rab__recv'
                 ) ▶₂ #j )
            case Init__system__ACP__2
            solve( !Const__( 'rab__priv_key_alice', priv_key_alice__44 ) ▶₃ #j )
              case Const__priv_key_alice
              solve( !Const__( 'rab__nonce_a', nonce_a__48 ) ▶₄ #j )
                case Const__nonce_a
                solve( !Const__( 'rab__nonce_a', nonce_a__47 ) ▶₅ #j )
                  case Const__nonce_a
                  solve( !Eq__( z, ~n ) ▶₆ #j )
                    case Equality_gen
                    solve( Transition__( <'rab__Alice', 'rab__rab'>, 'rab_____11__0_0', %1
                           ) @ #k )
                      case Alice__merged_____11__0_0_____15__0_1__98
                      solve( State__Alice( <'rab_____11__0_0', 'rab__rab', %1>,
                                           return__var__35, 'rab__',
                                           <l__0__35, l__1__35, l__2__35, l__3__35.1, l__4__35>, 'rab__'
                             ) ▶₀ #k )
                        case Alice__merged_____9_____11__0_0__101
                        by contradiction /* cyclic */
                      qed
                    qed
                  qed
                qed
              qed
            qed
          qed
        next
          case Bob__merged_____3__0_0_____9__79
          solve( !ACP__( <'rab__Alice', 'rab__rab'>, 'rab__udp', 'rab__recv'
                 ) ▶₂ #j )
            case Init__system__ACP__2
            solve( !Const__( 'rab__priv_key_alice', priv_key_alice__44 ) ▶₃ #j )
              case Const__priv_key_alice
              solve( !Const__( 'rab__nonce_a', nonce_a__48 ) ▶₄ #j )
                case Const__nonce_a
                solve( !Const__( 'rab__nonce_a', nonce_a__47 ) ▶₅ #j )
                  case Const__nonce_a
                  by solve( !Eq__( fst(dec(enc(<~n, ~n.2>, pk(~n.3)), ~n.3)), ~n ) ▶₆ #j )
                qed
              qed
            qed
          qed
        next
          case Bob__merged_____3__1_0_____9__75
          solve( !ACP__( <'rab__Alice', 'rab__rab'>, 'rab__udp', 'rab__recv'
                 ) ▶₂ #j )
            case Init__system__ACP__2
            solve( !Const__( 'rab__priv_key_alice', priv_key_alice__44 ) ▶₃ #j )
              case Const__priv_key_alice
              solve( !Const__( 'rab__nonce_a', nonce_a__48 ) ▶₄ #j )
                case Const__nonce_a
                solve( !Const__( 'rab__nonce_a', nonce_a__47 ) ▶₅ #j )
                  case Const__nonce_a
                  by solve( !Eq__( fst(dec(enc(<~n, ~n.2>, pk(~n.3)), ~n.3)), ~n ) ▶₆ #j )
                qed
              qed
            qed
          qed
        qed
      qed
    next
      case Alice__merged_____11__1_0_____15__0_1__94
      solve( State__Alice( <'rab_____11__1_0', param, %i>, return__var__40,
                           'rab__', <l__0__40, l__1__40, l__2__40, l__3__40, l__4__40>, 'rab__'
             ) ▶₀ #j )
        case Alice__merged_____9_____11__1_0__102_case_1
        solve( Store( 'rab__udp', n__0__40 ) ▶₁ #j )
          case Alice__merged_____15__0_1_____15__0_3__0_1__86
          solve( !ACP__( <'rab__Alice', 'rab__rab'>, 'rab__udp', 'rab__recv'
                 ) ▶₃ #j )
            case Init__system__ACP__2
            solve( !Const__( 'rab__priv_key_alice', priv_key_alice__44 ) ▶₄ #j )
              case Const__priv_key_alice
              solve( !Const__( 'rab__nonce_a', nonce_a__48 ) ▶₅ #j )
                case Const__nonce_a
                solve( !Const__( 'rab__nonce_a', nonce_a__47 ) ▶₆ #j )
                  case Const__nonce_a
                  solve( !Eq__( z, ~n ) ▶₇ #j )
                    case Equality_gen
                    solve( Transition__( <'rab__Alice', 'rab__rab'>, 'rab_____11__1_0', %1
                           ) @ #k )
                      case Alice__merged_____11__1_0_____15__0_1__94
                      solve( State__Alice( <'rab_____11__1_0', 'rab__rab', %1>,
                                           return__var__40, 'rab__',
                                           <l__0__40, l__1__40, l__2__40, l__3__40.1, l__4__40>, 'rab__'
                             ) ▶₀ #k )
                        case Alice__merged_____9_____11__1_0__102
                        by contradiction /* cyclic */
                      qed
                    qed
                  qed
                qed
              qed
            qed
          qed
        next
          case Alice__merged_____1_____9__131
          solve( !ACP__( <'rab__Alice', 'rab__rab'>, 'rab__udp', 'rab__recv'
                 ) ▶₃ #j )
            case Init__system__ACP__2
            solve( !Const__( 'rab__priv_key_alice', priv_key_alice__44 ) ▶₄ #j )
              case Const__priv_key_alice
              solve( !Const__( 'rab__nonce_a', nonce_a__48 ) ▶₅ #j )
                case Const__nonce_a
                solve( !Const__( 'rab__nonce_a', nonce_a__47 ) ▶₆ #j )
                  case Const__nonce_a
                  solve( !Eq__( z, ~n ) ▶₇ #j )
                    case Equality_gen
                    solve( Transition__( <'rab__Alice', 'rab__rab'>, 'rab_____11__1_0', %1
                           ) @ #k )
                      case Alice__merged_____11__1_0_____15__0_1__94
                      solve( State__Alice( <'rab_____11__1_0', 'rab__rab', %1>,
                                           return__var__40, 'rab__',
                                           <l__0__40, l__1__40, l__2__40, l__3__40.1, l__4__40>, 'rab__'
                             ) ▶₀ #k )
                        case Alice__merged_____9_____11__1_0__102
                        by contradiction /* cyclic */
                      qed
                    qed
                  qed
                qed
              qed
            qed
          qed
        next
          case Bob__merged_____3__0_0_____9__79
          solve( !ACP__( <'rab__Alice', 'rab__rab'>, 'rab__udp', 'rab__recv'
                 ) ▶₃ #j )
            case Init__system__ACP__2
            solve( !Const__( 'rab__priv_key_alice', priv_key_alice__44 ) ▶₄ #j )
              case Const__priv_key_alice
              solve( !Const__( 'rab__nonce_a', nonce_a__48 ) ▶₅ #j )
                case Const__nonce_a
                solve( !Const__( 'rab__nonce_a', nonce_a__47 ) ▶₆ #j )
                  case Const__nonce_a
                  solve( !Eq__( z, ~n ) ▶₇ #j )
                    case Equality_gen
                    solve( Transition__( <'rab__Alice', 'rab__rab'>, 'rab_____11__1_0', %1
                           ) @ #k )
                      case Alice__merged_____11__1_0_____15__0_1__94
                      solve( State__Alice( <'rab_____11__1_0', 'rab__rab', %1>,
                                           return__var__40, 'rab__',
                                           <l__0__40, l__1__40, l__2__40, l__3__40.1, l__4__40>, 'rab__'
                             ) ▶₀ #k )
                        case Alice__merged_____9_____11__1_0__102
                        by contradiction /* cyclic */
                      qed
                    qed
                  qed
                qed
              qed
            qed
          qed
        next
          case Bob__merged_____3__1_0_____9__75
          solve( !ACP__( <'rab__Alice', 'rab__rab'>, 'rab__udp', 'rab__recv'
                 ) ▶₃ #j )
            case Init__system__ACP__2
            solve( !Const__( 'rab__priv_key_alice', priv_key_alice__44 ) ▶₄ #j )
              case Const__priv_key_alice
              solve( !Const__( 'rab__nonce_a', nonce_a__48 ) ▶₅ #j )
                case Const__nonce_a
                solve( !Const__( 'rab__nonce_a', nonce_a__47 ) ▶₆ #j )
                  case Const__nonce_a
                  solve( !Eq__( z, ~n ) ▶₇ #j )
                    case Equality_gen
                    solve( Transition__( <'rab__Alice', 'rab__rab'>, 'rab_____11__1_0', %1
                           ) @ #k )
                      case Alice__merged_____11__1_0_____15__0_1__94
                      solve( State__Alice( <'rab_____11__1_0', 'rab__rab', %1>,
                                           return__var__40, 'rab__',
                                           <l__0__40, l__1__40, l__2__40, l__3__40.1, l__4__40>, 'rab__'
                             ) ▶₀ #k )
                        case Alice__merged_____9_____11__1_0__102
                        by contradiction /* cyclic */
                      qed
                    qed
                  qed
                qed
              qed
            qed
          qed
        qed
      next
        case Alice__merged_____9_____11__1_0__102_case_2
        solve( Store( 'rab__udp', n__0__40 ) ▶₁ #j )
          case Alice__merged_____15__0_1_____15__0_3__0_1__86
          solve( !ACP__( <'rab__Alice', 'rab__rab'>, 'rab__udp', 'rab__recv'
                 ) ▶₃ #j )
            case Init__system__ACP__2
            solve( !Const__( 'rab__priv_key_alice', priv_key_alice__44 ) ▶₄ #j )
              case Const__priv_key_alice
              solve( !Const__( 'rab__nonce_a', nonce_a__48 ) ▶₅ #j )
                case Const__nonce_a
                solve( !Const__( 'rab__nonce_a', nonce_a__47 ) ▶₆ #j )
                  case Const__nonce_a
                  solve( !Eq__( z, ~n ) ▶₇ #j )
                    case Equality_gen
                    solve( Transition__( <'rab__Alice', 'rab__rab'>, 'rab_____11__1_0', %1
                           ) @ #k )
                      case Alice__merged_____11__1_0_____15__0_1__94
                      solve( State__Alice( <'rab_____11__1_0', 'rab__rab', %1>,
                                           return__var__40, 'rab__',
                                           <l__0__40, l__1__40, l__2__40, l__3__40.1, l__4__40>, 'rab__'
                             ) ▶₀ #k )
                        case Alice__merged_____9_____11__1_0__102
                        by contradiction /* cyclic */
                      qed
                    qed
                  qed
                qed
              qed
            qed
          qed
        next
          case Alice__merged_____2__1_0_____9__122
          solve( !ACP__( <'rab__Alice', 'rab__rab'>, 'rab__udp', 'rab__recv'
                 ) ▶₃ #j )
            case Init__system__ACP__2
            solve( !Const__( 'rab__priv_key_alice', priv_key_alice__44 ) ▶₄ #j )
              case Const__priv_key_alice
              solve( !Const__( 'rab__nonce_a', nonce_a__48 ) ▶₅ #j )
                case Const__nonce_a
                solve( !Const__( 'rab__nonce_a', nonce_a__47 ) ▶₆ #j )
                  case Const__nonce_a
                  solve( !Eq__( z, ~n ) ▶₇ #j )
                    case Equality_gen
                    solve( Transition__( <'rab__Alice', 'rab__rab'>, 'rab_____11__1_0', %1
                           ) @ #k )
                      case Alice__merged_____11__1_0_____15__0_1__94
                      solve( State__Alice( <'rab_____11__1_0', 'rab__rab', %1>,
                                           return__var__40, 'rab__',
                                           <l__0__40, l__1__40, l__2__40, l__3__40.1, l__4__40>, 'rab__'
                             ) ▶₀ #k )
                        case Alice__merged_____9_____11__1_0__102
                        by contradiction /* cyclic */
                      qed
                    qed
                  qed
                qed
              qed
            qed
          qed
        next
          case Bob__merged_____3__0_0_____9__79
          solve( !ACP__( <'rab__Alice', 'rab__rab'>, 'rab__udp', 'rab__recv'
                 ) ▶₃ #j )
            case Init__system__ACP__2
            solve( !Const__( 'rab__priv_key_alice', priv_key_alice__44 ) ▶₄ #j )
              case Const__priv_key_alice
              solve( !Const__( 'rab__nonce_a', nonce_a__48 ) ▶₅ #j )
                case Const__nonce_a
                solve( !Const__( 'rab__nonce_a', nonce_a__47 ) ▶₆ #j )
                  case Const__nonce_a
                  solve( !Eq__( z, ~n ) ▶₇ #j )
                    case Equality_gen
                    solve( Transition__( <'rab__Alice', 'rab__rab'>, 'rab_____11__1_0', %1
                           ) @ #k )
                      case Alice__merged_____11__1_0_____15__0_1__94
                      solve( State__Alice( <'rab_____11__1_0', 'rab__rab', %1>,
                                           return__var__40, 'rab__',
                                           <l__0__40, l__1__40, l__2__40, l__3__40.1, l__4__40>, 'rab__'
                             ) ▶₀ #k )
                        case Alice__merged_____9_____11__1_0__102
                        by contradiction /* cyclic */
                      qed
                    qed
                  qed
                qed
              qed
            qed
          qed
        next
          case Bob__merged_____3__1_0_____9__75
          solve( !ACP__( <'rab__Alice', 'rab__rab'>, 'rab__udp', 'rab__recv'
                 ) ▶₃ #j )
            case Init__system__ACP__2
            solve( !Const__( 'rab__priv_key_alice', priv_key_alice__44 ) ▶₄ #j )
              case Const__priv_key_alice
              solve( !Const__( 'rab__nonce_a', nonce_a__48 ) ▶₅ #j )
                case Const__nonce_a
                solve( !Const__( 'rab__nonce_a', nonce_a__47 ) ▶₆ #j )
                  case Const__nonce_a
                  solve( !Eq__( z, ~n ) ▶₇ #j )
                    case Equality_gen
                    solve( Transition__( <'rab__Alice', 'rab__rab'>, 'rab_____11__1_0', %1
                           ) @ #k )
                      case Alice__merged_____11__1_0_____15__0_1__94
                      solve( State__Alice( <'rab_____11__1_0', 'rab__rab', %1>,
                                           return__var__40, 'rab__',
                                           <l__0__40, l__1__40, l__2__40, l__3__40.1, l__4__40>, 'rab__'
                             ) ▶₀ #k )
                        case Alice__merged_____9_____11__1_0__102
                        by contradiction /* cyclic */
                      qed
                    qed
                  qed
                qed
              qed
            qed
          qed
        qed
      qed
    next
      case Alice__merged_____15__0_1_____15__0_3__0_1__86
      solve( !Const__( 'rab__nonce_b', nonce_b__49 ) ▶₁ #j )
        case Const__nonce_b
        solve( !ACP__( <'rab__Alice', param>, 'rab__udp', 'rab__send' ) ▶₂ #j )
          case Init__system__ACP__3
          solve( Transition__( <'rab__Alice', 'rab__rab'>, 'rab_____15__0_1', %i
                 ) @ #k )
            case Alice__merged_____15__0_1_____15__0_3__0_1__86
            solve( !Const__( 'rab__nonce_b', nonce_b__49 ) ▶₁ #k )
              case Const__nonce_b
              solve( !ACP__( <'rab__Alice', 'rab__rab'>, 'rab__udp', 'rab__send'
                     ) ▶₂ #k )
                case Init__system__ACP__3
                solve( State__Alice( <'rab_____15__0_1', 'rab__rab', %i>,
                                     return__var__49, 'rab__',
                                     <l__0__49, l__1__49, l__2__49, l__3__49, l__4__49, l__5__49, l__6__49>,
                                     'rab__'
                       ) ▶₀ #j )
                  case Alice__merged_____11__0_0_____15__0_1__98_case_1
                  solve( State__Alice( <'rab_____15__0_1', 'rab__rab', %1>,
                                       return__var__49, 'rab__',
                                       <l__0__49, l__1__49, l__2__49, l__3__49, l__4__49, l__5__49, l__6__49>,
                                       'rab__'
                         ) ▶₀ #k )
                    case Alice__merged_____11__0_0_____15__0_1__98
                    by contradiction /* cyclic */
                  qed
                next
                  case Alice__merged_____11__0_0_____15__0_1__98_case_2
                  by solve( !KU( ~n__0__20 ) @ #vk )
                next
                  case Alice__merged_____11__1_0_____15__0_1__94_case_1
                  solve( !KU( enc(<~n, l__0__49>, ~n.1) ) @ #vk )
                    case Alice__merged_____1_____9__131
                    solve( State__Alice( <'rab_____15__0_1', 'rab__rab', %1>,
                                         return__var__49, 'rab__',
                                         <l__0__49, l__1__49, l__2__49, l__3__49, l__4__49, l__5__49, l__6__49
                                         >,
                                         'rab__'
                           ) ▶₀ #k )
                      case Alice__merged_____11__1_0_____15__0_1__94
                      by contradiction /* cyclic */
                    qed
                  next
                    case c_enc
                    by solve( !KU( ~n.1 ) @ #vk.2 )
                  qed
                next
                  case Alice__merged_____11__1_0_____15__0_1__94_case_2
                  solve( !KU( enc(<~n, l__0__49>, ~n.1) ) @ #vk )
                    case Alice__merged_____2__1_0_____9__122
                    by solve( !KU( ~n.1 ) @ #vk.1 )
                  next
                    case c_enc
                    by solve( !KU( ~n.1 ) @ #vk.3 )
                  qed
                next
                  case Alice__merged_____11__1_0_____15__0_1__94_case_3
                  solve( !KU( enc(<~n, l__0__49>, ~n.1) ) @ #vk )
                    case Alice__merged_____1_____9__131
                    solve( State__Alice( <'rab_____15__0_1', 'rab__rab', %1>,
                                         return__var__49, 'rab__',
                                         <l__0__49, l__1__49, l__2__49, l__3__49, l__4__49, l__5__49, l__6__49
                                         >,
                                         'rab__'
                           ) ▶₀ #k )
                      case Alice__merged_____11__1_0_____15__0_1__94
                      by contradiction /* cyclic */
                    qed
                  next
                    case c_enc
                    by solve( !KU( ~n.1 ) @ #vk.2 )
                  qed
                next
                  case Alice__merged_____11__1_0_____15__0_1__94_case_4
                  solve( !KU( enc(<~n, l__0__49>, ~n.1) ) @ #vk )
                    case Alice__merged_____2__1_0_____9__122
                    by solve( !KU( ~n.1 ) @ #vk.1 )
                  next
                    case c_enc
                    by solve( !KU( ~n.1 ) @ #vk.3 )
                  qed
                next
                  case Alice__merged_____11__1_0_____15__0_1__94_case_5
                  solve( splitEqs(2) )
                    case split_case_1
                    solve( !KU( enc(<~n, l__0__49>, ~n.1) ) @ #vk )
                      case Alice__merged_____1_____9__131
                      solve( State__Alice( <'rab_____15__0_1', 'rab__rab', %1>,
                                           return__var__49, 'rab__',
                                           <l__0__49, l__1__49, l__2__49, l__3__49, l__4__49, l__5__49, 
                                            l__6__49>,
                                           'rab__'
                             ) ▶₀ #k )
                        case Alice__merged_____11__1_0_____15__0_1__94
                        by contradiction /* cyclic */
                      qed
                    next
                      case c_enc
                      by solve( !KU( ~n.1 ) @ #vk.2 )
                    qed
                  next
                    case split_case_2
                    solve( !KU( enc(<~n, l__0__49>, ~n.1) ) @ #vk )
                      case Alice__merged_____1_____9__131
                      solve( State__Alice( <'rab_____15__0_1', 'rab__rab', %1>,
                                           return__var__49, 'rab__',
                                           <l__0__49, l__1__49, l__2__49, l__3__49, l__4__49, l__5__49, 
                                            l__6__49>,
                                           'rab__'
                             ) ▶₀ #k )
                        case Alice__merged_____11__1_0_____15__0_1__94
                        by contradiction /* cyclic */
                      qed
                    next
                      case c_enc
                      by solve( !KU( ~n.1 ) @ #vk.2 )
                    qed
                  next
                    case split_case_3
                    solve( !KU( enc(<~n, l__0__49>, ~n.1) ) @ #vk )
                      case Alice__merged_____1_____9__131
                      solve( State__Alice( <'rab_____15__0_1', 'rab__rab', %1>,
                                           return__var__49, 'rab__',
                                           <l__0__49, l__1__49, l__2__49, l__3__49, l__4__49, l__5__49, 
                                            l__6__49>,
                                           'rab__'
                             ) ▶₀ #k )
                        case Alice__merged_____11__1_0_____15__0_1__94
                        by contradiction /* cyclic */
                      qed
                    next
                      case c_enc
                      by solve( !KU( ~n.1 ) @ #vk.2 )
                    qed
                  qed
                next
                  case Alice__merged_____11__1_0_____15__0_1__94_case_6
                  solve( splitEqs(2) )
                    case split_case_1
                    solve( !KU( enc(<~n, l__0__49>, ~n.1) ) @ #vk )
                      case Alice__merged_____2__1_0_____9__122
                      by solve( !KU( ~n.1 ) @ #vk.1 )
                    next
                      case c_enc
                      by solve( !KU( ~n.1 ) @ #vk.3 )
                    qed
                  next
                    case split_case_2
                    solve( !KU( enc(<~n, l__0__49>, ~n.1) ) @ #vk )
                      case Alice__merged_____2__1_0_____9__122
                      by solve( !KU( ~n.1 ) @ #vk.1 )
                    next
                      case c_enc
                      by solve( !KU( ~n.1 ) @ #vk.3 )
                    qed
                  next
                    case split_case_3
                    solve( !KU( enc(<~n, l__0__49>, ~n.1) ) @ #vk )
                      case Alice__merged_____2__1_0_____9__122
                      by solve( !KU( ~n.1 ) @ #vk.1 )
                    next
                      case c_enc
                      by solve( !KU( ~n.1 ) @ #vk.3 )
                    qed
                  qed
                next
                  case Alice__merged_____11__1_0_____15__0_1__94_case_7
                  solve( splitEqs(2) )
                    case split_case_1
                    solve( !KU( enc(<~n, l__0__49>, ~n.1) ) @ #vk )
                      case Alice__merged_____1_____9__131
                      solve( State__Alice( <'rab_____15__0_1', 'rab__rab', %1>,
                                           return__var__49, 'rab__',
                                           <l__0__49, l__1__49, l__2__49, l__3__49, l__4__49, l__5__49, 
                                            l__6__49>,
                                           'rab__'
                             ) ▶₀ #k )
                        case Alice__merged_____11__1_0_____15__0_1__94
                        by contradiction /* cyclic */
                      qed
                    next
                      case c_enc
                      by solve( !KU( ~n.1 ) @ #vk.3 )
                    qed
                  next
                    case split_case_2
                    solve( !KU( enc(<~n, l__0__49>, ~n.1) ) @ #vk )
                      case Alice__merged_____1_____9__131
                      solve( !KU( enc(x, ~n.4) ) @ #vk.1 )
                        case Alice__merged_____15__0_1_____15__0_3__0_1__86
                        solve( State__Alice( <'rab_____15__0_1', 'rab__rab', %1>,
                                             return__var__49, 'rab__',
                                             <l__0__49, l__1__49, l__2__49, l__3__49, l__4__49, l__5__49, 
                                              l__6__49>,
                                             'rab__'
                               ) ▶₀ #k )
                          case Alice__merged_____11__1_0_____15__0_1__94
                          by contradiction /* cyclic */
                        qed
                      next
                        case c_enc
                        by solve( !KU( ~n.4 ) @ #vk.3 )
                      qed
                    next
                      case c_enc
                      by solve( !KU( ~n.1 ) @ #vk.3 )
                    qed
                  next
                    case split_case_3
                    solve( !KU( enc(<~n, l__0__49>, ~n.1) ) @ #vk )
                      case Alice__merged_____1_____9__131
                      solve( !KU( enc(<z, x>, ~n.4) ) @ #vk.1 )
                        case c_enc
                        by solve( !KU( ~n.4 ) @ #vk.3 )
                      qed
                    next
                      case c_enc
                      by solve( !KU( ~n.1 ) @ #vk.3 )
                    qed
                  qed
                next
                  case Alice__merged_____11__1_0_____15__0_1__94_case_8
                  solve( splitEqs(2) )
                    case split_case_1
                    solve( !KU( enc(<~n, l__0__49>, ~n.1) ) @ #vk )
                      case Alice__merged_____2__1_0_____9__122
                      by solve( !KU( ~n.1 ) @ #vk.2 )
                    next
                      case c_enc
                      by solve( !KU( ~n.1 ) @ #vk.4 )
                    qed
                  next
                    case split_case_2
                    solve( !KU( enc(<~n, l__0__49>, ~n.1) ) @ #vk )
                      case Alice__merged_____2__1_0_____9__122
                      by solve( !KU( ~n.1 ) @ #vk.2 )
                    next
                      case c_enc
                      by solve( !KU( ~n.1 ) @ #vk.4 )
                    qed
                  next
                    case split_case_3
                    solve( !KU( enc(<~n, l__0__49>, ~n.1) ) @ #vk )
                      case Alice__merged_____2__1_0_____9__122
                      by solve( !KU( ~n.1 ) @ #vk.2 )
                    next
                      case c_enc
                      by solve( !KU( ~n.1 ) @ #vk.4 )
                    qed
                  qed
                qed
              qed
            qed
          qed
        qed
      qed
    next
      case Alice__merged_____15__0_3__0_1_____25__81
      solve( State__Alice( <'rab_____15__0_3__0_1', param, %i>,
                           return__var__55, 'rab__',
                           <l__0__55, l__1__55, l__2__55, l__3__55, l__4__55, l__5__55, l__6__55, 
                            l__7__55, l__8__55, l__9__55>,
                           'rab__'
             ) ▶₀ #j )
        case Alice__merged_____15__0_1_____15__0_3__0_1__86
        solve( Fd__Alice( 'rab__rab', l__9__55, n__0__59 ) ▶₁ #j )
          case Alice__merged_____1_____9__131
          solve( Transition__( <'rab__Alice', 'rab__rab'>, 'rab_____15__0_3__0_1',
                               %i
                 ) @ #k )
            case Alice__merged_____15__0_3__0_1_____25__81
            solve( State__Alice( <'rab_____15__0_3__0_1', 'rab__rab', %i>,
                                 return__var__55, 'rab__',
                                 <l__0__55, l__1__55, l__2__55, l__3__55.1, l__4__55.1, l__5__55.1, 
                                  l__6__55.1, l__7__55.1, l__8__55.1, l__9__55>,
                                 'rab__'
                   ) ▶₀ #k )
              case Alice__merged_____15__0_1_____15__0_3__0_1__86
              by contradiction /* cyclic */
            qed
          qed
        next
          case Alice__merged_____2__1_0_____9__122
          solve( Transition__( <'rab__Alice', 'rab__rab'>, 'rab_____15__0_3__0_1',
                               %i
                 ) @ #k )
            case Alice__merged_____15__0_3__0_1_____25__81
            solve( State__Alice( <'rab_____15__0_3__0_1', 'rab__rab', %i>,
                                 return__var__55, 'rab__',
                                 <l__0__55, l__1__55, l__2__55, l__3__55.1, l__4__55.1, l__5__55.1, 
                                  l__6__55.1, l__7__55.1, l__8__55.1, l__9__55>,
                                 'rab__'
                   ) ▶₀ #k )
              case Alice__merged_____15__0_1_____15__0_3__0_1__86
              by contradiction /* cyclic */
            qed
          qed
        qed
      qed
    next
      case Alice__merged_____1_____9__131
      solve( State__Alice( <'rab_____1', param, %i>, return__var__1, 'rab__',
                           'rab__', 'rab__'
             ) ▶₀ #j )
        case Alice__init_filesys_____0_____1__0
        solve( !ACP__( <'rab__Alice', 'rab__rab'>, 'rab____secret__pub_bob',
                       'rab__fopen'
               ) ▶₂ #j )
          case Alice__init_filesys_____0_____1__0
          solve( !ACP__( <'rab__Alice', 'rab__rab'>, 'rab____secret__pub_bob',
                         'rab__fopen'
                 ) ▶₃ #j )
            case Alice__init_filesys_____0_____1__0
            solve( !ACP__( <'rab__Alice', 'rab__rab'>, 'rab__udp', 'rab__send'
                   ) ▶₄ #j )
              case Init__system__ACP__3
              solve( !Const__( 'rab__nonce_a', nonce_a__31 ) ▶₅ #j )
                case Const__nonce_a
                solve( !Const__( 'rab__nonce_a', nonce_a__24 ) ▶₆ #j )
                  case Const__nonce_a
                  solve( !Eq__( n__0__3, n__0__20 ) ▶₇ #j )
                    case Equality_gen
                    solve( Transition__( <'rab__Alice', 'rab__rab'>, 'rab_____1', %1 ) @ #k )
                      case Alice__merged_____1_____9__131
                      solve( State__Alice( <'rab_____1', 'rab__rab', %1>, return__var__1,
                                           'rab__', 'rab__', 'rab__'
                             ) ▶₀ #k )
                        case Alice__init_filesys_____0_____1__0
                        by contradiction /* cyclic */
                      qed
                    qed
                  qed
                qed
              qed
            qed
          qed
        qed
      qed
    next
      case Alice__merged_____2__1_0_____9__122
      solve( State__Alice( <'rab_____2__1_0', param, %i>, return__var__11,
                           'rab__', <l__0__11, l__1__11>, 'rab__'
             ) ▶₀ #j )
        case Alice__merged_____0_____2__1_0__133
        solve( !ACP__( <'rab__Alice', 'rab__rab'>, 'rab____secret__pub_bob',
                       'rab__fopen'
               ) ▶₃ #j )
          case Alice__merged_____0_____2__1_0__133
          solve( !ACP__( <'rab__Alice', 'rab__rab'>, 'rab____secret__pub_bob',
                         'rab__fopen'
                 ) ▶₄ #j )
            case Alice__merged_____0_____2__1_0__133
            solve( !ACP__( <'rab__Alice', 'rab__rab'>, 'rab__udp', 'rab__send'
                   ) ▶₅ #j )
              case Init__system__ACP__3
              solve( !Const__( 'rab__nonce_a', nonce_a__31 ) ▶₆ #j )
                case Const__nonce_a
                solve( !Const__( 'rab__nonce_a', nonce_a__24 ) ▶₇ #j )
                  case Const__nonce_a
                  solve( !Eq__( n__1__11, n__0__20 ) ▶₈ #j )
                    case Equality_gen
                    solve( Transition__( <'rab__Alice', 'rab__rab'>, 'rab_____2__1_0', %1
                           ) @ #k )
                      case Alice__merged_____2__1_0_____9__122
                      solve( State__Alice( <'rab_____2__1_0', 'rab__rab', %1>, return__var__11,
                                           'rab__', <l__0__11, l__1__11>, 'rab__'
                             ) ▶₀ #k )
                        case Alice__merged_____0_____2__1_0__133
                        by contradiction /* cyclic */
                      qed
                    qed
                  qed
                qed
              qed
            qed
          qed
        qed
      qed
    next
      case Alice__merged_____9_____11__0_0__101
      solve( State__Alice( <'rab_____9', param, %i>, return__var__32, 'rab__',
                           <l__0__32, l__1__32, l__2__32>, 'rab__'
             ) ▶₀ #j )
        case Alice__merged_____1_____9__131
        solve( !Const__( 'rab__nonce_a', nonce_a__32 ) ▶₁ #j )
          case Const__nonce_a
          solve( Transition__( <'rab__Alice', 'rab__rab'>, 'rab_____9', %1 ) @ #k )
            case Alice__merged_____9_____11__0_0__101
            solve( State__Alice( <'rab_____9', 'rab__rab', %1>, return__var__32,
                                 'rab__', <l__0__32, l__1__32.1, l__2__32>, 'rab__'
                   ) ▶₀ #k )
              case Alice__merged_____1_____9__131
              by contradiction /* cyclic */
            qed
          next
            case Alice__merged_____9_____11__1_0__102
            by solve( State__Alice( <'rab_____9', 'rab__rab', %1>, return__var__32,
                                    'rab__', <l__0__32, l__1__32.1, l__2__32>, 'rab__'
                      ) ▶₀ #k )
          qed
        qed
      next
        case Alice__merged_____2__1_0_____9__122
        solve( !Const__( 'rab__nonce_a', nonce_a__32 ) ▶₁ #j )
          case Const__nonce_a
          solve( Transition__( <'rab__Alice', 'rab__rab'>, 'rab_____9', %1 ) @ #k )
            case Alice__merged_____9_____11__0_0__101
            solve( State__Alice( <'rab_____9', 'rab__rab', %1>, return__var__32,
                                 'rab__', <l__0__32, l__1__32.1, l__2__32>, 'rab__'
                   ) ▶₀ #k )
              case Alice__merged_____2__1_0_____9__122
              by contradiction /* cyclic */
            qed
          next
            case Alice__merged_____9_____11__1_0__102
            by solve( State__Alice( <'rab_____9', 'rab__rab', %1>, return__var__32,
                                    'rab__', <l__0__32, l__1__32.1, l__2__32>, 'rab__'
                      ) ▶₀ #k )
          qed
        qed
      qed
    next
      case Alice__merged_____9_____11__1_0__102
      solve( State__Alice( <'rab_____9', param, %i>, return__var__32, 'rab__',
                           <l__0__32, l__1__32, l__2__32>, 'rab__'
             ) ▶₀ #j )
        case Alice__merged_____1_____9__131
        solve( !Const__( 'rab__nonce_a', nonce_a__32 ) ▶₁ #j )
          case Const__nonce_a
          solve( Transition__( <'rab__Alice', 'rab__rab'>, 'rab_____9', %1 ) @ #k )
            case Alice__merged_____9_____11__0_0__101
            by solve( State__Alice( <'rab_____9', 'rab__rab', %1>, return__var__32,
                                    'rab__', <l__0__32, l__1__32.1, l__2__32>, 'rab__'
                      ) ▶₀ #k )
          next
            case Alice__merged_____9_____11__1_0__102
            solve( State__Alice( <'rab_____9', 'rab__rab', %1>, return__var__32,
                                 'rab__', <l__0__32, l__1__32.1, l__2__32>, 'rab__'
                   ) ▶₀ #k )
              case Alice__merged_____1_____9__131
              by contradiction /* cyclic */
            qed
          qed
        qed
      next
        case Alice__merged_____2__1_0_____9__122
        solve( !Const__( 'rab__nonce_a', nonce_a__32 ) ▶₁ #j )
          case Const__nonce_a
          solve( Transition__( <'rab__Alice', 'rab__rab'>, 'rab_____9', %1 ) @ #k )
            case Alice__merged_____9_____11__0_0__101
            by solve( State__Alice( <'rab_____9', 'rab__rab', %1>, return__var__32,
                                    'rab__', <l__0__32, l__1__32.1, l__2__32>, 'rab__'
                      ) ▶₀ #k )
          next
            case Alice__merged_____9_____11__1_0__102
            solve( State__Alice( <'rab_____9', 'rab__rab', %1>, return__var__32,
                                 'rab__', <l__0__32, l__1__32.1, l__2__32>, 'rab__'
                   ) ▶₀ #k )
              case Alice__merged_____2__1_0_____9__122
              by contradiction /* cyclic */
            qed
          qed
        qed
      qed
    next
      case Bob__merged_____0_____3__0_0__85
      solve( State__Bob( <'rab_____0', param, %i>, return__var__0, 'rab__',
                         'rab__', 'rab__'
             ) ▶₀ #j )
        case Init__system
        solve( !Const__( 'rab__priv_key_alice', priv_key_alice__0 ) ▶₁ #j )
          case Const__priv_key_alice
          solve( Transition__( <'rab__Bob', 'rab__rab'>, 'rab_____0', %1 ) @ #k )
            case Bob__merged_____0_____3__0_0__85
            solve( State__Bob( <'rab_____0', 'rab__rab', %1>, return__var__0,
                               'rab__', 'rab__', 'rab__'
                   ) ▶₀ #k )
              case Init__system
              by contradiction /* cyclic */
            qed
          next
            case Bob__merged_____0_____3__1_0__84
            by solve( State__Bob( <'rab_____0', 'rab__rab', %1>, return__var__0,
                                  'rab__', 'rab__', 'rab__'
                      ) ▶₀ #k )
          qed
        qed
      qed
    next
      case Bob__merged_____0_____3__1_0__84
      solve( State__Bob( <'rab_____0', param, %i>, return__var__0, 'rab__',
                         'rab__', 'rab__'
             ) ▶₀ #j )
        case Init__system
        solve( !Const__( 'rab__priv_key_alice', priv_key_alice__0 ) ▶₁ #j )
          case Const__priv_key_alice
          solve( Transition__( <'rab__Bob', 'rab__rab'>, 'rab_____0', %1 ) @ #k )
            case Bob__merged_____0_____3__0_0__85
            by solve( State__Bob( <'rab_____0', 'rab__rab', %1>, return__var__0,
                                  'rab__', 'rab__', 'rab__'
                      ) ▶₀ #k )
          next
            case Bob__merged_____0_____3__1_0__84
            solve( State__Bob( <'rab_____0', 'rab__rab', %1>, return__var__0,
                               'rab__', 'rab__', 'rab__'
                   ) ▶₀ #k )
              case Init__system
              by contradiction /* cyclic */
            qed
          qed
        qed
      qed
    next
      case Bob__merged_____11__0_0_____13__0_1__59
      solve( State__Bob( <'rab_____11__0_0', param, %i>, return__var__25,
                         'rab__', <l__0__25, l__1__25, l__2__25, l__3__25, l__4__25>, t__0__25
             ) ▶₀ #j )
        case Bob__merged_____9_____11__0_0__62_case_1
        solve( Store( 'rab__udp', n__0__25 ) ▶₁ #j )
          case Alice__merged_____15__0_1_____15__0_3__0_1__86
          solve( !ACP__( <'rab__Bob', 'rab__rab'>, 'rab__udp', 'rab__recv'
                 ) ▶₂ #j )
            case Init__system__ACP__0
            solve( !Const__( 'rab__priv_key_bob', priv_key_bob__34 ) ▶₃ #j )
              case Const__priv_key_bob
              solve( !Const__( 'rab__nonce_b', nonce_b__36 ) ▶₄ #j )
                case Const__nonce_b
                solve( !Const__( 'rab__nonce_b', nonce_b__35 ) ▶₅ #j )
                  case Const__nonce_b
                  solve( !Eq__( z, ~n.1 ) ▶₆ #j )
                    case Equality_gen
                    solve( Transition__( <'rab__Bob', 'rab__rab'>, 'rab_____11__0_0', %1
                           ) @ #k )
                      case Bob__merged_____11__0_0_____13__0_1__59
                      solve( State__Bob( <'rab_____11__0_0', 'rab__rab', %1>, return__var__25,
                                         'rab__', <l__0__25, l__1__25, l__2__25, l__3__25.1, l__4__25.1>,
                                         t__0__25
                             ) ▶₀ #k )
                        case Bob__merged_____9_____11__0_0__62
                        by contradiction /* cyclic */
                      qed
                    qed
                  qed
                qed
              qed
            qed
          qed
        next
          case Alice__merged_____1_____9__131
          solve( !ACP__( <'rab__Bob', 'rab__rab'>, 'rab__udp', 'rab__recv'
                 ) ▶₂ #j )
            case Init__system__ACP__0
            solve( !Const__( 'rab__priv_key_bob', priv_key_bob__34 ) ▶₃ #j )
              case Const__priv_key_bob
              solve( !Const__( 'rab__nonce_b', nonce_b__36 ) ▶₄ #j )
                case Const__nonce_b
                solve( !Const__( 'rab__nonce_b', nonce_b__35 ) ▶₅ #j )
                  case Const__nonce_b
                  by solve( !Eq__( z, ~n.1 ) ▶₆ #j )
                qed
              qed
            qed
          qed
        next
          case Alice__merged_____2__1_0_____9__122
          solve( !ACP__( <'rab__Bob', 'rab__rab'>, 'rab__udp', 'rab__recv'
                 ) ▶₂ #j )
            case Init__system__ACP__0
            solve( !Const__( 'rab__priv_key_bob', priv_key_bob__34 ) ▶₃ #j )
              case Const__priv_key_bob
              solve( !Const__( 'rab__nonce_b', nonce_b__36 ) ▶₄ #j )
                case Const__nonce_b
                solve( !Const__( 'rab__nonce_b', nonce_b__35 ) ▶₅ #j )
                  case Const__nonce_b
                  by solve( !Eq__( z, ~n.1 ) ▶₆ #j )
                qed
              qed
            qed
          qed
        next
          case Bob__merged_____3__0_0_____9__79
          solve( !ACP__( <'rab__Bob', 'rab__rab'>, 'rab__udp', 'rab__recv'
                 ) ▶₂ #j )
            case Init__system__ACP__0
            solve( !Const__( 'rab__priv_key_bob', priv_key_bob__34 ) ▶₃ #j )
              case Const__priv_key_bob
              solve( !Const__( 'rab__nonce_b', nonce_b__36 ) ▶₄ #j )
                case Const__nonce_b
                solve( !Const__( 'rab__nonce_b', nonce_b__35 ) ▶₅ #j )
                  case Const__nonce_b
                  by solve( !Eq__( dec(enc(<~n, ~n.1>, pk(~n.2)), ~n.3), ~n.1 ) ▶₆ #j )
                qed
              qed
            qed
          qed
        qed
      next
        case Bob__merged_____9_____11__0_0__62_case_2
        solve( Store( 'rab__udp', n__0__25 ) ▶₁ #j )
          case Alice__merged_____15__0_1_____15__0_3__0_1__86
          solve( !ACP__( <'rab__Bob', 'rab__rab'>, 'rab__udp', 'rab__recv'
                 ) ▶₂ #j )
            case Init__system__ACP__0
            solve( !Const__( 'rab__priv_key_bob', priv_key_bob__34 ) ▶₃ #j )
              case Const__priv_key_bob
              solve( !Const__( 'rab__nonce_b', nonce_b__36 ) ▶₄ #j )
                case Const__nonce_b
                solve( !Const__( 'rab__nonce_b', nonce_b__35 ) ▶₅ #j )
                  case Const__nonce_b
                  solve( !Eq__( z, ~n.1 ) ▶₆ #j )
                    case Equality_gen
                    solve( Transition__( <'rab__Bob', 'rab__rab'>, 'rab_____11__0_0', %1
                           ) @ #k )
                      case Bob__merged_____11__0_0_____13__0_1__59
                      solve( State__Bob( <'rab_____11__0_0', 'rab__rab', %1>, return__var__25,
                                         'rab__', <l__0__25, l__1__25, l__2__25, l__3__25.1, l__4__25.1>,
                                         t__0__25
                             ) ▶₀ #k )
                        case Bob__merged_____9_____11__0_0__62
                        by contradiction /* cyclic */
                      qed
                    qed
                  qed
                qed
              qed
            qed
          qed
        next
          case Alice__merged_____1_____9__131
          solve( !ACP__( <'rab__Bob', 'rab__rab'>, 'rab__udp', 'rab__recv'
                 ) ▶₂ #j )
            case Init__system__ACP__0
            solve( !Const__( 'rab__priv_key_bob', priv_key_bob__34 ) ▶₃ #j )
              case Const__priv_key_bob
              solve( !Const__( 'rab__nonce_b', nonce_b__36 ) ▶₄ #j )
                case Const__nonce_b
                solve( !Const__( 'rab__nonce_b', nonce_b__35 ) ▶₅ #j )
                  case Const__nonce_b
                  by solve( !Eq__( z, ~n.1 ) ▶₆ #j )
                qed
              qed
            qed
          qed
        next
          case Alice__merged_____2__1_0_____9__122
          solve( !ACP__( <'rab__Bob', 'rab__rab'>, 'rab__udp', 'rab__recv'
                 ) ▶₂ #j )
            case Init__system__ACP__0
            solve( !Const__( 'rab__priv_key_bob', priv_key_bob__34 ) ▶₃ #j )
              case Const__priv_key_bob
              solve( !Const__( 'rab__nonce_b', nonce_b__36 ) ▶₄ #j )
                case Const__nonce_b
                solve( !Const__( 'rab__nonce_b', nonce_b__35 ) ▶₅ #j )
                  case Const__nonce_b
                  by solve( !Eq__( z, ~n.1 ) ▶₆ #j )
                qed
              qed
            qed
          qed
        next
          case Bob__merged_____3__1_0_____9__75
          solve( !ACP__( <'rab__Bob', 'rab__rab'>, 'rab__udp', 'rab__recv'
                 ) ▶₂ #j )
            case Init__system__ACP__0
            solve( !Const__( 'rab__priv_key_bob', priv_key_bob__34 ) ▶₃ #j )
              case Const__priv_key_bob
              solve( !Const__( 'rab__nonce_b', nonce_b__36 ) ▶₄ #j )
                case Const__nonce_b
                solve( !Const__( 'rab__nonce_b', nonce_b__35 ) ▶₅ #j )
                  case Const__nonce_b
                  by solve( !Eq__( dec(enc(<~n, ~n.1>, pk(~n.2)), ~n.3), ~n.1 ) ▶₆ #j )
                qed
              qed
            qed
          qed
        qed
      qed
    next
      case Bob__merged_____11__1_0_____13__0_1__55
      solve( State__Bob( <'rab_____11__1_0', param, %i>, return__var__30,
                         'rab__', <l__0__30, l__1__30, l__2__30, l__3__30, l__4__30>, t__0__30
             ) ▶₀ #j )
        case Bob__merged_____9_____11__1_0__63_case_1
        solve( Store( 'rab__udp', n__0__30 ) ▶₁ #j )
          case Alice__merged_____15__0_1_____15__0_3__0_1__86
          solve( !ACP__( <'rab__Bob', 'rab__rab'>, 'rab__udp', 'rab__recv'
                 ) ▶₃ #j )
            case Init__system__ACP__0
            solve( !Const__( 'rab__priv_key_bob', priv_key_bob__34 ) ▶₄ #j )
              case Const__priv_key_bob
              solve( !Const__( 'rab__nonce_b', nonce_b__36 ) ▶₅ #j )
                case Const__nonce_b
                solve( !Const__( 'rab__nonce_b', nonce_b__35 ) ▶₆ #j )
                  case Const__nonce_b
                  solve( !Eq__( z, ~n.1 ) ▶₇ #j )
                    case Equality_gen
                    solve( Transition__( <'rab__Bob', 'rab__rab'>, 'rab_____11__1_0', %1
                           ) @ #k )
                      case Bob__merged_____11__1_0_____13__0_1__55
                      solve( State__Bob( <'rab_____11__1_0', 'rab__rab', %1>, return__var__30,
                                         'rab__', <l__0__30, l__1__30, l__2__30, l__3__30.1, l__4__30.1>,
                                         t__0__30
                             ) ▶₀ #k )
                        case Bob__merged_____9_____11__1_0__63
                        by contradiction /* cyclic */
                      qed
                    qed
                  qed
                qed
              qed
            qed
          qed
        next
          case Alice__merged_____1_____9__131
          solve( !ACP__( <'rab__Bob', 'rab__rab'>, 'rab__udp', 'rab__recv'
                 ) ▶₃ #j )
            case Init__system__ACP__0
            solve( !Const__( 'rab__priv_key_bob', priv_key_bob__34 ) ▶₄ #j )
              case Const__priv_key_bob
              solve( !Const__( 'rab__nonce_b', nonce_b__36 ) ▶₅ #j )
                case Const__nonce_b
                solve( !Const__( 'rab__nonce_b', nonce_b__35 ) ▶₆ #j )
                  case Const__nonce_b
                  solve( !Eq__( z, ~n.1 ) ▶₇ #j )
                    case Equality_gen
                    solve( Transition__( <'rab__Bob', 'rab__rab'>, 'rab_____11__1_0', %1
                           ) @ #k )
                      case Bob__merged_____11__1_0_____13__0_1__55
                      solve( State__Bob( <'rab_____11__1_0', 'rab__rab', %1>, return__var__30,
                                         'rab__', <l__0__30, l__1__30, l__2__30, l__3__30.1, l__4__30.1>,
                                         t__0__30
                             ) ▶₀ #k )
                        case Bob__merged_____9_____11__1_0__63
                        by contradiction /* cyclic */
                      qed
                    qed
                  qed
                qed
              qed
            qed
          qed
        next
          case Alice__merged_____2__1_0_____9__122
          solve( !ACP__( <'rab__Bob', 'rab__rab'>, 'rab__udp', 'rab__recv'
                 ) ▶₃ #j )
            case Init__system__ACP__0
            solve( !Const__( 'rab__priv_key_bob', priv_key_bob__34 ) ▶₄ #j )
              case Const__priv_key_bob
              solve( !Const__( 'rab__nonce_b', nonce_b__36 ) ▶₅ #j )
                case Const__nonce_b
                solve( !Const__( 'rab__nonce_b', nonce_b__35 ) ▶₆ #j )
                  case Const__nonce_b
                  solve( !Eq__( z, ~n.1 ) ▶₇ #j )
                    case Equality_gen
                    solve( Transition__( <'rab__Bob', 'rab__rab'>, 'rab_____11__1_0', %1
                           ) @ #k )
                      case Bob__merged_____11__1_0_____13__0_1__55
                      solve( State__Bob( <'rab_____11__1_0', 'rab__rab', %1>, return__var__30,
                                         'rab__', <l__0__30, l__1__30, l__2__30, l__3__30.1, l__4__30.1>,
                                         t__0__30
                             ) ▶₀ #k )
                        case Bob__merged_____9_____11__1_0__63
                        by contradiction /* cyclic */
                      qed
                    qed
                  qed
                qed
              qed
            qed
          qed
        next
          case Bob__merged_____3__0_0_____9__79
          solve( !ACP__( <'rab__Bob', 'rab__rab'>, 'rab__udp', 'rab__recv'
                 ) ▶₃ #j )
            case Init__system__ACP__0
            solve( !Const__( 'rab__priv_key_bob', priv_key_bob__34 ) ▶₄ #j )
              case Const__priv_key_bob
              solve( !Const__( 'rab__nonce_b', nonce_b__36 ) ▶₅ #j )
                case Const__nonce_b
                solve( !Const__( 'rab__nonce_b', nonce_b__35 ) ▶₆ #j )
                  case Const__nonce_b
                  solve( !Eq__( z, ~n.1 ) ▶₇ #j )
                    case Equality_gen
                    solve( Transition__( <'rab__Bob', 'rab__rab'>, 'rab_____11__1_0', %1
                           ) @ #k )
                      case Bob__merged_____11__1_0_____13__0_1__55
                      solve( State__Bob( <'rab_____11__1_0', 'rab__rab', %1>, return__var__30,
                                         'rab__', <l__0__30, l__1__30, l__2__30, l__3__30.1, l__4__30.1>,
                                         t__0__30
                             ) ▶₀ #k )
                        case Bob__merged_____9_____11__1_0__63
                        by contradiction /* cyclic */
                      qed
                    qed
                  qed
                qed
              qed
            qed
          qed
        qed
      next
        case Bob__merged_____9_____11__1_0__63_case_2
        solve( Store( 'rab__udp', n__0__30 ) ▶₁ #j )
          case Alice__merged_____15__0_1_____15__0_3__0_1__86
          solve( !ACP__( <'rab__Bob', 'rab__rab'>, 'rab__udp', 'rab__recv'
                 ) ▶₃ #j )
            case Init__system__ACP__0
            solve( !Const__( 'rab__priv_key_bob', priv_key_bob__34 ) ▶₄ #j )
              case Const__priv_key_bob
              solve( !Const__( 'rab__nonce_b', nonce_b__36 ) ▶₅ #j )
                case Const__nonce_b
                solve( !Const__( 'rab__nonce_b', nonce_b__35 ) ▶₆ #j )
                  case Const__nonce_b
                  solve( !Eq__( z, ~n.1 ) ▶₇ #j )
                    case Equality_gen
                    solve( Transition__( <'rab__Bob', 'rab__rab'>, 'rab_____11__1_0', %1
                           ) @ #k )
                      case Bob__merged_____11__1_0_____13__0_1__55
                      solve( State__Bob( <'rab_____11__1_0', 'rab__rab', %1>, return__var__30,
                                         'rab__', <l__0__30, l__1__30, l__2__30, l__3__30.1, l__4__30.1>,
                                         t__0__30
                             ) ▶₀ #k )
                        case Bob__merged_____9_____11__1_0__63
                        by contradiction /* cyclic */
                      qed
                    qed
                  qed
                qed
              qed
            qed
          qed
        next
          case Alice__merged_____1_____9__131
          solve( !ACP__( <'rab__Bob', 'rab__rab'>, 'rab__udp', 'rab__recv'
                 ) ▶₃ #j )
            case Init__system__ACP__0
            solve( !Const__( 'rab__priv_key_bob', priv_key_bob__34 ) ▶₄ #j )
              case Const__priv_key_bob
              solve( !Const__( 'rab__nonce_b', nonce_b__36 ) ▶₅ #j )
                case Const__nonce_b
                solve( !Const__( 'rab__nonce_b', nonce_b__35 ) ▶₆ #j )
                  case Const__nonce_b
                  solve( !Eq__( z, ~n.1 ) ▶₇ #j )
                    case Equality_gen
                    solve( Transition__( <'rab__Bob', 'rab__rab'>, 'rab_____11__1_0', %1
                           ) @ #k )
                      case Bob__merged_____11__1_0_____13__0_1__55
                      solve( State__Bob( <'rab_____11__1_0', 'rab__rab', %1>, return__var__30,
                                         'rab__', <l__0__30, l__1__30, l__2__30, l__3__30.1, l__4__30.1>,
                                         t__0__30
                             ) ▶₀ #k )
                        case Bob__merged_____9_____11__1_0__63
                        by contradiction /* cyclic */
                      qed
                    qed
                  qed
                qed
              qed
            qed
          qed
        next
          case Alice__merged_____2__1_0_____9__122
          solve( !ACP__( <'rab__Bob', 'rab__rab'>, 'rab__udp', 'rab__recv'
                 ) ▶₃ #j )
            case Init__system__ACP__0
            solve( !Const__( 'rab__priv_key_bob', priv_key_bob__34 ) ▶₄ #j )
              case Const__priv_key_bob
              solve( !Const__( 'rab__nonce_b', nonce_b__36 ) ▶₅ #j )
                case Const__nonce_b
                solve( !Const__( 'rab__nonce_b', nonce_b__35 ) ▶₆ #j )
                  case Const__nonce_b
                  solve( !Eq__( z, ~n.1 ) ▶₇ #j )
                    case Equality_gen
                    solve( Transition__( <'rab__Bob', 'rab__rab'>, 'rab_____11__1_0', %1
                           ) @ #k )
                      case Bob__merged_____11__1_0_____13__0_1__55
                      solve( State__Bob( <'rab_____11__1_0', 'rab__rab', %1>, return__var__30,
                                         'rab__', <l__0__30, l__1__30, l__2__30, l__3__30.1, l__4__30.1>,
                                         t__0__30
                             ) ▶₀ #k )
                        case Bob__merged_____9_____11__1_0__63
                        by contradiction /* cyclic */
                      qed
                    qed
                  qed
                qed
              qed
            qed
          qed
        next
          case Bob__merged_____3__1_0_____9__75
          solve( !ACP__( <'rab__Bob', 'rab__rab'>, 'rab__udp', 'rab__recv'
                 ) ▶₃ #j )
            case Init__system__ACP__0
            solve( !Const__( 'rab__priv_key_bob', priv_key_bob__34 ) ▶₄ #j )
              case Const__priv_key_bob
              solve( !Const__( 'rab__nonce_b', nonce_b__36 ) ▶₅ #j )
                case Const__nonce_b
                solve( !Const__( 'rab__nonce_b', nonce_b__35 ) ▶₆ #j )
                  case Const__nonce_b
                  solve( !Eq__( z, ~n.1 ) ▶₇ #j )
                    case Equality_gen
                    solve( Transition__( <'rab__Bob', 'rab__rab'>, 'rab_____11__1_0', %1
                           ) @ #k )
                      case Bob__merged_____11__1_0_____13__0_1__55
                      solve( State__Bob( <'rab_____11__1_0', 'rab__rab', %1>, return__var__30,
                                         'rab__', <l__0__30, l__1__30, l__2__30, l__3__30.1, l__4__30.1>,
                                         t__0__30
                             ) ▶₀ #k )
                        case Bob__merged_____9_____11__1_0__63
                        by contradiction /* cyclic */
                      qed
                    qed
                  qed
                qed
              qed
            qed
          qed
        qed
      qed
    next
      case Bob__merged_____13__0_1_____20__49
      solve( State__Bob( <'rab_____13__0_1', param, %i>, return__var__37,
                         'rab__', <l__0__37, l__1__37, l__2__37, l__3__37, l__4__37>, t__0__37
             ) ▶₀ #j )
        case Bob__merged_____11__0_0_____13__0_1__59_case_1
        solve( Transition__( <'rab__Bob', 'rab__rab'>, 'rab_____13__0_1', %1
               ) @ #k )
          case Bob__merged_____13__0_1_____20__49
          solve( State__Bob( <'rab_____13__0_1', 'rab__rab', %1>, return__var__37,
                             'rab__', <l__0__37, l__1__37, l__2__37, l__3__37.1, l__4__37.1>, t__0__37
                 ) ▶₀ #k )
            case Bob__merged_____11__0_0_____13__0_1__59
            by contradiction /* cyclic */
          qed
        qed
      next
        case Bob__merged_____11__0_0_____13__0_1__59_case_2
        solve( Transition__( <'rab__Bob', 'rab__rab'>, 'rab_____13__0_1', %1
               ) @ #k )
          case Bob__merged_____13__0_1_____20__49
          solve( State__Bob( <'rab_____13__0_1', 'rab__rab', %1>, return__var__37,
                             'rab__', <l__0__37, l__1__37, l__2__37, l__3__37.1, l__4__37.1>, t__0__37
                 ) ▶₀ #k )
            case Bob__merged_____11__0_0_____13__0_1__59
            by contradiction /* cyclic */
          qed
        qed
      next
        case Bob__merged_____11__1_0_____13__0_1__55_case_1
        solve( Transition__( <'rab__Bob', 'rab__rab'>, 'rab_____13__0_1', %1
               ) @ #k )
          case Bob__merged_____13__0_1_____20__49
          solve( State__Bob( <'rab_____13__0_1', 'rab__rab', %1>, return__var__37,
                             'rab__', <l__0__37, l__1__37, l__2__37, l__3__37.1, l__4__37.1>, t__0__37
                 ) ▶₀ #k )
            case Bob__merged_____11__1_0_____13__0_1__55
            by contradiction /* cyclic */
          qed
        qed
      next
        case Bob__merged_____11__1_0_____13__0_1__55_case_2
        solve( Transition__( <'rab__Bob', 'rab__rab'>, 'rab_____13__0_1', %1
               ) @ #k )
          case Bob__merged_____13__0_1_____20__49
          solve( State__Bob( <'rab_____13__0_1', 'rab__rab', %1>, return__var__37,
                             'rab__', <l__0__37, l__1__37, l__2__37, l__3__37.1, l__4__37.1>, t__0__37
                 ) ▶₀ #k )
            case Bob__merged_____11__1_0_____13__0_1__55
            by contradiction /* cyclic */
          qed
        qed
      next
        case Bob__merged_____11__1_0_____13__0_1__55_case_3
        solve( Transition__( <'rab__Bob', 'rab__rab'>, 'rab_____13__0_1', %1
               ) @ #k )
          case Bob__merged_____13__0_1_____20__49
          solve( State__Bob( <'rab_____13__0_1', 'rab__rab', %1>, return__var__37,
                             'rab__', <l__0__37, l__1__37, l__2__37, l__3__37.1, l__4__37.1>, t__0__37
                 ) ▶₀ #k )
            case Bob__merged_____11__1_0_____13__0_1__55
            by contradiction /* cyclic */
          qed
        qed
      next
        case Bob__merged_____11__1_0_____13__0_1__55_case_4
        solve( Transition__( <'rab__Bob', 'rab__rab'>, 'rab_____13__0_1', %1
               ) @ #k )
          case Bob__merged_____13__0_1_____20__49
          solve( State__Bob( <'rab_____13__0_1', 'rab__rab', %1>, return__var__37,
                             'rab__', <l__0__37, l__1__37, l__2__37, l__3__37.1, l__4__37.1>, t__0__37
                 ) ▶₀ #k )
            case Bob__merged_____11__1_0_____13__0_1__55
            by contradiction /* cyclic */
          qed
        qed
      next
        case Bob__merged_____11__1_0_____13__0_1__55_case_5
        solve( Transition__( <'rab__Bob', 'rab__rab'>, 'rab_____13__0_1', %1
               ) @ #k )
          case Bob__merged_____13__0_1_____20__49
          solve( State__Bob( <'rab_____13__0_1', 'rab__rab', %1>, return__var__37,
                             'rab__', <l__0__37, l__1__37, l__2__37, l__3__37.1, l__4__37.1>, t__0__37
                 ) ▶₀ #k )
            case Bob__merged_____11__1_0_____13__0_1__55
            by contradiction /* cyclic */
          qed
        qed
      next
        case Bob__merged_____11__1_0_____13__0_1__55_case_6
        solve( Transition__( <'rab__Bob', 'rab__rab'>, 'rab_____13__0_1', %1
               ) @ #k )
          case Bob__merged_____13__0_1_____20__49
          solve( State__Bob( <'rab_____13__0_1', 'rab__rab', %1>, return__var__37,
                             'rab__', <l__0__37, l__1__37, l__2__37, l__3__37.1, l__4__37.1>, t__0__37
                 ) ▶₀ #k )
            case Bob__merged_____11__1_0_____13__0_1__55
            by contradiction /* cyclic */
          qed
        qed
      next
        case Bob__merged_____11__1_0_____13__0_1__55_case_7
        solve( Transition__( <'rab__Bob', 'rab__rab'>, 'rab_____13__0_1', %1
               ) @ #k )
          case Bob__merged_____13__0_1_____20__49
          solve( State__Bob( <'rab_____13__0_1', 'rab__rab', %1>, return__var__37,
                             'rab__', <l__0__37, l__1__37, l__2__37, l__3__37.1, l__4__37.1>, t__0__37
                 ) ▶₀ #k )
            case Bob__merged_____11__1_0_____13__0_1__55
            by contradiction /* cyclic */
          qed
        qed
      next
        case Bob__merged_____11__1_0_____13__0_1__55_case_8
        solve( Transition__( <'rab__Bob', 'rab__rab'>, 'rab_____13__0_1', %1
               ) @ #k )
          case Bob__merged_____13__0_1_____20__49
          solve( State__Bob( <'rab_____13__0_1', 'rab__rab', %1>, return__var__37,
                             'rab__', <l__0__37, l__1__37, l__2__37, l__3__37.1, l__4__37.1>, t__0__37
                 ) ▶₀ #k )
            case Bob__merged_____11__1_0_____13__0_1__55
            by contradiction /* cyclic */
          qed
        qed
      qed
    next
      case Bob__merged_____3__0_0_____9__79
      solve( State__Bob( <'rab_____3__0_0', param, %i>, return__var__4,
                         'rab__', <l__0__4, l__1__4>, t__0__4
             ) ▶₀ #j )
        case Bob__merged_____0_____3__0_0__85
        solve( !ACP__( <'rab__Bob', 'rab__rab'>, 'rab__udp', 'rab__recv'
               ) ▶₂ #j )
          case Init__system__ACP__0
          solve( !Const__( 'rab__priv_key_bob', priv_key_bob__13 ) ▶₃ #j )
            case Const__priv_key_bob
            solve( !ACP__( <'rab__Bob', 'rab__rab'>, 'rab__udp', 'rab__send'
                   ) ▶₄ #j )
              case Init__system__ACP__1
              solve( !Const__( 'rab__nonce_b', nonce_b__21 ) ▶₅ #j )
                case Const__nonce_b
                solve( !Const__( 'rab__priv_key_alice', priv_key_alice__14 ) ▶₆ #j )
                  case Const__priv_key_alice
                  solve( !Const__( 'rab__nonce_b', nonce_b__14 ) ▶₇ #j )
                    case Const__nonce_b
                    solve( !Const__( 'rab__nonce_a', nonce_a__14 ) ▶₈ #j )
                      case Const__nonce_a
                      solve( Transition__( <'rab__Bob', 'rab__rab'>, 'rab_____3__0_0', %1
                             ) @ #k )
                        case Bob__merged_____3__0_0_____9__79
                        solve( State__Bob( <'rab_____3__0_0', 'rab__rab', %1>, return__var__4,
                                           'rab__', <l__0__4, l__1__4>, t__0__4
                               ) ▶₀ #k )
                          case Bob__merged_____0_____3__0_0__85
                          by contradiction /* cyclic */
                        qed
                      qed
                    qed
                  qed
                qed
              qed
            qed
          qed
        qed
      qed
    next
      case Bob__merged_____3__1_0_____9__75
      solve( State__Bob( <'rab_____3__1_0', param, %i>, return__var__9,
                         'rab__', <l__0__9, l__1__9>, t__0__9
             ) ▶₀ #j )
        case Bob__merged_____0_____3__1_0__84
        solve( !ACP__( <'rab__Bob', 'rab__rab'>, 'rab__udp', 'rab__recv'
               ) ▶₃ #j )
          case Init__system__ACP__0
          solve( !Const__( 'rab__priv_key_bob', priv_key_bob__13 ) ▶₄ #j )
            case Const__priv_key_bob
            solve( !ACP__( <'rab__Bob', 'rab__rab'>, 'rab__udp', 'rab__send'
                   ) ▶₅ #j )
              case Init__system__ACP__1
              solve( !Const__( 'rab__nonce_b', nonce_b__21 ) ▶₆ #j )
                case Const__nonce_b
                solve( !Const__( 'rab__priv_key_alice', priv_key_alice__14 ) ▶₇ #j )
                  case Const__priv_key_alice
                  solve( !Const__( 'rab__nonce_b', nonce_b__14 ) ▶₈ #j )
                    case Const__nonce_b
                    solve( !Const__( 'rab__nonce_a', nonce_a__14 ) ▶₉ #j )
                      case Const__nonce_a
                      solve( Transition__( <'rab__Bob', 'rab__rab'>, 'rab_____3__1_0', %1
                             ) @ #k )
                        case Bob__merged_____3__1_0_____9__75
                        solve( State__Bob( <'rab_____3__1_0', 'rab__rab', %1>, return__var__9,
                                           'rab__', <l__0__9, l__1__9>, t__0__9
                               ) ▶₀ #k )
                          case Bob__merged_____0_____3__1_0__84
                          by contradiction /* cyclic */
                        qed
                      qed
                    qed
                  qed
                qed
              qed
            qed
          qed
        qed
      qed
    next
      case Bob__merged_____9_____11__0_0__62
      solve( State__Bob( <'rab_____9', param, %i>, return__var__22, 'rab__',
                         <l__0__22, l__1__22, l__2__22>, t__0__22
             ) ▶₀ #j )
        case Bob__merged_____3__0_0_____9__79
        solve( !Const__( 'rab__nonce_b', nonce_b__22 ) ▶₁ #j )
          case Const__nonce_b
          solve( Transition__( <'rab__Bob', 'rab__rab'>, 'rab_____9', %1 ) @ #k )
            case Bob__merged_____9_____11__0_0__62
            solve( State__Bob( <'rab_____9', 'rab__rab', %1>, return__var__22,
                               'rab__', <l__0__22, l__1__22.1, l__2__22.1>, t__0__22
                   ) ▶₀ #k )
              case Bob__merged_____3__0_0_____9__79
              by contradiction /* cyclic */
            qed
          next
            case Bob__merged_____9_____11__1_0__63
            by solve( State__Bob( <'rab_____9', 'rab__rab', %1>, return__var__22,
                                  'rab__', <l__0__22, l__1__22.1, l__2__22.1>, t__0__22
                      ) ▶₀ #k )
          qed
        qed
      next
        case Bob__merged_____3__1_0_____9__75
        solve( !Const__( 'rab__nonce_b', nonce_b__22 ) ▶₁ #j )
          case Const__nonce_b
          solve( Transition__( <'rab__Bob', 'rab__rab'>, 'rab_____9', %1 ) @ #k )
            case Bob__merged_____9_____11__0_0__62
            solve( State__Bob( <'rab_____9', 'rab__rab', %1>, return__var__22,
                               'rab__', <l__0__22, l__1__22.1, l__2__22.1>, t__0__22
                   ) ▶₀ #k )
              case Bob__merged_____3__1_0_____9__75
              by contradiction /* cyclic */
            qed
          next
            case Bob__merged_____9_____11__1_0__63
            by solve( State__Bob( <'rab_____9', 'rab__rab', %1>, return__var__22,
                                  'rab__', <l__0__22, l__1__22.1, l__2__22.1>, t__0__22
                      ) ▶₀ #k )
          qed
        qed
      qed
    next
      case Bob__merged_____9_____11__1_0__63
      solve( State__Bob( <'rab_____9', param, %i>, return__var__22, 'rab__',
                         <l__0__22, l__1__22, l__2__22>, t__0__22
             ) ▶₀ #j )
        case Bob__merged_____3__0_0_____9__79
        solve( !Const__( 'rab__nonce_b', nonce_b__22 ) ▶₁ #j )
          case Const__nonce_b
          solve( Transition__( <'rab__Bob', 'rab__rab'>, 'rab_____9', %1 ) @ #k )
            case Bob__merged_____9_____11__0_0__62
            by solve( State__Bob( <'rab_____9', 'rab__rab', %1>, return__var__22,
                                  'rab__', <l__0__22, l__1__22.1, l__2__22.1>, t__0__22
                      ) ▶₀ #k )
          next
            case Bob__merged_____9_____11__1_0__63
            solve( State__Bob( <'rab_____9', 'rab__rab', %1>, return__var__22,
                               'rab__', <l__0__22, l__1__22.1, l__2__22.1>, t__0__22
                   ) ▶₀ #k )
              case Bob__merged_____3__0_0_____9__79
              by contradiction /* cyclic */
            qed
          qed
        qed
      next
        case Bob__merged_____3__1_0_____9__75
        solve( !Const__( 'rab__nonce_b', nonce_b__22 ) ▶₁ #j )
          case Const__nonce_b
          solve( Transition__( <'rab__Bob', 'rab__rab'>, 'rab_____9', %1 ) @ #k )
            case Bob__merged_____9_____11__0_0__62
            by solve( State__Bob( <'rab_____9', 'rab__rab', %1>, return__var__22,
                                  'rab__', <l__0__22, l__1__22.1, l__2__22.1>, t__0__22
                      ) ▶₀ #k )
          next
            case Bob__merged_____9_____11__1_0__63
            solve( State__Bob( <'rab_____9', 'rab__rab', %1>, return__var__22,
                               'rab__', <l__0__22, l__1__22.1, l__2__22.1>, t__0__22
                   ) ▶₀ #k )
              case Bob__merged_____3__1_0_____9__75
              by contradiction /* cyclic */
            qed
          qed
        qed
      qed
    qed
  next
    case case_2
    solve( Transition__( x, p, %i ) @ #j )
      case Alice__init_filesys_____0_____1__0
      solve( State__Alice( <'rab_____0', param, %i>, return__var__0, 'rab__',
                           'rab__', 'rab__'
             ) ▶₀ #j )
        case Init__system
        solve( !Const__( 'rab__priv_key_bob', priv_key_bob__0 ) ▶₁ #j )
          case Const__priv_key_bob
          solve( Transition__( <'rab__Alice', 'rab__rab'>, 'rab_____0', %1 ) @ #k )
            case Alice__init_filesys_____0_____1__0
            solve( State__Alice( <'rab_____0', 'rab__rab', %1>, return__var__0,
                                 'rab__', 'rab__', 'rab__'
                   ) ▶₀ #k )
              case Init__system
              by contradiction /* cyclic */
            qed
          next
            case Alice__merged_____0_____2__1_0__133
            by solve( State__Alice( <'rab_____0', 'rab__rab', %1>, return__var__0,
                                    'rab__', 'rab__', 'rab__'
                      ) ▶₀ #k )
          qed
        qed
      qed
    next
      case Alice__merged_____0_____2__1_0__133
      solve( State__Alice( <'rab_____0', param, %i>, return__var__0, 'rab__',
                           'rab__', 'rab__'
             ) ▶₀ #j )
        case Init__system
        solve( !Const__( 'rab__priv_key_bob', priv_key_bob__0 ) ▶₁ #j )
          case Const__priv_key_bob
          solve( Transition__( <'rab__Alice', 'rab__rab'>, 'rab_____0', %1 ) @ #k )
            case Alice__init_filesys_____0_____1__0
            by solve( State__Alice( <'rab_____0', 'rab__rab', %1>, return__var__0,
                                    'rab__', 'rab__', 'rab__'
                      ) ▶₀ #k )
          next
            case Alice__merged_____0_____2__1_0__133
            solve( State__Alice( <'rab_____0', 'rab__rab', %1>, return__var__0,
                                 'rab__', 'rab__', 'rab__'
                   ) ▶₀ #k )
              case Init__system
              by contradiction /* cyclic */
            qed
          qed
        qed
      qed
    next
      case Alice__merged_____11__0_0_____15__0_1__98
      solve( State__Alice( <'rab_____11__0_0', param, %i>, return__var__35,
                           'rab__', <l__0__35, l__1__35, l__2__35, l__3__35, l__4__35>, 'rab__'
             ) ▶₀ #j )
        case Alice__merged_____9_____11__0_0__101_case_1
        solve( Store( 'rab__udp', n__0__35 ) ▶₁ #j )
          case Alice__merged_____15__0_1_____15__0_3__0_1__86
          solve( !ACP__( <'rab__Alice', 'rab__rab'>, 'rab__udp', 'rab__recv'
                 ) ▶₂ #j )
            case Init__system__ACP__2
            solve( !Const__( 'rab__priv_key_alice', priv_key_alice__44 ) ▶₃ #j )
              case Const__priv_key_alice
              solve( !Const__( 'rab__nonce_a', nonce_a__48 ) ▶₄ #j )
                case Const__nonce_a
                solve( !Const__( 'rab__nonce_a', nonce_a__47 ) ▶₅ #j )
                  case Const__nonce_a
                  by solve( !Eq__( fst(z), ~n ) ▶₆ #j )
                qed
              qed
            qed
          qed
        next
          case Alice__merged_____1_____9__131
          solve( !ACP__( <'rab__Alice', 'rab__rab'>, 'rab__udp', 'rab__recv'
                 ) ▶₂ #j )
            case Init__system__ACP__2
            solve( !Const__( 'rab__priv_key_alice', priv_key_alice__44 ) ▶₃ #j )
              case Const__priv_key_alice
              solve( !Const__( 'rab__nonce_a', nonce_a__48 ) ▶₄ #j )
                case Const__nonce_a
                solve( !Const__( 'rab__nonce_a', nonce_a__47 ) ▶₅ #j )
                  case Const__nonce_a
                  solve( !Eq__( z, ~n ) ▶₆ #j )
                    case Equality_gen
                    solve( Transition__( <'rab__Alice', 'rab__rab'>, 'rab_____11__0_0', %1
                           ) @ #k )
                      case Alice__merged_____11__0_0_____15__0_1__98
                      solve( State__Alice( <'rab_____11__0_0', 'rab__rab', %1>,
                                           return__var__35, 'rab__',
                                           <l__0__35, l__1__35, l__2__35, l__3__35.1, l__4__35>, 'rab__'
                             ) ▶₀ #k )
                        case Alice__merged_____9_____11__0_0__101
                        by contradiction /* cyclic */
                      qed
                    qed
                  qed
                qed
              qed
            qed
          qed
        next
          case Bob__merged_____3__0_0_____9__79
          solve( !ACP__( <'rab__Alice', 'rab__rab'>, 'rab__udp', 'rab__recv'
                 ) ▶₂ #j )
            case Init__system__ACP__2
            solve( !Const__( 'rab__priv_key_alice', priv_key_alice__44 ) ▶₃ #j )
              case Const__priv_key_alice
              solve( !Const__( 'rab__nonce_a', nonce_a__48 ) ▶₄ #j )
                case Const__nonce_a
                solve( !Const__( 'rab__nonce_a', nonce_a__47 ) ▶₅ #j )
                  case Const__nonce_a
                  by solve( !Eq__( fst(dec(enc(<~n, ~n.2>, pk(~n.3)), ~n.3)), ~n ) ▶₆ #j )
                qed
              qed
            qed
          qed
        next
          case Bob__merged_____3__1_0_____9__75
          solve( !ACP__( <'rab__Alice', 'rab__rab'>, 'rab__udp', 'rab__recv'
                 ) ▶₂ #j )
            case Init__system__ACP__2
            solve( !Const__( 'rab__priv_key_alice', priv_key_alice__44 ) ▶₃ #j )
              case Const__priv_key_alice
              solve( !Const__( 'rab__nonce_a', nonce_a__48 ) ▶₄ #j )
                case Const__nonce_a
                solve( !Const__( 'rab__nonce_a', nonce_a__47 ) ▶₅ #j )
                  case Const__nonce_a
                  by solve( !Eq__( fst(dec(enc(<~n, ~n.2>, pk(~n.3)), ~n.3)), ~n ) ▶₆ #j )
                qed
              qed
            qed
          qed
        qed
      next
        case Alice__merged_____9_____11__0_0__101_case_2
        solve( Store( 'rab__udp', n__0__35 ) ▶₁ #j )
          case Alice__merged_____15__0_1_____15__0_3__0_1__86
          solve( !ACP__( <'rab__Alice', 'rab__rab'>, 'rab__udp', 'rab__recv'
                 ) ▶₂ #j )
            case Init__system__ACP__2
            solve( !Const__( 'rab__priv_key_alice', priv_key_alice__44 ) ▶₃ #j )
              case Const__priv_key_alice
              solve( !Const__( 'rab__nonce_a', nonce_a__48 ) ▶₄ #j )
                case Const__nonce_a
                solve( !Const__( 'rab__nonce_a', nonce_a__47 ) ▶₅ #j )
                  case Const__nonce_a
                  by solve( !Eq__( fst(z), ~n ) ▶₆ #j )
                qed
              qed
            qed
          qed
        next
          case Alice__merged_____2__1_0_____9__122
          solve( !ACP__( <'rab__Alice', 'rab__rab'>, 'rab__udp', 'rab__recv'
                 ) ▶₂ #j )
            case Init__system__ACP__2
            solve( !Const__( 'rab__priv_key_alice', priv_key_alice__44 ) ▶₃ #j )
              case Const__priv_key_alice
              solve( !Const__( 'rab__nonce_a', nonce_a__48 ) ▶₄ #j )
                case Const__nonce_a
                solve( !Const__( 'rab__nonce_a', nonce_a__47 ) ▶₅ #j )
                  case Const__nonce_a
                  solve( !Eq__( z, ~n ) ▶₆ #j )
                    case Equality_gen
                    solve( Transition__( <'rab__Alice', 'rab__rab'>, 'rab_____11__0_0', %1
                           ) @ #k )
                      case Alice__merged_____11__0_0_____15__0_1__98
                      solve( State__Alice( <'rab_____11__0_0', 'rab__rab', %1>,
                                           return__var__35, 'rab__',
                                           <l__0__35, l__1__35, l__2__35, l__3__35.1, l__4__35>, 'rab__'
                             ) ▶₀ #k )
                        case Alice__merged_____9_____11__0_0__101
                        by contradiction /* cyclic */
                      qed
                    qed
                  qed
                qed
              qed
            qed
          qed
        next
          case Bob__merged_____3__0_0_____9__79
          solve( !ACP__( <'rab__Alice', 'rab__rab'>, 'rab__udp', 'rab__recv'
                 ) ▶₂ #j )
            case Init__system__ACP__2
            solve( !Const__( 'rab__priv_key_alice', priv_key_alice__44 ) ▶₃ #j )
              case Const__priv_key_alice
              solve( !Const__( 'rab__nonce_a', nonce_a__48 ) ▶₄ #j )
                case Const__nonce_a
                solve( !Const__( 'rab__nonce_a', nonce_a__47 ) ▶₅ #j )
                  case Const__nonce_a
                  by solve( !Eq__( fst(dec(enc(<~n, ~n.2>, pk(~n.3)), ~n.3)), ~n ) ▶₆ #j )
                qed
              qed
            qed
          qed
        next
          case Bob__merged_____3__1_0_____9__75
          solve( !ACP__( <'rab__Alice', 'rab__rab'>, 'rab__udp', 'rab__recv'
                 ) ▶₂ #j )
            case Init__system__ACP__2
            solve( !Const__( 'rab__priv_key_alice', priv_key_alice__44 ) ▶₃ #j )
              case Const__priv_key_alice
              solve( !Const__( 'rab__nonce_a', nonce_a__48 ) ▶₄ #j )
                case Const__nonce_a
                solve( !Const__( 'rab__nonce_a', nonce_a__47 ) ▶₅ #j )
                  case Const__nonce_a
                  by solve( !Eq__( fst(dec(enc(<~n, ~n.2>, pk(~n.3)), ~n.3)), ~n ) ▶₆ #j )
                qed
              qed
            qed
          qed
        qed
      qed
    next
      case Alice__merged_____11__1_0_____15__0_1__94
      solve( State__Alice( <'rab_____11__1_0', param, %i>, return__var__40,
                           'rab__', <l__0__40, l__1__40, l__2__40, l__3__40, l__4__40>, 'rab__'
             ) ▶₀ #j )
        case Alice__merged_____9_____11__1_0__102_case_1
        solve( Store( 'rab__udp', n__0__40 ) ▶₁ #j )
          case Alice__merged_____15__0_1_____15__0_3__0_1__86
          solve( !ACP__( <'rab__Alice', 'rab__rab'>, 'rab__udp', 'rab__recv'
                 ) ▶₃ #j )
            case Init__system__ACP__2
            solve( !Const__( 'rab__priv_key_alice', priv_key_alice__44 ) ▶₄ #j )
              case Const__priv_key_alice
              solve( !Const__( 'rab__nonce_a', nonce_a__48 ) ▶₅ #j )
                case Const__nonce_a
                solve( !Const__( 'rab__nonce_a', nonce_a__47 ) ▶₆ #j )
                  case Const__nonce_a
                  solve( !Eq__( z, ~n ) ▶₇ #j )
                    case Equality_gen
                    solve( Transition__( <'rab__Alice', 'rab__rab'>, 'rab_____11__1_0', %1
                           ) @ #k )
                      case Alice__merged_____11__1_0_____15__0_1__94
                      solve( State__Alice( <'rab_____11__1_0', 'rab__rab', %1>,
                                           return__var__40, 'rab__',
                                           <l__0__40, l__1__40, l__2__40, l__3__40.1, l__4__40>, 'rab__'
                             ) ▶₀ #k )
                        case Alice__merged_____9_____11__1_0__102
                        by contradiction /* cyclic */
                      qed
                    qed
                  qed
                qed
              qed
            qed
          qed
        next
          case Alice__merged_____1_____9__131
          solve( !ACP__( <'rab__Alice', 'rab__rab'>, 'rab__udp', 'rab__recv'
                 ) ▶₃ #j )
            case Init__system__ACP__2
            solve( !Const__( 'rab__priv_key_alice', priv_key_alice__44 ) ▶₄ #j )
              case Const__priv_key_alice
              solve( !Const__( 'rab__nonce_a', nonce_a__48 ) ▶₅ #j )
                case Const__nonce_a
                solve( !Const__( 'rab__nonce_a', nonce_a__47 ) ▶₆ #j )
                  case Const__nonce_a
                  solve( !Eq__( z, ~n ) ▶₇ #j )
                    case Equality_gen
                    solve( Transition__( <'rab__Alice', 'rab__rab'>, 'rab_____11__1_0', %1
                           ) @ #k )
                      case Alice__merged_____11__1_0_____15__0_1__94
                      solve( State__Alice( <'rab_____11__1_0', 'rab__rab', %1>,
                                           return__var__40, 'rab__',
                                           <l__0__40, l__1__40, l__2__40, l__3__40.1, l__4__40>, 'rab__'
                             ) ▶₀ #k )
                        case Alice__merged_____9_____11__1_0__102
                        by contradiction /* cyclic */
                      qed
                    qed
                  qed
                qed
              qed
            qed
          qed
        next
          case Bob__merged_____3__0_0_____9__79
          solve( !ACP__( <'rab__Alice', 'rab__rab'>, 'rab__udp', 'rab__recv'
                 ) ▶₃ #j )
            case Init__system__ACP__2
            solve( !Const__( 'rab__priv_key_alice', priv_key_alice__44 ) ▶₄ #j )
              case Const__priv_key_alice
              solve( !Const__( 'rab__nonce_a', nonce_a__48 ) ▶₅ #j )
                case Const__nonce_a
                solve( !Const__( 'rab__nonce_a', nonce_a__47 ) ▶₆ #j )
                  case Const__nonce_a
                  solve( !Eq__( z, ~n ) ▶₇ #j )
                    case Equality_gen
                    solve( Transition__( <'rab__Alice', 'rab__rab'>, 'rab_____11__1_0', %1
                           ) @ #k )
                      case Alice__merged_____11__1_0_____15__0_1__94
                      solve( State__Alice( <'rab_____11__1_0', 'rab__rab', %1>,
                                           return__var__40, 'rab__',
                                           <l__0__40, l__1__40, l__2__40, l__3__40.1, l__4__40>, 'rab__'
                             ) ▶₀ #k )
                        case Alice__merged_____9_____11__1_0__102
                        by contradiction /* cyclic */
                      qed
                    qed
                  qed
                qed
              qed
            qed
          qed
        next
          case Bob__merged_____3__1_0_____9__75
          solve( !ACP__( <'rab__Alice', 'rab__rab'>, 'rab__udp', 'rab__recv'
                 ) ▶₃ #j )
            case Init__system__ACP__2
            solve( !Const__( 'rab__priv_key_alice', priv_key_alice__44 ) ▶₄ #j )
              case Const__priv_key_alice
              solve( !Const__( 'rab__nonce_a', nonce_a__48 ) ▶₅ #j )
                case Const__nonce_a
                solve( !Const__( 'rab__nonce_a', nonce_a__47 ) ▶₆ #j )
                  case Const__nonce_a
                  solve( !Eq__( z, ~n ) ▶₇ #j )
                    case Equality_gen
                    solve( Transition__( <'rab__Alice', 'rab__rab'>, 'rab_____11__1_0', %1
                           ) @ #k )
                      case Alice__merged_____11__1_0_____15__0_1__94
                      solve( State__Alice( <'rab_____11__1_0', 'rab__rab', %1>,
                                           return__var__40, 'rab__',
                                           <l__0__40, l__1__40, l__2__40, l__3__40.1, l__4__40>, 'rab__'
                             ) ▶₀ #k )
                        case Alice__merged_____9_____11__1_0__102
                        by contradiction /* cyclic */
                      qed
                    qed
                  qed
                qed
              qed
            qed
          qed
        qed
      next
        case Alice__merged_____9_____11__1_0__102_case_2
        solve( Store( 'rab__udp', n__0__40 ) ▶₁ #j )
          case Alice__merged_____15__0_1_____15__0_3__0_1__86
          solve( !ACP__( <'rab__Alice', 'rab__rab'>, 'rab__udp', 'rab__recv'
                 ) ▶₃ #j )
            case Init__system__ACP__2
            solve( !Const__( 'rab__priv_key_alice', priv_key_alice__44 ) ▶₄ #j )
              case Const__priv_key_alice
              solve( !Const__( 'rab__nonce_a', nonce_a__48 ) ▶₅ #j )
                case Const__nonce_a
                solve( !Const__( 'rab__nonce_a', nonce_a__47 ) ▶₆ #j )
                  case Const__nonce_a
                  solve( !Eq__( z, ~n ) ▶₇ #j )
                    case Equality_gen
                    solve( Transition__( <'rab__Alice', 'rab__rab'>, 'rab_____11__1_0', %1
                           ) @ #k )
                      case Alice__merged_____11__1_0_____15__0_1__94
                      solve( State__Alice( <'rab_____11__1_0', 'rab__rab', %1>,
                                           return__var__40, 'rab__',
                                           <l__0__40, l__1__40, l__2__40, l__3__40.1, l__4__40>, 'rab__'
                             ) ▶₀ #k )
                        case Alice__merged_____9_____11__1_0__102
                        by contradiction /* cyclic */
                      qed
                    qed
                  qed
                qed
              qed
            qed
          qed
        next
          case Alice__merged_____2__1_0_____9__122
          solve( !ACP__( <'rab__Alice', 'rab__rab'>, 'rab__udp', 'rab__recv'
                 ) ▶₃ #j )
            case Init__system__ACP__2
            solve( !Const__( 'rab__priv_key_alice', priv_key_alice__44 ) ▶₄ #j )
              case Const__priv_key_alice
              solve( !Const__( 'rab__nonce_a', nonce_a__48 ) ▶₅ #j )
                case Const__nonce_a
                solve( !Const__( 'rab__nonce_a', nonce_a__47 ) ▶₆ #j )
                  case Const__nonce_a
                  solve( !Eq__( z, ~n ) ▶₇ #j )
                    case Equality_gen
                    solve( Transition__( <'rab__Alice', 'rab__rab'>, 'rab_____11__1_0', %1
                           ) @ #k )
                      case Alice__merged_____11__1_0_____15__0_1__94
                      solve( State__Alice( <'rab_____11__1_0', 'rab__rab', %1>,
                                           return__var__40, 'rab__',
                                           <l__0__40, l__1__40, l__2__40, l__3__40.1, l__4__40>, 'rab__'
                             ) ▶₀ #k )
                        case Alice__merged_____9_____11__1_0__102
                        by contradiction /* cyclic */
                      qed
                    qed
                  qed
                qed
              qed
            qed
          qed
        next
          case Bob__merged_____3__0_0_____9__79
          solve( !ACP__( <'rab__Alice', 'rab__rab'>, 'rab__udp', 'rab__recv'
                 ) ▶₃ #j )
            case Init__system__ACP__2
            solve( !Const__( 'rab__priv_key_alice', priv_key_alice__44 ) ▶₄ #j )
              case Const__priv_key_alice
              solve( !Const__( 'rab__nonce_a', nonce_a__48 ) ▶₅ #j )
                case Const__nonce_a
                solve( !Const__( 'rab__nonce_a', nonce_a__47 ) ▶₆ #j )
                  case Const__nonce_a
                  solve( !Eq__( z, ~n ) ▶₇ #j )
                    case Equality_gen
                    solve( Transition__( <'rab__Alice', 'rab__rab'>, 'rab_____11__1_0', %1
                           ) @ #k )
                      case Alice__merged_____11__1_0_____15__0_1__94
                      solve( State__Alice( <'rab_____11__1_0', 'rab__rab', %1>,
                                           return__var__40, 'rab__',
                                           <l__0__40, l__1__40, l__2__40, l__3__40.1, l__4__40>, 'rab__'
                             ) ▶₀ #k )
                        case Alice__merged_____9_____11__1_0__102
                        by contradiction /* cyclic */
                      qed
                    qed
                  qed
                qed
              qed
            qed
          qed
        next
          case Bob__merged_____3__1_0_____9__75
          solve( !ACP__( <'rab__Alice', 'rab__rab'>, 'rab__udp', 'rab__recv'
                 ) ▶₃ #j )
            case Init__system__ACP__2
            solve( !Const__( 'rab__priv_key_alice', priv_key_alice__44 ) ▶₄ #j )
              case Const__priv_key_alice
              solve( !Const__( 'rab__nonce_a', nonce_a__48 ) ▶₅ #j )
                case Const__nonce_a
                solve( !Const__( 'rab__nonce_a', nonce_a__47 ) ▶₆ #j )
                  case Const__nonce_a
                  solve( !Eq__( z, ~n ) ▶₇ #j )
                    case Equality_gen
                    solve( Transition__( <'rab__Alice', 'rab__rab'>, 'rab_____11__1_0', %1
                           ) @ #k )
                      case Alice__merged_____11__1_0_____15__0_1__94
                      solve( State__Alice( <'rab_____11__1_0', 'rab__rab', %1>,
                                           return__var__40, 'rab__',
                                           <l__0__40, l__1__40, l__2__40, l__3__40.1, l__4__40>, 'rab__'
                             ) ▶₀ #k )
                        case Alice__merged_____9_____11__1_0__102
                        by contradiction /* cyclic */
                      qed
                    qed
                  qed
                qed
              qed
            qed
          qed
        qed
      qed
    next
      case Alice__merged_____15__0_1_____15__0_3__0_1__86
      solve( !Const__( 'rab__nonce_b', nonce_b__49 ) ▶₁ #j )
        case Const__nonce_b
        solve( !ACP__( <'rab__Alice', param>, 'rab__udp', 'rab__send' ) ▶₂ #j )
          case Init__system__ACP__3
          solve( Transition__( <'rab__Alice', 'rab__rab'>, 'rab_____15__0_1', %i
                 ) @ #k )
            case Alice__merged_____15__0_1_____15__0_3__0_1__86
            solve( !Const__( 'rab__nonce_b', nonce_b__49 ) ▶₁ #k )
              case Const__nonce_b
              solve( !ACP__( <'rab__Alice', 'rab__rab'>, 'rab__udp', 'rab__send'
                     ) ▶₂ #k )
                case Init__system__ACP__3
                solve( State__Alice( <'rab_____15__0_1', 'rab__rab', %i>,
                                     return__var__49, 'rab__',
                                     <l__0__49, l__1__49, l__2__49, l__3__49, l__4__49, l__5__49, l__6__49>,
                                     'rab__'
                       ) ▶₀ #j )
                  case Alice__merged_____11__0_0_____15__0_1__98_case_1
                  solve( State__Alice( <'rab_____15__0_1', 'rab__rab', %1>,
                                       return__var__49, 'rab__',
                                       <l__0__49, l__1__49, l__2__49, l__3__49, l__4__49, l__5__49, l__6__49>,
                                       'rab__'
                         ) ▶₀ #k )
                    case Alice__merged_____11__0_0_____15__0_1__98
                    by contradiction /* cyclic */
                  qed
                next
                  case Alice__merged_____11__0_0_____15__0_1__98_case_2
                  by solve( !KU( ~n__0__20 ) @ #vk )
                next
                  case Alice__merged_____11__1_0_____15__0_1__94_case_1
                  solve( !KU( enc(<~n, l__0__49>, ~n.1) ) @ #vk )
                    case Alice__merged_____1_____9__131
                    solve( State__Alice( <'rab_____15__0_1', 'rab__rab', %1>,
                                         return__var__49, 'rab__',
                                         <l__0__49, l__1__49, l__2__49, l__3__49, l__4__49, l__5__49, l__6__49
                                         >,
                                         'rab__'
                           ) ▶₀ #k )
                      case Alice__merged_____11__1_0_____15__0_1__94
                      by contradiction /* cyclic */
                    qed
                  next
                    case c_enc
                    by solve( !KU( ~n.1 ) @ #vk.2 )
                  qed
                next
                  case Alice__merged_____11__1_0_____15__0_1__94_case_2
                  solve( !KU( enc(<~n, l__0__49>, ~n.1) ) @ #vk )
                    case Alice__merged_____2__1_0_____9__122
                    by solve( !KU( ~n.1 ) @ #vk.1 )
                  next
                    case c_enc
                    by solve( !KU( ~n.1 ) @ #vk.3 )
                  qed
                next
                  case Alice__merged_____11__1_0_____15__0_1__94_case_3
                  solve( !KU( enc(<~n, l__0__49>, ~n.1) ) @ #vk )
                    case Alice__merged_____1_____9__131
                    solve( State__Alice( <'rab_____15__0_1', 'rab__rab', %1>,
                                         return__var__49, 'rab__',
                                         <l__0__49, l__1__49, l__2__49, l__3__49, l__4__49, l__5__49, l__6__49
                                         >,
                                         'rab__'
                           ) ▶₀ #k )
                      case Alice__merged_____11__1_0_____15__0_1__94
                      by contradiction /* cyclic */
                    qed
                  next
                    case c_enc
                    by solve( !KU( ~n.1 ) @ #vk.2 )
                  qed
                next
                  case Alice__merged_____11__1_0_____15__0_1__94_case_4
                  solve( !KU( enc(<~n, l__0__49>, ~n.1) ) @ #vk )
                    case Alice__merged_____2__1_0_____9__122
                    by solve( !KU( ~n.1 ) @ #vk.1 )
                  next
                    case c_enc
                    by solve( !KU( ~n.1 ) @ #vk.3 )
                  qed
                next
                  case Alice__merged_____11__1_0_____15__0_1__94_case_5
                  solve( splitEqs(2) )
                    case split_case_1
                    solve( !KU( enc(<~n, l__0__49>, ~n.1) ) @ #vk )
                      case Alice__merged_____1_____9__131
                      solve( State__Alice( <'rab_____15__0_1', 'rab__rab', %1>,
                                           return__var__49, 'rab__',
                                           <l__0__49, l__1__49, l__2__49, l__3__49, l__4__49, l__5__49, 
                                            l__6__49>,
                                           'rab__'
                             ) ▶₀ #k )
                        case Alice__merged_____11__1_0_____15__0_1__94
                        by contradiction /* cyclic */
                      qed
                    next
                      case c_enc
                      by solve( !KU( ~n.1 ) @ #vk.2 )
                    qed
                  next
                    case split_case_2
                    solve( !KU( enc(<~n, l__0__49>, ~n.1) ) @ #vk )
                      case Alice__merged_____1_____9__131
                      solve( State__Alice( <'rab_____15__0_1', 'rab__rab', %1>,
                                           return__var__49, 'rab__',
                                           <l__0__49, l__1__49, l__2__49, l__3__49, l__4__49, l__5__49, 
                                            l__6__49>,
                                           'rab__'
                             ) ▶₀ #k )
                        case Alice__merged_____11__1_0_____15__0_1__94
                        by contradiction /* cyclic */
                      qed
                    next
                      case c_enc
                      by solve( !KU( ~n.1 ) @ #vk.2 )
                    qed
                  next
                    case split_case_3
                    solve( !KU( enc(<~n, l__0__49>, ~n.1) ) @ #vk )
                      case Alice__merged_____1_____9__131
                      solve( State__Alice( <'rab_____15__0_1', 'rab__rab', %1>,
                                           return__var__49, 'rab__',
                                           <l__0__49, l__1__49, l__2__49, l__3__49, l__4__49, l__5__49, 
                                            l__6__49>,
                                           'rab__'
                             ) ▶₀ #k )
                        case Alice__merged_____11__1_0_____15__0_1__94
                        by contradiction /* cyclic */
                      qed
                    next
                      case c_enc
                      by solve( !KU( ~n.1 ) @ #vk.2 )
                    qed
                  qed
                next
                  case Alice__merged_____11__1_0_____15__0_1__94_case_6
                  solve( splitEqs(2) )
                    case split_case_1
                    solve( !KU( enc(<~n, l__0__49>, ~n.1) ) @ #vk )
                      case Alice__merged_____2__1_0_____9__122
                      by solve( !KU( ~n.1 ) @ #vk.1 )
                    next
                      case c_enc
                      by solve( !KU( ~n.1 ) @ #vk.3 )
                    qed
                  next
                    case split_case_2
                    solve( !KU( enc(<~n, l__0__49>, ~n.1) ) @ #vk )
                      case Alice__merged_____2__1_0_____9__122
                      by solve( !KU( ~n.1 ) @ #vk.1 )
                    next
                      case c_enc
                      by solve( !KU( ~n.1 ) @ #vk.3 )
                    qed
                  next
                    case split_case_3
                    solve( !KU( enc(<~n, l__0__49>, ~n.1) ) @ #vk )
                      case Alice__merged_____2__1_0_____9__122
                      by solve( !KU( ~n.1 ) @ #vk.1 )
                    next
                      case c_enc
                      by solve( !KU( ~n.1 ) @ #vk.3 )
                    qed
                  qed
                next
                  case Alice__merged_____11__1_0_____15__0_1__94_case_7
                  solve( splitEqs(2) )
                    case split_case_1
                    solve( !KU( enc(<~n, l__0__49>, ~n.1) ) @ #vk )
                      case Alice__merged_____1_____9__131
                      solve( State__Alice( <'rab_____15__0_1', 'rab__rab', %1>,
                                           return__var__49, 'rab__',
                                           <l__0__49, l__1__49, l__2__49, l__3__49, l__4__49, l__5__49, 
                                            l__6__49>,
                                           'rab__'
                             ) ▶₀ #k )
                        case Alice__merged_____11__1_0_____15__0_1__94
                        by contradiction /* cyclic */
                      qed
                    next
                      case c_enc
                      by solve( !KU( ~n.1 ) @ #vk.3 )
                    qed
                  next
                    case split_case_2
                    solve( !KU( enc(<~n, l__0__49>, ~n.1) ) @ #vk )
                      case Alice__merged_____1_____9__131
                      solve( !KU( enc(x, ~n.4) ) @ #vk.1 )
                        case Alice__merged_____15__0_1_____15__0_3__0_1__86
                        solve( State__Alice( <'rab_____15__0_1', 'rab__rab', %1>,
                                             return__var__49, 'rab__',
                                             <l__0__49, l__1__49, l__2__49, l__3__49, l__4__49, l__5__49, 
                                              l__6__49>,
                                             'rab__'
                               ) ▶₀ #k )
                          case Alice__merged_____11__1_0_____15__0_1__94
                          by contradiction /* cyclic */
                        qed
                      next
                        case c_enc
                        by solve( !KU( ~n.4 ) @ #vk.3 )
                      qed
                    next
                      case c_enc
                      by solve( !KU( ~n.1 ) @ #vk.3 )
                    qed
                  next
                    case split_case_3
                    solve( !KU( enc(<~n, l__0__49>, ~n.1) ) @ #vk )
                      case Alice__merged_____1_____9__131
                      solve( !KU( enc(<z, x>, ~n.4) ) @ #vk.1 )
                        case c_enc
                        by solve( !KU( ~n.4 ) @ #vk.3 )
                      qed
                    next
                      case c_enc
                      by solve( !KU( ~n.1 ) @ #vk.3 )
                    qed
                  qed
                next
                  case Alice__merged_____11__1_0_____15__0_1__94_case_8
                  solve( splitEqs(2) )
                    case split_case_1
                    solve( !KU( enc(<~n, l__0__49>, ~n.1) ) @ #vk )
                      case Alice__merged_____2__1_0_____9__122
                      by solve( !KU( ~n.1 ) @ #vk.2 )
                    next
                      case c_enc
                      by solve( !KU( ~n.1 ) @ #vk.4 )
                    qed
                  next
                    case split_case_2
                    solve( !KU( enc(<~n, l__0__49>, ~n.1) ) @ #vk )
                      case Alice__merged_____2__1_0_____9__122
                      by solve( !KU( ~n.1 ) @ #vk.2 )
                    next
                      case c_enc
                      by solve( !KU( ~n.1 ) @ #vk.4 )
                    qed
                  next
                    case split_case_3
                    solve( !KU( enc(<~n, l__0__49>, ~n.1) ) @ #vk )
                      case Alice__merged_____2__1_0_____9__122
                      by solve( !KU( ~n.1 ) @ #vk.2 )
                    next
                      case c_enc
                      by solve( !KU( ~n.1 ) @ #vk.4 )
                    qed
                  qed
                qed
              qed
            qed
          qed
        qed
      qed
    next
      case Alice__merged_____15__0_3__0_1_____25__81
      solve( State__Alice( <'rab_____15__0_3__0_1', param, %i>,
                           return__var__55, 'rab__',
                           <l__0__55, l__1__55, l__2__55, l__3__55, l__4__55, l__5__55, l__6__55, 
                            l__7__55, l__8__55, l__9__55>,
                           'rab__'
             ) ▶₀ #j )
        case Alice__merged_____15__0_1_____15__0_3__0_1__86
        solve( Fd__Alice( 'rab__rab', l__9__55, n__0__59 ) ▶₁ #j )
          case Alice__merged_____1_____9__131
          solve( Transition__( <'rab__Alice', 'rab__rab'>, 'rab_____15__0_3__0_1',
                               %i
                 ) @ #k )
            case Alice__merged_____15__0_3__0_1_____25__81
            solve( State__Alice( <'rab_____15__0_3__0_1', 'rab__rab', %i>,
                                 return__var__55, 'rab__',
                                 <l__0__55, l__1__55, l__2__55, l__3__55.1, l__4__55.1, l__5__55.1, 
                                  l__6__55.1, l__7__55.1, l__8__55.1, l__9__55>,
                                 'rab__'
                   ) ▶₀ #k )
              case Alice__merged_____15__0_1_____15__0_3__0_1__86
              by contradiction /* cyclic */
            qed
          qed
        next
          case Alice__merged_____2__1_0_____9__122
          solve( Transition__( <'rab__Alice', 'rab__rab'>, 'rab_____15__0_3__0_1',
                               %i
                 ) @ #k )
            case Alice__merged_____15__0_3__0_1_____25__81
            solve( State__Alice( <'rab_____15__0_3__0_1', 'rab__rab', %i>,
                                 return__var__55, 'rab__',
                                 <l__0__55, l__1__55, l__2__55, l__3__55.1, l__4__55.1, l__5__55.1, 
                                  l__6__55.1, l__7__55.1, l__8__55.1, l__9__55>,
                                 'rab__'
                   ) ▶₀ #k )
              case Alice__merged_____15__0_1_____15__0_3__0_1__86
              by contradiction /* cyclic */
            qed
          qed
        qed
      qed
    next
      case Alice__merged_____1_____9__131
      solve( State__Alice( <'rab_____1', param, %i>, return__var__1, 'rab__',
                           'rab__', 'rab__'
             ) ▶₀ #j )
        case Alice__init_filesys_____0_____1__0
        solve( !ACP__( <'rab__Alice', 'rab__rab'>, 'rab____secret__pub_bob',
                       'rab__fopen'
               ) ▶₂ #j )
          case Alice__init_filesys_____0_____1__0
          solve( !ACP__( <'rab__Alice', 'rab__rab'>, 'rab____secret__pub_bob',
                         'rab__fopen'
                 ) ▶₃ #j )
            case Alice__init_filesys_____0_____1__0
            solve( !ACP__( <'rab__Alice', 'rab__rab'>, 'rab__udp', 'rab__send'
                   ) ▶₄ #j )
              case Init__system__ACP__3
              solve( !Const__( 'rab__nonce_a', nonce_a__31 ) ▶₅ #j )
                case Const__nonce_a
                solve( !Const__( 'rab__nonce_a', nonce_a__24 ) ▶₆ #j )
                  case Const__nonce_a
                  solve( !Eq__( n__0__3, n__0__20 ) ▶₇ #j )
                    case Equality_gen
                    solve( Transition__( <'rab__Alice', 'rab__rab'>, 'rab_____1', %1 ) @ #k )
                      case Alice__merged_____1_____9__131
                      solve( State__Alice( <'rab_____1', 'rab__rab', %1>, return__var__1,
                                           'rab__', 'rab__', 'rab__'
                             ) ▶₀ #k )
                        case Alice__init_filesys_____0_____1__0
                        by contradiction /* cyclic */
                      qed
                    qed
                  qed
                qed
              qed
            qed
          qed
        qed
      qed
    next
      case Alice__merged_____2__1_0_____9__122
      solve( State__Alice( <'rab_____2__1_0', param, %i>, return__var__11,
                           'rab__', <l__0__11, l__1__11>, 'rab__'
             ) ▶₀ #j )
        case Alice__merged_____0_____2__1_0__133
        solve( !ACP__( <'rab__Alice', 'rab__rab'>, 'rab____secret__pub_bob',
                       'rab__fopen'
               ) ▶₃ #j )
          case Alice__merged_____0_____2__1_0__133
          solve( !ACP__( <'rab__Alice', 'rab__rab'>, 'rab____secret__pub_bob',
                         'rab__fopen'
                 ) ▶₄ #j )
            case Alice__merged_____0_____2__1_0__133
            solve( !ACP__( <'rab__Alice', 'rab__rab'>, 'rab__udp', 'rab__send'
                   ) ▶₅ #j )
              case Init__system__ACP__3
              solve( !Const__( 'rab__nonce_a', nonce_a__31 ) ▶₆ #j )
                case Const__nonce_a
                solve( !Const__( 'rab__nonce_a', nonce_a__24 ) ▶₇ #j )
                  case Const__nonce_a
                  solve( !Eq__( n__1__11, n__0__20 ) ▶₈ #j )
                    case Equality_gen
                    solve( Transition__( <'rab__Alice', 'rab__rab'>, 'rab_____2__1_0', %1
                           ) @ #k )
                      case Alice__merged_____2__1_0_____9__122
                      solve( State__Alice( <'rab_____2__1_0', 'rab__rab', %1>, return__var__11,
                                           'rab__', <l__0__11, l__1__11>, 'rab__'
                             ) ▶₀ #k )
                        case Alice__merged_____0_____2__1_0__133
                        by contradiction /* cyclic */
                      qed
                    qed
                  qed
                qed
              qed
            qed
          qed
        qed
      qed
    next
      case Alice__merged_____9_____11__0_0__101
      solve( State__Alice( <'rab_____9', param, %i>, return__var__32, 'rab__',
                           <l__0__32, l__1__32, l__2__32>, 'rab__'
             ) ▶₀ #j )
        case Alice__merged_____1_____9__131
        solve( !Const__( 'rab__nonce_a', nonce_a__32 ) ▶₁ #j )
          case Const__nonce_a
          solve( Transition__( <'rab__Alice', 'rab__rab'>, 'rab_____9', %1 ) @ #k )
            case Alice__merged_____9_____11__0_0__101
            solve( State__Alice( <'rab_____9', 'rab__rab', %1>, return__var__32,
                                 'rab__', <l__0__32, l__1__32.1, l__2__32>, 'rab__'
                   ) ▶₀ #k )
              case Alice__merged_____1_____9__131
              by contradiction /* cyclic */
            qed
          next
            case Alice__merged_____9_____11__1_0__102
            by solve( State__Alice( <'rab_____9', 'rab__rab', %1>, return__var__32,
                                    'rab__', <l__0__32, l__1__32.1, l__2__32>, 'rab__'
                      ) ▶₀ #k )
          qed
        qed
      next
        case Alice__merged_____2__1_0_____9__122
        solve( !Const__( 'rab__nonce_a', nonce_a__32 ) ▶₁ #j )
          case Const__nonce_a
          solve( Transition__( <'rab__Alice', 'rab__rab'>, 'rab_____9', %1 ) @ #k )
            case Alice__merged_____9_____11__0_0__101
            solve( State__Alice( <'rab_____9', 'rab__rab', %1>, return__var__32,
                                 'rab__', <l__0__32, l__1__32.1, l__2__32>, 'rab__'
                   ) ▶₀ #k )
              case Alice__merged_____2__1_0_____9__122
              by contradiction /* cyclic */
            qed
          next
            case Alice__merged_____9_____11__1_0__102
            by solve( State__Alice( <'rab_____9', 'rab__rab', %1>, return__var__32,
                                    'rab__', <l__0__32, l__1__32.1, l__2__32>, 'rab__'
                      ) ▶₀ #k )
          qed
        qed
      qed
    next
      case Alice__merged_____9_____11__1_0__102
      solve( State__Alice( <'rab_____9', param, %i>, return__var__32, 'rab__',
                           <l__0__32, l__1__32, l__2__32>, 'rab__'
             ) ▶₀ #j )
        case Alice__merged_____1_____9__131
        solve( !Const__( 'rab__nonce_a', nonce_a__32 ) ▶₁ #j )
          case Const__nonce_a
          solve( Transition__( <'rab__Alice', 'rab__rab'>, 'rab_____9', %1 ) @ #k )
            case Alice__merged_____9_____11__0_0__101
            by solve( State__Alice( <'rab_____9', 'rab__rab', %1>, return__var__32,
                                    'rab__', <l__0__32, l__1__32.1, l__2__32>, 'rab__'
                      ) ▶₀ #k )
          next
            case Alice__merged_____9_____11__1_0__102
            solve( State__Alice( <'rab_____9', 'rab__rab', %1>, return__var__32,
                                 'rab__', <l__0__32, l__1__32.1, l__2__32>, 'rab__'
                   ) ▶₀ #k )
              case Alice__merged_____1_____9__131
              by contradiction /* cyclic */
            qed
          qed
        qed
      next
        case Alice__merged_____2__1_0_____9__122
        solve( !Const__( 'rab__nonce_a', nonce_a__32 ) ▶₁ #j )
          case Const__nonce_a
          solve( Transition__( <'rab__Alice', 'rab__rab'>, 'rab_____9', %1 ) @ #k )
            case Alice__merged_____9_____11__0_0__101
            by solve( State__Alice( <'rab_____9', 'rab__rab', %1>, return__var__32,
                                    'rab__', <l__0__32, l__1__32.1, l__2__32>, 'rab__'
                      ) ▶₀ #k )
          next
            case Alice__merged_____9_____11__1_0__102
            solve( State__Alice( <'rab_____9', 'rab__rab', %1>, return__var__32,
                                 'rab__', <l__0__32, l__1__32.1, l__2__32>, 'rab__'
                   ) ▶₀ #k )
              case Alice__merged_____2__1_0_____9__122
              by contradiction /* cyclic */
            qed
          qed
        qed
      qed
    next
      case Bob__merged_____0_____3__0_0__85
      solve( State__Bob( <'rab_____0', param, %i>, return__var__0, 'rab__',
                         'rab__', 'rab__'
             ) ▶₀ #j )
        case Init__system
        solve( !Const__( 'rab__priv_key_alice', priv_key_alice__0 ) ▶₁ #j )
          case Const__priv_key_alice
          solve( Transition__( <'rab__Bob', 'rab__rab'>, 'rab_____0', %1 ) @ #k )
            case Bob__merged_____0_____3__0_0__85
            solve( State__Bob( <'rab_____0', 'rab__rab', %1>, return__var__0,
                               'rab__', 'rab__', 'rab__'
                   ) ▶₀ #k )
              case Init__system
              by contradiction /* cyclic */
            qed
          next
            case Bob__merged_____0_____3__1_0__84
            by solve( State__Bob( <'rab_____0', 'rab__rab', %1>, return__var__0,
                                  'rab__', 'rab__', 'rab__'
                      ) ▶₀ #k )
          qed
        qed
      qed
    next
      case Bob__merged_____0_____3__1_0__84
      solve( State__Bob( <'rab_____0', param, %i>, return__var__0, 'rab__',
                         'rab__', 'rab__'
             ) ▶₀ #j )
        case Init__system
        solve( !Const__( 'rab__priv_key_alice', priv_key_alice__0 ) ▶₁ #j )
          case Const__priv_key_alice
          solve( Transition__( <'rab__Bob', 'rab__rab'>, 'rab_____0', %1 ) @ #k )
            case Bob__merged_____0_____3__0_0__85
            by solve( State__Bob( <'rab_____0', 'rab__rab', %1>, return__var__0,
                                  'rab__', 'rab__', 'rab__'
                      ) ▶₀ #k )
          next
            case Bob__merged_____0_____3__1_0__84
            solve( State__Bob( <'rab_____0', 'rab__rab', %1>, return__var__0,
                               'rab__', 'rab__', 'rab__'
                   ) ▶₀ #k )
              case Init__system
              by contradiction /* cyclic */
            qed
          qed
        qed
      qed
    next
      case Bob__merged_____11__0_0_____13__0_1__59
      solve( State__Bob( <'rab_____11__0_0', param, %i>, return__var__25,
                         'rab__', <l__0__25, l__1__25, l__2__25, l__3__25, l__4__25>, t__0__25
             ) ▶₀ #j )
        case Bob__merged_____9_____11__0_0__62_case_1
        solve( Store( 'rab__udp', n__0__25 ) ▶₁ #j )
          case Alice__merged_____15__0_1_____15__0_3__0_1__86
          solve( !ACP__( <'rab__Bob', 'rab__rab'>, 'rab__udp', 'rab__recv'
                 ) ▶₂ #j )
            case Init__system__ACP__0
            solve( !Const__( 'rab__priv_key_bob', priv_key_bob__34 ) ▶₃ #j )
              case Const__priv_key_bob
              solve( !Const__( 'rab__nonce_b', nonce_b__36 ) ▶₄ #j )
                case Const__nonce_b
                solve( !Const__( 'rab__nonce_b', nonce_b__35 ) ▶₅ #j )
                  case Const__nonce_b
                  solve( !Eq__( z, ~n.1 ) ▶₆ #j )
                    case Equality_gen
                    solve( Transition__( <'rab__Bob', 'rab__rab'>, 'rab_____11__0_0', %1
                           ) @ #k )
                      case Bob__merged_____11__0_0_____13__0_1__59
                      solve( State__Bob( <'rab_____11__0_0', 'rab__rab', %1>, return__var__25,
                                         'rab__', <l__0__25, l__1__25, l__2__25, l__3__25.1, l__4__25.1>,
                                         t__0__25
                             ) ▶₀ #k )
                        case Bob__merged_____9_____11__0_0__62
                        by contradiction /* cyclic */
                      qed
                    qed
                  qed
                qed
              qed
            qed
          qed
        next
          case Alice__merged_____1_____9__131
          solve( !ACP__( <'rab__Bob', 'rab__rab'>, 'rab__udp', 'rab__recv'
                 ) ▶₂ #j )
            case Init__system__ACP__0
            solve( !Const__( 'rab__priv_key_bob', priv_key_bob__34 ) ▶₃ #j )
              case Const__priv_key_bob
              solve( !Const__( 'rab__nonce_b', nonce_b__36 ) ▶₄ #j )
                case Const__nonce_b
                solve( !Const__( 'rab__nonce_b', nonce_b__35 ) ▶₅ #j )
                  case Const__nonce_b
                  by solve( !Eq__( z, ~n.1 ) ▶₆ #j )
                qed
              qed
            qed
          qed
        next
          case Alice__merged_____2__1_0_____9__122
          solve( !ACP__( <'rab__Bob', 'rab__rab'>, 'rab__udp', 'rab__recv'
                 ) ▶₂ #j )
            case Init__system__ACP__0
            solve( !Const__( 'rab__priv_key_bob', priv_key_bob__34 ) ▶₃ #j )
              case Const__priv_key_bob
              solve( !Const__( 'rab__nonce_b', nonce_b__36 ) ▶₄ #j )
                case Const__nonce_b
                solve( !Const__( 'rab__nonce_b', nonce_b__35 ) ▶₅ #j )
                  case Const__nonce_b
                  by solve( !Eq__( z, ~n.1 ) ▶₆ #j )
                qed
              qed
            qed
          qed
        next
          case Bob__merged_____3__0_0_____9__79
          solve( !ACP__( <'rab__Bob', 'rab__rab'>, 'rab__udp', 'rab__recv'
                 ) ▶₂ #j )
            case Init__system__ACP__0
            solve( !Const__( 'rab__priv_key_bob', priv_key_bob__34 ) ▶₃ #j )
              case Const__priv_key_bob
              solve( !Const__( 'rab__nonce_b', nonce_b__36 ) ▶₄ #j )
                case Const__nonce_b
                solve( !Const__( 'rab__nonce_b', nonce_b__35 ) ▶₅ #j )
                  case Const__nonce_b
                  by solve( !Eq__( dec(enc(<~n, ~n.1>, pk(~n.2)), ~n.3), ~n.1 ) ▶₆ #j )
                qed
              qed
            qed
          qed
        qed
      next
        case Bob__merged_____9_____11__0_0__62_case_2
        solve( Store( 'rab__udp', n__0__25 ) ▶₁ #j )
          case Alice__merged_____15__0_1_____15__0_3__0_1__86
          solve( !ACP__( <'rab__Bob', 'rab__rab'>, 'rab__udp', 'rab__recv'
                 ) ▶₂ #j )
            case Init__system__ACP__0
            solve( !Const__( 'rab__priv_key_bob', priv_key_bob__34 ) ▶₃ #j )
              case Const__priv_key_bob
              solve( !Const__( 'rab__nonce_b', nonce_b__36 ) ▶₄ #j )
                case Const__nonce_b
                solve( !Const__( 'rab__nonce_b', nonce_b__35 ) ▶₅ #j )
                  case Const__nonce_b
                  solve( !Eq__( z, ~n.1 ) ▶₆ #j )
                    case Equality_gen
                    solve( Transition__( <'rab__Bob', 'rab__rab'>, 'rab_____11__0_0', %1
                           ) @ #k )
                      case Bob__merged_____11__0_0_____13__0_1__59
                      solve( State__Bob( <'rab_____11__0_0', 'rab__rab', %1>, return__var__25,
                                         'rab__', <l__0__25, l__1__25, l__2__25, l__3__25.1, l__4__25.1>,
                                         t__0__25
                             ) ▶₀ #k )
                        case Bob__merged_____9_____11__0_0__62
                        by contradiction /* cyclic */
                      qed
                    qed
                  qed
                qed
              qed
            qed
          qed
        next
          case Alice__merged_____1_____9__131
          solve( !ACP__( <'rab__Bob', 'rab__rab'>, 'rab__udp', 'rab__recv'
                 ) ▶₂ #j )
            case Init__system__ACP__0
            solve( !Const__( 'rab__priv_key_bob', priv_key_bob__34 ) ▶₃ #j )
              case Const__priv_key_bob
              solve( !Const__( 'rab__nonce_b', nonce_b__36 ) ▶₄ #j )
                case Const__nonce_b
                solve( !Const__( 'rab__nonce_b', nonce_b__35 ) ▶₅ #j )
                  case Const__nonce_b
                  by solve( !Eq__( z, ~n.1 ) ▶₆ #j )
                qed
              qed
            qed
          qed
        next
          case Alice__merged_____2__1_0_____9__122
          solve( !ACP__( <'rab__Bob', 'rab__rab'>, 'rab__udp', 'rab__recv'
                 ) ▶₂ #j )
            case Init__system__ACP__0
            solve( !Const__( 'rab__priv_key_bob', priv_key_bob__34 ) ▶₃ #j )
              case Const__priv_key_bob
              solve( !Const__( 'rab__nonce_b', nonce_b__36 ) ▶₄ #j )
                case Const__nonce_b
                solve( !Const__( 'rab__nonce_b', nonce_b__35 ) ▶₅ #j )
                  case Const__nonce_b
                  by solve( !Eq__( z, ~n.1 ) ▶₆ #j )
                qed
              qed
            qed
          qed
        next
          case Bob__merged_____3__1_0_____9__75
          solve( !ACP__( <'rab__Bob', 'rab__rab'>, 'rab__udp', 'rab__recv'
                 ) ▶₂ #j )
            case Init__system__ACP__0
            solve( !Const__( 'rab__priv_key_bob', priv_key_bob__34 ) ▶₃ #j )
              case Const__priv_key_bob
              solve( !Const__( 'rab__nonce_b', nonce_b__36 ) ▶₄ #j )
                case Const__nonce_b
                solve( !Const__( 'rab__nonce_b', nonce_b__35 ) ▶₅ #j )
                  case Const__nonce_b
                  by solve( !Eq__( dec(enc(<~n, ~n.1>, pk(~n.2)), ~n.3), ~n.1 ) ▶₆ #j )
                qed
              qed
            qed
          qed
        qed
      qed
    next
      case Bob__merged_____11__1_0_____13__0_1__55
      solve( State__Bob( <'rab_____11__1_0', param, %i>, return__var__30,
                         'rab__', <l__0__30, l__1__30, l__2__30, l__3__30, l__4__30>, t__0__30
             ) ▶₀ #j )
        case Bob__merged_____9_____11__1_0__63_case_1
        solve( Store( 'rab__udp', n__0__30 ) ▶₁ #j )
          case Alice__merged_____15__0_1_____15__0_3__0_1__86
          solve( !ACP__( <'rab__Bob', 'rab__rab'>, 'rab__udp', 'rab__recv'
                 ) ▶₃ #j )
            case Init__system__ACP__0
            solve( !Const__( 'rab__priv_key_bob', priv_key_bob__34 ) ▶₄ #j )
              case Const__priv_key_bob
              solve( !Const__( 'rab__nonce_b', nonce_b__36 ) ▶₅ #j )
                case Const__nonce_b
                solve( !Const__( 'rab__nonce_b', nonce_b__35 ) ▶₆ #j )
                  case Const__nonce_b
                  solve( !Eq__( z, ~n.1 ) ▶₇ #j )
                    case Equality_gen
                    solve( Transition__( <'rab__Bob', 'rab__rab'>, 'rab_____11__1_0', %1
                           ) @ #k )
                      case Bob__merged_____11__1_0_____13__0_1__55
                      solve( State__Bob( <'rab_____11__1_0', 'rab__rab', %1>, return__var__30,
                                         'rab__', <l__0__30, l__1__30, l__2__30, l__3__30.1, l__4__30.1>,
                                         t__0__30
                             ) ▶₀ #k )
                        case Bob__merged_____9_____11__1_0__63
                        by contradiction /* cyclic */
                      qed
                    qed
                  qed
                qed
              qed
            qed
          qed
        next
          case Alice__merged_____1_____9__131
          solve( !ACP__( <'rab__Bob', 'rab__rab'>, 'rab__udp', 'rab__recv'
                 ) ▶₃ #j )
            case Init__system__ACP__0
            solve( !Const__( 'rab__priv_key_bob', priv_key_bob__34 ) ▶₄ #j )
              case Const__priv_key_bob
              solve( !Const__( 'rab__nonce_b', nonce_b__36 ) ▶₅ #j )
                case Const__nonce_b
                solve( !Const__( 'rab__nonce_b', nonce_b__35 ) ▶₆ #j )
                  case Const__nonce_b
                  solve( !Eq__( z, ~n.1 ) ▶₇ #j )
                    case Equality_gen
                    solve( Transition__( <'rab__Bob', 'rab__rab'>, 'rab_____11__1_0', %1
                           ) @ #k )
                      case Bob__merged_____11__1_0_____13__0_1__55
                      solve( State__Bob( <'rab_____11__1_0', 'rab__rab', %1>, return__var__30,
                                         'rab__', <l__0__30, l__1__30, l__2__30, l__3__30.1, l__4__30.1>,
                                         t__0__30
                             ) ▶₀ #k )
                        case Bob__merged_____9_____11__1_0__63
                        by contradiction /* cyclic */
                      qed
                    qed
                  qed
                qed
              qed
            qed
          qed
        next
          case Alice__merged_____2__1_0_____9__122
          solve( !ACP__( <'rab__Bob', 'rab__rab'>, 'rab__udp', 'rab__recv'
                 ) ▶₃ #j )
            case Init__system__ACP__0
            solve( !Const__( 'rab__priv_key_bob', priv_key_bob__34 ) ▶₄ #j )
              case Const__priv_key_bob
              solve( !Const__( 'rab__nonce_b', nonce_b__36 ) ▶₅ #j )
                case Const__nonce_b
                solve( !Const__( 'rab__nonce_b', nonce_b__35 ) ▶₆ #j )
                  case Const__nonce_b
                  solve( !Eq__( z, ~n.1 ) ▶₇ #j )
                    case Equality_gen
                    solve( Transition__( <'rab__Bob', 'rab__rab'>, 'rab_____11__1_0', %1
                           ) @ #k )
                      case Bob__merged_____11__1_0_____13__0_1__55
                      solve( State__Bob( <'rab_____11__1_0', 'rab__rab', %1>, return__var__30,
                                         'rab__', <l__0__30, l__1__30, l__2__30, l__3__30.1, l__4__30.1>,
                                         t__0__30
                             ) ▶₀ #k )
                        case Bob__merged_____9_____11__1_0__63
                        by contradiction /* cyclic */
                      qed
                    qed
                  qed
                qed
              qed
            qed
          qed
        next
          case Bob__merged_____3__0_0_____9__79
          solve( !ACP__( <'rab__Bob', 'rab__rab'>, 'rab__udp', 'rab__recv'
                 ) ▶₃ #j )
            case Init__system__ACP__0
            solve( !Const__( 'rab__priv_key_bob', priv_key_bob__34 ) ▶₄ #j )
              case Const__priv_key_bob
              solve( !Const__( 'rab__nonce_b', nonce_b__36 ) ▶₅ #j )
                case Const__nonce_b
                solve( !Const__( 'rab__nonce_b', nonce_b__35 ) ▶₆ #j )
                  case Const__nonce_b
                  solve( !Eq__( z, ~n.1 ) ▶₇ #j )
                    case Equality_gen
                    solve( Transition__( <'rab__Bob', 'rab__rab'>, 'rab_____11__1_0', %1
                           ) @ #k )
                      case Bob__merged_____11__1_0_____13__0_1__55
                      solve( State__Bob( <'rab_____11__1_0', 'rab__rab', %1>, return__var__30,
                                         'rab__', <l__0__30, l__1__30, l__2__30, l__3__30.1, l__4__30.1>,
                                         t__0__30
                             ) ▶₀ #k )
                        case Bob__merged_____9_____11__1_0__63
                        by contradiction /* cyclic */
                      qed
                    qed
                  qed
                qed
              qed
            qed
          qed
        qed
      next
        case Bob__merged_____9_____11__1_0__63_case_2
        solve( Store( 'rab__udp', n__0__30 ) ▶₁ #j )
          case Alice__merged_____15__0_1_____15__0_3__0_1__86
          solve( !ACP__( <'rab__Bob', 'rab__rab'>, 'rab__udp', 'rab__recv'
                 ) ▶₃ #j )
            case Init__system__ACP__0
            solve( !Const__( 'rab__priv_key_bob', priv_key_bob__34 ) ▶₄ #j )
              case Const__priv_key_bob
              solve( !Const__( 'rab__nonce_b', nonce_b__36 ) ▶₅ #j )
                case Const__nonce_b
                solve( !Const__( 'rab__nonce_b', nonce_b__35 ) ▶₆ #j )
                  case Const__nonce_b
                  solve( !Eq__( z, ~n.1 ) ▶₇ #j )
                    case Equality_gen
                    solve( Transition__( <'rab__Bob', 'rab__rab'>, 'rab_____11__1_0', %1
                           ) @ #k )
                      case Bob__merged_____11__1_0_____13__0_1__55
                      solve( State__Bob( <'rab_____11__1_0', 'rab__rab', %1>, return__var__30,
                                         'rab__', <l__0__30, l__1__30, l__2__30, l__3__30.1, l__4__30.1>,
                                         t__0__30
                             ) ▶₀ #k )
                        case Bob__merged_____9_____11__1_0__63
                        by contradiction /* cyclic */
                      qed
                    qed
                  qed
                qed
              qed
            qed
          qed
        next
          case Alice__merged_____1_____9__131
          solve( !ACP__( <'rab__Bob', 'rab__rab'>, 'rab__udp', 'rab__recv'
                 ) ▶₃ #j )
            case Init__system__ACP__0
            solve( !Const__( 'rab__priv_key_bob', priv_key_bob__34 ) ▶₄ #j )
              case Const__priv_key_bob
              solve( !Const__( 'rab__nonce_b', nonce_b__36 ) ▶₅ #j )
                case Const__nonce_b
                solve( !Const__( 'rab__nonce_b', nonce_b__35 ) ▶₆ #j )
                  case Const__nonce_b
                  solve( !Eq__( z, ~n.1 ) ▶₇ #j )
                    case Equality_gen
                    solve( Transition__( <'rab__Bob', 'rab__rab'>, 'rab_____11__1_0', %1
                           ) @ #k )
                      case Bob__merged_____11__1_0_____13__0_1__55
                      solve( State__Bob( <'rab_____11__1_0', 'rab__rab', %1>, return__var__30,
                                         'rab__', <l__0__30, l__1__30, l__2__30, l__3__30.1, l__4__30.1>,
                                         t__0__30
                             ) ▶₀ #k )
                        case Bob__merged_____9_____11__1_0__63
                        by contradiction /* cyclic */
                      qed
                    qed
                  qed
                qed
              qed
            qed
          qed
        next
          case Alice__merged_____2__1_0_____9__122
          solve( !ACP__( <'rab__Bob', 'rab__rab'>, 'rab__udp', 'rab__recv'
                 ) ▶₃ #j )
            case Init__system__ACP__0
            solve( !Const__( 'rab__priv_key_bob', priv_key_bob__34 ) ▶₄ #j )
              case Const__priv_key_bob
              solve( !Const__( 'rab__nonce_b', nonce_b__36 ) ▶₅ #j )
                case Const__nonce_b
                solve( !Const__( 'rab__nonce_b', nonce_b__35 ) ▶₆ #j )
                  case Const__nonce_b
                  solve( !Eq__( z, ~n.1 ) ▶₇ #j )
                    case Equality_gen
                    solve( Transition__( <'rab__Bob', 'rab__rab'>, 'rab_____11__1_0', %1
                           ) @ #k )
                      case Bob__merged_____11__1_0_____13__0_1__55
                      solve( State__Bob( <'rab_____11__1_0', 'rab__rab', %1>, return__var__30,
                                         'rab__', <l__0__30, l__1__30, l__2__30, l__3__30.1, l__4__30.1>,
                                         t__0__30
                             ) ▶₀ #k )
                        case Bob__merged_____9_____11__1_0__63
                        by contradiction /* cyclic */
                      qed
                    qed
                  qed
                qed
              qed
            qed
          qed
        next
          case Bob__merged_____3__1_0_____9__75
          solve( !ACP__( <'rab__Bob', 'rab__rab'>, 'rab__udp', 'rab__recv'
                 ) ▶₃ #j )
            case Init__system__ACP__0
            solve( !Const__( 'rab__priv_key_bob', priv_key_bob__34 ) ▶₄ #j )
              case Const__priv_key_bob
              solve( !Const__( 'rab__nonce_b', nonce_b__36 ) ▶₅ #j )
                case Const__nonce_b
                solve( !Const__( 'rab__nonce_b', nonce_b__35 ) ▶₆ #j )
                  case Const__nonce_b
                  solve( !Eq__( z, ~n.1 ) ▶₇ #j )
                    case Equality_gen
                    solve( Transition__( <'rab__Bob', 'rab__rab'>, 'rab_____11__1_0', %1
                           ) @ #k )
                      case Bob__merged_____11__1_0_____13__0_1__55
                      solve( State__Bob( <'rab_____11__1_0', 'rab__rab', %1>, return__var__30,
                                         'rab__', <l__0__30, l__1__30, l__2__30, l__3__30.1, l__4__30.1>,
                                         t__0__30
                             ) ▶₀ #k )
                        case Bob__merged_____9_____11__1_0__63
                        by contradiction /* cyclic */
                      qed
                    qed
                  qed
                qed
              qed
            qed
          qed
        qed
      qed
    next
      case Bob__merged_____13__0_1_____20__49
      solve( State__Bob( <'rab_____13__0_1', param, %i>, return__var__37,
                         'rab__', <l__0__37, l__1__37, l__2__37, l__3__37, l__4__37>, t__0__37
             ) ▶₀ #j )
        case Bob__merged_____11__0_0_____13__0_1__59_case_1
        solve( Transition__( <'rab__Bob', 'rab__rab'>, 'rab_____13__0_1', %1
               ) @ #k )
          case Bob__merged_____13__0_1_____20__49
          solve( State__Bob( <'rab_____13__0_1', 'rab__rab', %1>, return__var__37,
                             'rab__', <l__0__37, l__1__37, l__2__37, l__3__37.1, l__4__37.1>, t__0__37
                 ) ▶₀ #k )
            case Bob__merged_____11__0_0_____13__0_1__59
            by contradiction /* cyclic */
          qed
        qed
      next
        case Bob__merged_____11__0_0_____13__0_1__59_case_2
        solve( Transition__( <'rab__Bob', 'rab__rab'>, 'rab_____13__0_1', %1
               ) @ #k )
          case Bob__merged_____13__0_1_____20__49
          solve( State__Bob( <'rab_____13__0_1', 'rab__rab', %1>, return__var__37,
                             'rab__', <l__0__37, l__1__37, l__2__37, l__3__37.1, l__4__37.1>, t__0__37
                 ) ▶₀ #k )
            case Bob__merged_____11__0_0_____13__0_1__59
            by contradiction /* cyclic */
          qed
        qed
      next
        case Bob__merged_____11__1_0_____13__0_1__55_case_1
        solve( Transition__( <'rab__Bob', 'rab__rab'>, 'rab_____13__0_1', %1
               ) @ #k )
          case Bob__merged_____13__0_1_____20__49
          solve( State__Bob( <'rab_____13__0_1', 'rab__rab', %1>, return__var__37,
                             'rab__', <l__0__37, l__1__37, l__2__37, l__3__37.1, l__4__37.1>, t__0__37
                 ) ▶₀ #k )
            case Bob__merged_____11__1_0_____13__0_1__55
            by contradiction /* cyclic */
          qed
        qed
      next
        case Bob__merged_____11__1_0_____13__0_1__55_case_2
        solve( Transition__( <'rab__Bob', 'rab__rab'>, 'rab_____13__0_1', %1
               ) @ #k )
          case Bob__merged_____13__0_1_____20__49
          solve( State__Bob( <'rab_____13__0_1', 'rab__rab', %1>, return__var__37,
                             'rab__', <l__0__37, l__1__37, l__2__37, l__3__37.1, l__4__37.1>, t__0__37
                 ) ▶₀ #k )
            case Bob__merged_____11__1_0_____13__0_1__55
            by contradiction /* cyclic */
          qed
        qed
      next
        case Bob__merged_____11__1_0_____13__0_1__55_case_3
        solve( Transition__( <'rab__Bob', 'rab__rab'>, 'rab_____13__0_1', %1
               ) @ #k )
          case Bob__merged_____13__0_1_____20__49
          solve( State__Bob( <'rab_____13__0_1', 'rab__rab', %1>, return__var__37,
                             'rab__', <l__0__37, l__1__37, l__2__37, l__3__37.1, l__4__37.1>, t__0__37
                 ) ▶₀ #k )
            case Bob__merged_____11__1_0_____13__0_1__55
            by contradiction /* cyclic */
          qed
        qed
      next
        case Bob__merged_____11__1_0_____13__0_1__55_case_4
        solve( Transition__( <'rab__Bob', 'rab__rab'>, 'rab_____13__0_1', %1
               ) @ #k )
          case Bob__merged_____13__0_1_____20__49
          solve( State__Bob( <'rab_____13__0_1', 'rab__rab', %1>, return__var__37,
                             'rab__', <l__0__37, l__1__37, l__2__37, l__3__37.1, l__4__37.1>, t__0__37
                 ) ▶₀ #k )
            case Bob__merged_____11__1_0_____13__0_1__55
            by contradiction /* cyclic */
          qed
        qed
      next
        case Bob__merged_____11__1_0_____13__0_1__55_case_5
        solve( Transition__( <'rab__Bob', 'rab__rab'>, 'rab_____13__0_1', %1
               ) @ #k )
          case Bob__merged_____13__0_1_____20__49
          solve( State__Bob( <'rab_____13__0_1', 'rab__rab', %1>, return__var__37,
                             'rab__', <l__0__37, l__1__37, l__2__37, l__3__37.1, l__4__37.1>, t__0__37
                 ) ▶₀ #k )
            case Bob__merged_____11__1_0_____13__0_1__55
            by contradiction /* cyclic */
          qed
        qed
      next
        case Bob__merged_____11__1_0_____13__0_1__55_case_6
        solve( Transition__( <'rab__Bob', 'rab__rab'>, 'rab_____13__0_1', %1
               ) @ #k )
          case Bob__merged_____13__0_1_____20__49
          solve( State__Bob( <'rab_____13__0_1', 'rab__rab', %1>, return__var__37,
                             'rab__', <l__0__37, l__1__37, l__2__37, l__3__37.1, l__4__37.1>, t__0__37
                 ) ▶₀ #k )
            case Bob__merged_____11__1_0_____13__0_1__55
            by contradiction /* cyclic */
          qed
        qed
      next
        case Bob__merged_____11__1_0_____13__0_1__55_case_7
        solve( Transition__( <'rab__Bob', 'rab__rab'>, 'rab_____13__0_1', %1
               ) @ #k )
          case Bob__merged_____13__0_1_____20__49
          solve( State__Bob( <'rab_____13__0_1', 'rab__rab', %1>, return__var__37,
                             'rab__', <l__0__37, l__1__37, l__2__37, l__3__37.1, l__4__37.1>, t__0__37
                 ) ▶₀ #k )
            case Bob__merged_____11__1_0_____13__0_1__55
            by contradiction /* cyclic */
          qed
        qed
      next
        case Bob__merged_____11__1_0_____13__0_1__55_case_8
        solve( Transition__( <'rab__Bob', 'rab__rab'>, 'rab_____13__0_1', %1
               ) @ #k )
          case Bob__merged_____13__0_1_____20__49
          solve( State__Bob( <'rab_____13__0_1', 'rab__rab', %1>, return__var__37,
                             'rab__', <l__0__37, l__1__37, l__2__37, l__3__37.1, l__4__37.1>, t__0__37
                 ) ▶₀ #k )
            case Bob__merged_____11__1_0_____13__0_1__55
            by contradiction /* cyclic */
          qed
        qed
      qed
    next
      case Bob__merged_____3__0_0_____9__79
      solve( State__Bob( <'rab_____3__0_0', param, %i>, return__var__4,
                         'rab__', <l__0__4, l__1__4>, t__0__4
             ) ▶₀ #j )
        case Bob__merged_____0_____3__0_0__85
        solve( !ACP__( <'rab__Bob', 'rab__rab'>, 'rab__udp', 'rab__recv'
               ) ▶₂ #j )
          case Init__system__ACP__0
          solve( !Const__( 'rab__priv_key_bob', priv_key_bob__13 ) ▶₃ #j )
            case Const__priv_key_bob
            solve( !ACP__( <'rab__Bob', 'rab__rab'>, 'rab__udp', 'rab__send'
                   ) ▶₄ #j )
              case Init__system__ACP__1
              solve( !Const__( 'rab__nonce_b', nonce_b__21 ) ▶₅ #j )
                case Const__nonce_b
                solve( !Const__( 'rab__priv_key_alice', priv_key_alice__14 ) ▶₆ #j )
                  case Const__priv_key_alice
                  solve( !Const__( 'rab__nonce_b', nonce_b__14 ) ▶₇ #j )
                    case Const__nonce_b
                    solve( !Const__( 'rab__nonce_a', nonce_a__14 ) ▶₈ #j )
                      case Const__nonce_a
                      solve( Transition__( <'rab__Bob', 'rab__rab'>, 'rab_____3__0_0', %1
                             ) @ #k )
                        case Bob__merged_____3__0_0_____9__79
                        solve( State__Bob( <'rab_____3__0_0', 'rab__rab', %1>, return__var__4,
                                           'rab__', <l__0__4, l__1__4>, t__0__4
                               ) ▶₀ #k )
                          case Bob__merged_____0_____3__0_0__85
                          by contradiction /* cyclic */
                        qed
                      qed
                    qed
                  qed
                qed
              qed
            qed
          qed
        qed
      qed
    next
      case Bob__merged_____3__1_0_____9__75
      solve( State__Bob( <'rab_____3__1_0', param, %i>, return__var__9,
                         'rab__', <l__0__9, l__1__9>, t__0__9
             ) ▶₀ #j )
        case Bob__merged_____0_____3__1_0__84
        solve( !ACP__( <'rab__Bob', 'rab__rab'>, 'rab__udp', 'rab__recv'
               ) ▶₃ #j )
          case Init__system__ACP__0
          solve( !Const__( 'rab__priv_key_bob', priv_key_bob__13 ) ▶₄ #j )
            case Const__priv_key_bob
            solve( !ACP__( <'rab__Bob', 'rab__rab'>, 'rab__udp', 'rab__send'
                   ) ▶₅ #j )
              case Init__system__ACP__1
              solve( !Const__( 'rab__nonce_b', nonce_b__21 ) ▶₆ #j )
                case Const__nonce_b
                solve( !Const__( 'rab__priv_key_alice', priv_key_alice__14 ) ▶₇ #j )
                  case Const__priv_key_alice
                  solve( !Const__( 'rab__nonce_b', nonce_b__14 ) ▶₈ #j )
                    case Const__nonce_b
                    solve( !Const__( 'rab__nonce_a', nonce_a__14 ) ▶₉ #j )
                      case Const__nonce_a
                      solve( Transition__( <'rab__Bob', 'rab__rab'>, 'rab_____3__1_0', %1
                             ) @ #k )
                        case Bob__merged_____3__1_0_____9__75
                        solve( State__Bob( <'rab_____3__1_0', 'rab__rab', %1>, return__var__9,
                                           'rab__', <l__0__9, l__1__9>, t__0__9
                               ) ▶₀ #k )
                          case Bob__merged_____0_____3__1_0__84
                          by contradiction /* cyclic */
                        qed
                      qed
                    qed
                  qed
                qed
              qed
            qed
          qed
        qed
      qed
    next
      case Bob__merged_____9_____11__0_0__62
      solve( State__Bob( <'rab_____9', param, %i>, return__var__22, 'rab__',
                         <l__0__22, l__1__22, l__2__22>, t__0__22
             ) ▶₀ #j )
        case Bob__merged_____3__0_0_____9__79
        solve( !Const__( 'rab__nonce_b', nonce_b__22 ) ▶₁ #j )
          case Const__nonce_b
          solve( Transition__( <'rab__Bob', 'rab__rab'>, 'rab_____9', %1 ) @ #k )
            case Bob__merged_____9_____11__0_0__62
            solve( State__Bob( <'rab_____9', 'rab__rab', %1>, return__var__22,
                               'rab__', <l__0__22, l__1__22.1, l__2__22.1>, t__0__22
                   ) ▶₀ #k )
              case Bob__merged_____3__0_0_____9__79
              by contradiction /* cyclic */
            qed
          next
            case Bob__merged_____9_____11__1_0__63
            by solve( State__Bob( <'rab_____9', 'rab__rab', %1>, return__var__22,
                                  'rab__', <l__0__22, l__1__22.1, l__2__22.1>, t__0__22
                      ) ▶₀ #k )
          qed
        qed
      next
        case Bob__merged_____3__1_0_____9__75
        solve( !Const__( 'rab__nonce_b', nonce_b__22 ) ▶₁ #j )
          case Const__nonce_b
          solve( Transition__( <'rab__Bob', 'rab__rab'>, 'rab_____9', %1 ) @ #k )
            case Bob__merged_____9_____11__0_0__62
            solve( State__Bob( <'rab_____9', 'rab__rab', %1>, return__var__22,
                               'rab__', <l__0__22, l__1__22.1, l__2__22.1>, t__0__22
                   ) ▶₀ #k )
              case Bob__merged_____3__1_0_____9__75
              by contradiction /* cyclic */
            qed
          next
            case Bob__merged_____9_____11__1_0__63
            by solve( State__Bob( <'rab_____9', 'rab__rab', %1>, return__var__22,
                                  'rab__', <l__0__22, l__1__22.1, l__2__22.1>, t__0__22
                      ) ▶₀ #k )
          qed
        qed
      qed
    next
      case Bob__merged_____9_____11__1_0__63
      solve( State__Bob( <'rab_____9', param, %i>, return__var__22, 'rab__',
                         <l__0__22, l__1__22, l__2__22>, t__0__22
             ) ▶₀ #j )
        case Bob__merged_____3__0_0_____9__79
        solve( !Const__( 'rab__nonce_b', nonce_b__22 ) ▶₁ #j )
          case Const__nonce_b
          solve( Transition__( <'rab__Bob', 'rab__rab'>, 'rab_____9', %1 ) @ #k )
            case Bob__merged_____9_____11__0_0__62
            by solve( State__Bob( <'rab_____9', 'rab__rab', %1>, return__var__22,
                                  'rab__', <l__0__22, l__1__22.1, l__2__22.1>, t__0__22
                      ) ▶₀ #k )
          next
            case Bob__merged_____9_____11__1_0__63
            solve( State__Bob( <'rab_____9', 'rab__rab', %1>, return__var__22,
                               'rab__', <l__0__22, l__1__22.1, l__2__22.1>, t__0__22
                   ) ▶₀ #k )
              case Bob__merged_____3__0_0_____9__79
              by contradiction /* cyclic */
            qed
          qed
        qed
      next
        case Bob__merged_____3__1_0_____9__75
        solve( !Const__( 'rab__nonce_b', nonce_b__22 ) ▶₁ #j )
          case Const__nonce_b
          solve( Transition__( <'rab__Bob', 'rab__rab'>, 'rab_____9', %1 ) @ #k )
            case Bob__merged_____9_____11__0_0__62
            by solve( State__Bob( <'rab_____9', 'rab__rab', %1>, return__var__22,
                                  'rab__', <l__0__22, l__1__22.1, l__2__22.1>, t__0__22
                      ) ▶₀ #k )
          next
            case Bob__merged_____9_____11__1_0__63
            solve( State__Bob( <'rab_____9', 'rab__rab', %1>, return__var__22,
                               'rab__', <l__0__22, l__1__22.1, l__2__22.1>, t__0__22
                   ) ▶₀ #k )
              case Bob__merged_____3__1_0_____9__75
              by contradiction /* cyclic */
            qed
          qed
        qed
      qed
    qed
  qed
qed

lemma NonceSecrecyB_tmrn:
  all-traces "¬(∃ nb #i #j. (SecretNonceBob( nb ) @ #i) ∧ (K( nb ) @ #j))"
/*
guarded formula characterizing all counter-examples:
"∃ nb #i #j. (SecretNonceBob( nb ) @ #i) ∧ (K( nb ) @ #j)"
*/
simplify
solve( SecretNonceBob( nb ) @ #i )
  case Bob__merged_____11__0_0_____13__0_1__59
  solve( State__Bob( <'rab_____11__0_0', param, %v__>, return__var__25,
                     'rab__', <l__0__25, l__1__25, l__2__25, l__3__25, l__4__25>, t__0__25
         ) ▶₀ #i )
    case Bob__merged_____9_____11__0_0__62_case_1
    solve( Store( 'rab__udp', n__0__25 ) ▶₁ #i )
      case Alice__merged_____15__0_1_____15__0_3__0_1__86
      solve( !ACP__( <'rab__Bob', 'rab__rab'>, 'rab__udp', 'rab__recv'
             ) ▶₂ #i )
        case Init__system__ACP__0
        solve( !Const__( 'rab__priv_key_bob', priv_key_bob__34 ) ▶₃ #i )
          case Const__priv_key_bob
          solve( !Const__( 'rab__nonce_b', nb ) ▶₄ #i )
            case Const__nonce_b
            solve( !Const__( 'rab__nonce_b', nonce_b__35 ) ▶₅ #i )
              case Const__nonce_b
              solve( !Eq__( z, ~n.1 ) ▶₆ #i )
                case Equality_gen
                solve( !KU( ~n.1 ) @ #vk )
                  case Alice__merged_____15__0_1_____15__0_3__0_1__86
                  solve( splitEqs(1) )
                    case split_case_1
                    solve( Store( 'rab__udp', l__4__25 ) ▶₁ #vr.1 )
                      case Alice__merged_____15__0_1_____15__0_3__0_1__86
                      solve( State__Alice( <'rab_____15__0_1', 'rab__rab', %v__>,
                                           return__var__49, 'rab__',
                                           <l__0__49, l__1__49, l__2__49, l__3__49, l__4__49, ~l__5__49.1, 
                                            l__6__49>,
                                           'rab__'
                             ) ▶₀ #vr.10 )
                        case Alice__merged_____11__1_0_____15__0_1__94_case_1
                        solve( !KU( enc(<~n, l__0__49>, ~n.2) ) @ #vk.2 )
                          case c_enc
                          by solve( !KU( ~n.2 ) @ #vk.4 )
                        qed
                      next
                        case Alice__merged_____11__1_0_____15__0_1__94_case_2
                        by solve( !KU( ~l__5__49.1 ) @ #vk.3 )
                      next
                        case Alice__merged_____11__1_0_____15__0_1__94_case_3
                        solve( !KU( enc(<~n, l__0__49>, ~n.2) ) @ #vk.2 )
                          case c_enc
                          by solve( !KU( ~n.2 ) @ #vk.4 )
                        qed
                      next
                        case Alice__merged_____11__1_0_____15__0_1__94_case_4
                        by solve( !KU( ~l__5__49.1 ) @ #vk.3 )
                      next
                        case Alice__merged_____11__1_0_____15__0_1__94_case_5
                        solve( !KU( enc(<~n, l__0__49>, ~n.2) ) @ #vk.2 )
                          case c_enc
                          by solve( !KU( ~n.2 ) @ #vk.4 )
                        qed
                      next
                        case Alice__merged_____11__1_0_____15__0_1__94_case_6
                        by solve( !KU( ~l__5__49.1 ) @ #vk.3 )
                      qed
                    next
                      case Alice__merged_____1_____9__131
                      solve( State__Alice( <'rab_____15__0_1', 'rab__rab', %v__>,
                                           return__var__49, 'rab__',
                                           <l__0__49, l__1__49, l__2__49, l__3__49, l__4__49, ~l__5__49, 
                                            l__6__49>,
                                           'rab__'
                             ) ▶₀ #vr.10 )
                        case Alice__merged_____11__1_0_____15__0_1__94
                        by contradiction /* non-normal terms */
                      qed
                    next
                      case Alice__merged_____2__1_0_____9__122
                      solve( State__Alice( <'rab_____15__0_1', 'rab__rab', %v__>,
                                           return__var__49, 'rab__',
                                           <l__0__49, l__1__49, l__2__49, l__3__49, l__4__49, ~l__5__49, 
                                            l__6__49>,
                                           'rab__'
                             ) ▶₀ #vr.10 )
                        case Alice__merged_____11__1_0_____15__0_1__94
                        by contradiction /* non-normal terms */
                      qed
                    next
                      case Bob__merged_____3__0_0_____9__79
                      by contradiction /* cyclic */
                    qed
                  next
                    case split_case_2
                    solve( Store( 'rab__udp', enc(x, ~l__5__49) ) ▶₁ #vr.1 )
                      case Alice__merged_____15__0_1_____15__0_3__0_1__86
                      solve( State__Alice( <'rab_____15__0_1', 'rab__rab', %v__>,
                                           return__var__49, 'rab__',
                                           <l__0__49, l__1__49, l__2__49, l__3__49, l__4__49, ~l__5__49, 
                                            l__6__49>,
                                           'rab__'
                             ) ▶₀ #vr.10 )
                        case Alice__merged_____11__1_0_____15__0_1__94_case_1
                        solve( !KU( enc(<~n, l__0__49>, ~n.2) ) @ #vk.2 )
                          case c_enc
                          by solve( !KU( ~n.2 ) @ #vk.4 )
                        qed
                      next
                        case Alice__merged_____11__1_0_____15__0_1__94_case_2
                        by solve( !KU( ~l__5__49 ) @ #vk.3 )
                      next
                        case Alice__merged_____11__1_0_____15__0_1__94_case_3
                        solve( !KU( enc(<~n, l__0__49>, ~n.2) ) @ #vk.2 )
                          case c_enc
                          by solve( !KU( ~n.2 ) @ #vk.4 )
                        qed
                      next
                        case Alice__merged_____11__1_0_____15__0_1__94_case_4
                        by solve( !KU( ~l__5__49 ) @ #vk.3 )
                      next
                        case Alice__merged_____11__1_0_____15__0_1__94_case_5
                        solve( !KU( enc(<~n, l__0__49>, ~n.2) ) @ #vk.2 )
                          case c_enc
                          by solve( !KU( ~n.2 ) @ #vk.4 )
                        qed
                      next
                        case Alice__merged_____11__1_0_____15__0_1__94_case_6
                        by solve( !KU( ~l__5__49 ) @ #vk.3 )
                      qed
                    next
                      case Alice__merged_____1_____9__131
                      by contradiction /* non-normal terms */
                    next
                      case Alice__merged_____2__1_0_____9__122
                      by contradiction /* non-normal terms */
                    qed
                  next
                    case split_case_3
                    solve( Store( 'rab__udp', enc(<l__3__25, x>, ~l__5__49) ) ▶₁ #vr.1 )
                      case Alice__merged_____1_____9__131
                      solve( State__Alice( <'rab_____15__0_1', 'rab__rab', %v__>,
                                           return__var__49, 'rab__',
                                           <l__0__49, l__1__49, l__2__49, l__3__49, l__4__49, ~l__5__49, 
                                            l__6__49>,
                                           'rab__'
                             ) ▶₀ #vr.10 )
                        case Alice__merged_____11__1_0_____15__0_1__94_case_1
                        solve( !KU( enc(<~n, l__0__49>, ~n.2) ) @ #vk.2 )
                          case c_enc
                          by solve( !KU( ~n.2 ) @ #vk.4 )
                        qed
                      next
                        case Alice__merged_____11__1_0_____15__0_1__94_case_2
                        solve( !KU( enc(<~n, l__0__49>, ~n.2) ) @ #vk.2 )
                          case c_enc
                          by solve( !KU( ~n.2 ) @ #vk.4 )
                        qed
                      qed
                    next
                      case Alice__merged_____2__1_0_____9__122
                      by solve( !KU( ~l__5__49 ) @ #vk.2 )
                    qed
                  qed
                next
                  case Bob__merged_____3__0_0_____9__79_case_1
                  by solve( !KU( ~n.2 ) @ #vk.2 )
                next
                  case Bob__merged_____3__0_0_____9__79_case_2
                  by solve( !KU( ~n.2 ) @ #vk.2 )
                qed
              qed
            qed
          qed
        qed
      qed
    next
      case Alice__merged_____1_____9__131
      solve( !ACP__( <'rab__Bob', 'rab__rab'>, 'rab__udp', 'rab__recv'
             ) ▶₂ #i )
        case Init__system__ACP__0
        solve( !Const__( 'rab__priv_key_bob', priv_key_bob__34 ) ▶₃ #i )
          case Const__priv_key_bob
          solve( !Const__( 'rab__nonce_b', nb ) ▶₄ #i )
            case Const__nonce_b
            solve( !Const__( 'rab__nonce_b', nonce_b__35 ) ▶₅ #i )
              case Const__nonce_b
              by solve( !Eq__( z, ~n.1 ) ▶₆ #i )
            qed
          qed
        qed
      qed
    next
      case Alice__merged_____2__1_0_____9__122
      solve( !ACP__( <'rab__Bob', 'rab__rab'>, 'rab__udp', 'rab__recv'
             ) ▶₂ #i )
        case Init__system__ACP__0
        solve( !Const__( 'rab__priv_key_bob', priv_key_bob__34 ) ▶₃ #i )
          case Const__priv_key_bob
          solve( !Const__( 'rab__nonce_b', nb ) ▶₄ #i )
            case Const__nonce_b
            solve( !Const__( 'rab__nonce_b', nonce_b__35 ) ▶₅ #i )
              case Const__nonce_b
              by solve( !Eq__( z, ~n.1 ) ▶₆ #i )
            qed
          qed
        qed
      qed
    next
      case Bob__merged_____3__0_0_____9__79
      solve( !ACP__( <'rab__Bob', 'rab__rab'>, 'rab__udp', 'rab__recv'
             ) ▶₂ #i )
        case Init__system__ACP__0
        solve( !Const__( 'rab__priv_key_bob', priv_key_bob__34 ) ▶₃ #i )
          case Const__priv_key_bob
          solve( !Const__( 'rab__nonce_b', nb ) ▶₄ #i )
            case Const__nonce_b
            solve( !Const__( 'rab__nonce_b', nonce_b__35 ) ▶₅ #i )
              case Const__nonce_b
              by solve( !Eq__( dec(enc(<~n, ~n.1>, pk(~n.2)), ~n.3), ~n.1 ) ▶₆ #i )
            qed
          qed
        qed
      qed
    qed
  next
    case Bob__merged_____9_____11__0_0__62_case_2
    solve( Store( 'rab__udp', n__0__25 ) ▶₁ #i )
      case Alice__merged_____15__0_1_____15__0_3__0_1__86
      solve( !ACP__( <'rab__Bob', 'rab__rab'>, 'rab__udp', 'rab__recv'
             ) ▶₂ #i )
        case Init__system__ACP__0
        solve( !Const__( 'rab__priv_key_bob', priv_key_bob__34 ) ▶₃ #i )
          case Const__priv_key_bob
          solve( !Const__( 'rab__nonce_b', nb ) ▶₄ #i )
            case Const__nonce_b
            solve( !Const__( 'rab__nonce_b', nonce_b__35 ) ▶₅ #i )
              case Const__nonce_b
              solve( !Eq__( z, ~n.1 ) ▶₆ #i )
                case Equality_gen
                solve( !KU( ~n.1 ) @ #vk )
                  case Alice__merged_____15__0_1_____15__0_3__0_1__86
                  solve( splitEqs(1) )
                    case split_case_1
                    solve( Store( 'rab__udp', n__0__9 ) ▶₁ #vr.1 )
                      case Alice__merged_____15__0_1_____15__0_3__0_1__86
                      solve( State__Alice( <'rab_____15__0_1', 'rab__rab', %v__>,
                                           return__var__49, 'rab__',
                                           <l__0__49, l__1__49, l__2__49, l__3__49, l__4__49, ~l__5__49, 
                                            l__6__49>,
                                           'rab__'
                             ) ▶₀ #vr.10 )
                        case Alice__merged_____11__1_0_____15__0_1__94_case_1
                        solve( !KU( enc(<~n, l__0__49>, ~n.2) ) @ #vk.3 )
                          case c_enc
                          by solve( !KU( ~n.2 ) @ #vk.5 )
                        qed
                      next
                        case Alice__merged_____11__1_0_____15__0_1__94_case_2
                        by solve( !KU( ~l__5__49 ) @ #vk.4 )
                      next
                        case Alice__merged_____11__1_0_____15__0_1__94_case_3
                        solve( !KU( enc(<~n, l__0__49>, ~n.2) ) @ #vk.3 )
                          case c_enc
                          by solve( !KU( ~n.2 ) @ #vk.5 )
                        qed
                      next
                        case Alice__merged_____11__1_0_____15__0_1__94_case_4
                        by solve( !KU( ~l__5__49 ) @ #vk.4 )
                      next
                        case Alice__merged_____11__1_0_____15__0_1__94_case_5
                        solve( !KU( enc(<~n, l__0__49>, ~n.2) ) @ #vk.3 )
                          case c_enc
                          by solve( !KU( ~n.2 ) @ #vk.5 )
                        qed
                      next
                        case Alice__merged_____11__1_0_____15__0_1__94_case_6
                        by solve( !KU( ~l__5__49 ) @ #vk.4 )
                      qed
                    next
                      case Alice__merged_____1_____9__131
                      solve( State__Alice( <'rab_____15__0_1', 'rab__rab', %v__>,
                                           return__var__49, 'rab__',
                                           <l__0__49, l__1__49, l__2__49, l__3__49, l__4__49, ~l__5__49, 
                                            l__6__49>,
                                           'rab__'
                             ) ▶₀ #vr.10 )
                        case Alice__merged_____11__1_0_____15__0_1__94_case_1
                        solve( !KU( enc(<~n, l__0__49>, ~n.2) ) @ #vk.3 )
                          case c_enc
                          by solve( !KU( ~n.2 ) @ #vk.5 )
                        qed
                      next
                        case Alice__merged_____11__1_0_____15__0_1__94_case_2
                        solve( !KU( enc(<~n, l__0__49>, ~n.2) ) @ #vk.3 )
                          case c_enc
                          by solve( !KU( ~n.2 ) @ #vk.5 )
                        qed
                      qed
                    next
                      case Alice__merged_____2__1_0_____9__122
                      solve( State__Alice( <'rab_____15__0_1', 'rab__rab', %v__>,
                                           return__var__49, 'rab__',
                                           <l__0__49, l__1__49, l__2__49, l__3__49, l__4__49, ~l__5__49, 
                                            l__6__49>,
                                           'rab__'
                             ) ▶₀ #vr.10 )
                        case Alice__merged_____11__1_0_____15__0_1__94_case_1
                        by solve( !KU( ~l__5__49 ) @ #vk.3 )
                      next
                        case Alice__merged_____11__1_0_____15__0_1__94_case_2
                        by solve( !KU( ~l__5__49 ) @ #vk.3 )
                      qed
                    next
                      case Bob__merged_____3__1_0_____9__75
                      by contradiction /* cyclic */
                    qed
                  next
                    case split_case_2
                    solve( !KU( enc(x, ~l__5__49) ) @ #vk.1 )
                      case Alice__merged_____15__0_1_____15__0_3__0_1__86
                      solve( Store( 'rab__udp', n__0__9 ) ▶₁ #vr.1 )
                        case Alice__merged_____15__0_1_____15__0_3__0_1__86
                        solve( State__Alice( <'rab_____15__0_1', 'rab__rab', %v__>,
                                             return__var__49, 'rab__',
                                             <l__0__49, l__1__49, l__2__49, l__3__49, l__4__49, ~l__5__49, 
                                              l__6__49>,
                                             'rab__'
                               ) ▶₀ #vr.10 )
                          case Alice__merged_____11__1_0_____15__0_1__94_case_1
                          solve( !KU( enc(<~n, l__0__49>, ~n.2) ) @ #vk.3 )
                            case c_enc
                            by solve( !KU( ~n.2 ) @ #vk.5 )
                          qed
                        next
                          case Alice__merged_____11__1_0_____15__0_1__94_case_2
                          by solve( !KU( ~l__5__49 ) @ #vk.4 )
                        next
                          case Alice__merged_____11__1_0_____15__0_1__94_case_3
                          solve( !KU( enc(<~n, l__0__49>, ~n.2) ) @ #vk.3 )
                            case c_enc
                            by solve( !KU( ~n.2 ) @ #vk.5 )
                          qed
                        next
                          case Alice__merged_____11__1_0_____15__0_1__94_case_4
                          by solve( !KU( ~l__5__49 ) @ #vk.4 )
                        next
                          case Alice__merged_____11__1_0_____15__0_1__94_case_5
                          solve( !KU( enc(<~n, l__0__49>, ~n.2) ) @ #vk.3 )
                            case c_enc
                            by solve( !KU( ~n.2 ) @ #vk.5 )
                          qed
                        next
                          case Alice__merged_____11__1_0_____15__0_1__94_case_6
                          by solve( !KU( ~l__5__49 ) @ #vk.4 )
                        qed
                      next
                        case Alice__merged_____1_____9__131
                        solve( State__Alice( <'rab_____15__0_1', 'rab__rab', %v__>,
                                             return__var__49, 'rab__',
                                             <l__0__49, l__1__49, l__2__49, l__3__49, l__4__49, ~l__5__49, 
                                              l__6__49>,
                                             'rab__'
                               ) ▶₀ #vr.10 )
                          case Alice__merged_____11__1_0_____15__0_1__94_case_1
                          solve( !KU( enc(<~n, l__0__49>, ~n.2) ) @ #vk.3 )
                            case c_enc
                            by solve( !KU( ~n.2 ) @ #vk.5 )
                          qed
                        next
                          case Alice__merged_____11__1_0_____15__0_1__94_case_2
                          solve( !KU( enc(<~n, l__0__49>, ~n.2) ) @ #vk.3 )
                            case c_enc
                            by solve( !KU( ~n.2 ) @ #vk.5 )
                          qed
                        qed
                      next
                        case Alice__merged_____2__1_0_____9__122
                        solve( State__Alice( <'rab_____15__0_1', 'rab__rab', %v__>,
                                             return__var__49, 'rab__',
                                             <l__0__49, l__1__49, l__2__49, l__3__49, l__4__49, ~l__5__49, 
                                              l__6__49>,
                                             'rab__'
                               ) ▶₀ #vr.10 )
                          case Alice__merged_____11__1_0_____15__0_1__94_case_1
                          by solve( !KU( ~l__5__49 ) @ #vk.3 )
                        next
                          case Alice__merged_____11__1_0_____15__0_1__94_case_2
                          by solve( !KU( ~l__5__49 ) @ #vk.3 )
                        qed
                      next
                        case Bob__merged_____3__1_0_____9__75
                        by contradiction /* cyclic */
                      qed
                    next
                      case Alice__merged_____1_____9__131
                      by contradiction /* non-normal terms */
                    next
                      case Alice__merged_____2__1_0_____9__122
                      by contradiction /* non-normal terms */
                    next
                      case c_enc
                      by solve( !KU( ~l__5__49 ) @ #vk.4 )
                    qed
                  next
                    case split_case_3
                    solve( !KU( enc(<l__3__25, x>, ~l__5__49) ) @ #vk.1 )
                      case Alice__merged_____1_____9__131
                      solve( Store( 'rab__udp', n__0__9 ) ▶₁ #vr.1 )
                        case Alice__merged_____15__0_1_____15__0_3__0_1__86
                        solve( State__Alice( <'rab_____15__0_1', 'rab__rab', %v__>,
                                             return__var__49, 'rab__',
                                             <l__0__49, l__1__49, l__2__49, l__3__49, l__4__49, ~l__5__49, 
                                              l__6__49>,
                                             'rab__'
                               ) ▶₀ #vr.10 )
                          case Alice__merged_____11__1_0_____15__0_1__94_case_1
                          solve( !KU( enc(<~n, l__0__49>, ~n.2) ) @ #vk.3 )
                            case c_enc
                            by solve( !KU( ~n.2 ) @ #vk.5 )
                          qed
                        next
                          case Alice__merged_____11__1_0_____15__0_1__94_case_2
                          solve( !KU( enc(<~n, l__0__49>, ~n.2) ) @ #vk.3 )
                            case c_enc
                            by solve( !KU( ~n.2 ) @ #vk.5 )
                          qed
                        next
                          case Alice__merged_____11__1_0_____15__0_1__94_case_3
                          solve( !KU( enc(<~n, l__0__49>, ~n.2) ) @ #vk.3 )
                            case c_enc
                            by solve( !KU( ~n.2 ) @ #vk.5 )
                          qed
                        qed
                      next
                        case Alice__merged_____1_____9__131
                        solve( State__Alice( <'rab_____15__0_1', 'rab__rab', %v__>,
                                             return__var__49, 'rab__',
                                             <l__0__49, l__1__49, l__2__49, l__3__49, l__4__49, ~l__5__49, 
                                              l__6__49>,
                                             'rab__'
                               ) ▶₀ #vr.10 )
                          case Alice__merged_____11__1_0_____15__0_1__94_case_1
                          solve( !KU( enc(<~n, l__0__49>, ~n.2) ) @ #vk.3 )
                            case c_enc
                            by solve( !KU( ~n.2 ) @ #vk.5 )
                          qed
                        next
                          case Alice__merged_____11__1_0_____15__0_1__94_case_2
                          solve( !KU( enc(<~n, l__0__49>, ~n.2) ) @ #vk.3 )
                            case c_enc
                            by solve( !KU( ~n.2 ) @ #vk.5 )
                          qed
                        qed
                      next
                        case Bob__merged_____3__1_0_____9__75
                        by contradiction /* cyclic */
                      qed
                    next
                      case Alice__merged_____2__1_0_____9__122
                      by solve( !KU( ~l__5__49 ) @ #vk.3 )
                    next
                      case c_enc
                      by solve( !KU( ~l__5__49 ) @ #vk.4 )
                    qed
                  qed
                next
                  case Bob__merged_____3__1_0_____9__75_case_1
                  by solve( !KU( ~n.2 ) @ #vk.3 )
                next
                  case Bob__merged_____3__1_0_____9__75_case_2
                  by solve( !KU( ~n.2 ) @ #vk.3 )
                qed
              qed
            qed
          qed
        qed
      qed
    next
      case Alice__merged_____1_____9__131
      solve( !ACP__( <'rab__Bob', 'rab__rab'>, 'rab__udp', 'rab__recv'
             ) ▶₂ #i )
        case Init__system__ACP__0
        solve( !Const__( 'rab__priv_key_bob', priv_key_bob__34 ) ▶₃ #i )
          case Const__priv_key_bob
          solve( !Const__( 'rab__nonce_b', nb ) ▶₄ #i )
            case Const__nonce_b
            solve( !Const__( 'rab__nonce_b', nonce_b__35 ) ▶₅ #i )
              case Const__nonce_b
              by solve( !Eq__( z, ~n.1 ) ▶₆ #i )
            qed
          qed
        qed
      qed
    next
      case Alice__merged_____2__1_0_____9__122
      solve( !ACP__( <'rab__Bob', 'rab__rab'>, 'rab__udp', 'rab__recv'
             ) ▶₂ #i )
        case Init__system__ACP__0
        solve( !Const__( 'rab__priv_key_bob', priv_key_bob__34 ) ▶₃ #i )
          case Const__priv_key_bob
          solve( !Const__( 'rab__nonce_b', nb ) ▶₄ #i )
            case Const__nonce_b
            solve( !Const__( 'rab__nonce_b', nonce_b__35 ) ▶₅ #i )
              case Const__nonce_b
              by solve( !Eq__( z, ~n.1 ) ▶₆ #i )
            qed
          qed
        qed
      qed
    next
      case Bob__merged_____3__1_0_____9__75
      solve( !ACP__( <'rab__Bob', 'rab__rab'>, 'rab__udp', 'rab__recv'
             ) ▶₂ #i )
        case Init__system__ACP__0
        solve( !Const__( 'rab__priv_key_bob', priv_key_bob__34 ) ▶₃ #i )
          case Const__priv_key_bob
          solve( !Const__( 'rab__nonce_b', nb ) ▶₄ #i )
            case Const__nonce_b
            solve( !Const__( 'rab__nonce_b', nonce_b__35 ) ▶₅ #i )
              case Const__nonce_b
              by solve( !Eq__( dec(enc(<~n, ~n.1>, pk(~n.2)), ~n.3), ~n.1 ) ▶₆ #i )
            qed
          qed
        qed
      qed
    qed
  qed
next
  case Bob__merged_____11__1_0_____13__0_1__55
  solve( State__Bob( <'rab_____11__1_0', param, %v__>, return__var__30,
                     'rab__', <l__0__30, l__1__30, l__2__30, l__3__30, l__4__30>, t__0__30
         ) ▶₀ #i )
    case Bob__merged_____9_____11__1_0__63_case_1
    solve( Store( 'rab__udp', n__0__30 ) ▶₁ #i )
      case Alice__merged_____15__0_1_____15__0_3__0_1__86
      solve( !ACP__( <'rab__Bob', 'rab__rab'>, 'rab__udp', 'rab__recv'
             ) ▶₃ #i )
        case Init__system__ACP__0
        solve( !Const__( 'rab__priv_key_bob', priv_key_bob__34 ) ▶₄ #i )
          case Const__priv_key_bob
          solve( !Const__( 'rab__nonce_b', nb ) ▶₅ #i )
            case Const__nonce_b
            solve( !Const__( 'rab__nonce_b', nonce_b__35 ) ▶₆ #i )
              case Const__nonce_b
              solve( !Eq__( z, ~n.1 ) ▶₇ #i )
                case Equality_gen
                solve( !KU( ~n.1 ) @ #vk )
                  case Alice__merged_____15__0_1_____15__0_3__0_1__86
                  solve( splitEqs(1) )
                    case split_case_1
                    solve( !KU( enc(~n.1, ~n.3) ) @ #vk.1 )
                      case Alice__merged_____15__0_1_____15__0_3__0_1__86
                      solve( Store( 'rab__udp', enc(<l__3__30, x>, ~n.3) ) ▶₁ #vr.1 )
                        case Alice__merged_____1_____9__131
                        solve( State__Alice( <'rab_____15__0_1', 'rab__rab', %v__>,
                                             return__var__49, 'rab__',
                                             <l__0__49, l__1__49, l__2__49, l__3__49, l__4__49, l__5__49, 
                                              l__6__49>,
                                             'rab__'
                               ) ▶₀ #vr.10 )
                          case Alice__merged_____11__1_0_____15__0_1__94_case_1
                          solve( !KU( enc(<~n, l__0__49>, ~n.2) ) @ #vk.3 )
                            case c_enc
                            by solve( !KU( ~n.2 ) @ #vk.5 )
                          qed
                        next
                          case Alice__merged_____11__1_0_____15__0_1__94_case_2
                          solve( !KU( enc(<~n, l__0__49>, ~n.2) ) @ #vk.3 )
                            case c_enc
                            by solve( !KU( ~n.2 ) @ #vk.5 )
                          qed
                        qed
                      next
                        case Alice__merged_____2__1_0_____9__122
                        by solve( !KU( ~n.3 ) @ #vk.3 )
                      qed
                    next
                      case c_enc
                      by solve( !KU( ~n.3 ) @ #vk.3 )
                    qed
                  next
                    case split_case_2
                    solve( !KU( enc(~n.1, ~n.3) ) @ #vk.1 )
                      case Alice__merged_____15__0_1_____15__0_3__0_1__86
                      solve( Store( 'rab__udp', enc(x, ~n.3) ) ▶₁ #vr.1 )
                        case Alice__merged_____15__0_1_____15__0_3__0_1__86
                        solve( State__Alice( <'rab_____15__0_1', 'rab__rab', %v__>,
                                             return__var__49, 'rab__',
                                             <l__0__49, l__1__49, l__2__49, l__3__49, l__4__49, l__5__49, 
                                              l__6__49>,
                                             'rab__'
                               ) ▶₀ #vr.10 )
                          case Alice__merged_____11__0_0_____15__0_1__98_case_1
                          solve( State__Alice( <'rab_____15__0_1', 'rab__rab', %v__>,
                                               return__var__49, 'rab__',
                                               <l__0__49, l__1__49, l__2__49, l__3__49, l__4__49, l__5__49, 
                                                l__6__49>,
                                               'rab__'
                                 ) ▶₀ #vr.13 )
                            case Alice__merged_____11__0_0_____15__0_1__98
                            by solve( !KU( ~n.2 ) @ #vk.2 )
                          qed
                        next
                          case Alice__merged_____11__0_0_____15__0_1__98_case_2
                          by solve( !KU( ~n.2 ) @ #vk.3 )
                        next
                          case Alice__merged_____11__1_0_____15__0_1__94_case_1
                          solve( !KU( enc(<~n, l__0__49>, ~n.2) ) @ #vk.3 )
                            case Alice__merged_____1_____9__131
                            solve( State__Alice( <'rab_____15__0_1', 'rab__rab', %v__>,
                                                 return__var__49, 'rab__',
                                                 <l__0__49, l__1__49, l__2__49, l__3__49, l__4__49, l__5__49, 
                                                  l__6__49>,
                                                 'rab__'
                                   ) ▶₀ #vr.13 )
                              case Alice__merged_____11__1_0_____15__0_1__94
                              by solve( !KU( ~n.2 ) @ #vk.3 )
                            qed
                          next
                            case c_enc
                            by solve( !KU( ~n.2 ) @ #vk.5 )
                          qed
                        next
                          case Alice__merged_____11__1_0_____15__0_1__94_case_2
                          solve( !KU( enc(<~n, l__0__49>, ~n.2) ) @ #vk.3 )
                            case Alice__merged_____2__1_0_____9__122
                            by solve( !KU( ~n.2 ) @ #vk.4 )
                          next
                            case c_enc
                            by solve( !KU( ~n.2 ) @ #vk.6 )
                          qed
                        next
                          case Alice__merged_____11__1_0_____15__0_1__94_case_3
                          solve( !KU( enc(<~n, l__0__49>, ~n.2) ) @ #vk.3 )
                            case Alice__merged_____1_____9__131
                            solve( State__Alice( <'rab_____15__0_1', 'rab__rab', %v__>,
                                                 return__var__49, 'rab__',
                                                 <l__0__49, l__1__49, l__2__49, l__3__49, l__4__49, l__5__49, 
                                                  l__6__49>,
                                                 'rab__'
                                   ) ▶₀ #vr.13 )
                              case Alice__merged_____11__1_0_____15__0_1__94
                              by solve( !KU( ~n.2 ) @ #vk.3 )
                            qed
                          next
                            case c_enc
                            by solve( !KU( ~n.2 ) @ #vk.5 )
                          qed
                        next
                          case Alice__merged_____11__1_0_____15__0_1__94_case_4
                          solve( !KU( enc(<~n, l__0__49>, ~n.2) ) @ #vk.3 )
                            case Alice__merged_____2__1_0_____9__122
                            by solve( !KU( ~n.2 ) @ #vk.4 )
                          next
                            case c_enc
                            by solve( !KU( ~n.2 ) @ #vk.6 )
                          qed
                        next
                          case Alice__merged_____11__1_0_____15__0_1__94_case_5
                          solve( !KU( enc(<~n, l__0__49>, ~n.2) ) @ #vk.3 )
                            case Alice__merged_____1_____9__131
                            solve( State__Alice( <'rab_____15__0_1', 'rab__rab', %v__>,
                                                 return__var__49, 'rab__',
                                                 <l__0__49, l__1__49, l__2__49, l__3__49, l__4__49, l__5__49, 
                                                  l__6__49>,
                                                 'rab__'
                                   ) ▶₀ #vr.13 )
                              case Alice__merged_____11__1_0_____15__0_1__94
                              by solve( !KU( ~n.2 ) @ #vk.3 )
                            qed
                          next
                            case c_enc
                            by solve( !KU( ~n.2 ) @ #vk.5 )
                          qed
                        next
                          case Alice__merged_____11__1_0_____15__0_1__94_case_6
                          solve( !KU( enc(<~n, l__0__49>, ~n.2) ) @ #vk.3 )
                            case Alice__merged_____2__1_0_____9__122
                            by solve( !KU( ~n.2 ) @ #vk.4 )
                          next
                            case c_enc
                            by solve( !KU( ~n.2 ) @ #vk.6 )
                          qed
                        qed
                      next
                        case Alice__merged_____1_____9__131
                        by contradiction /* non-normal terms */
                      next
                        case Alice__merged_____2__1_0_____9__122
                        by contradiction /* non-normal terms */
                      qed
                    next
                      case c_enc
                      by solve( !KU( ~n.3 ) @ #vk.3 )
                    qed
                  next
                    case split_case_3
                    solve( !KU( enc(~n.1, ~n.3) ) @ #vk.1 )
                      case Alice__merged_____15__0_1_____15__0_3__0_1__86
                      solve( Store( 'rab__udp', l__4__30 ) ▶₁ #vr.1 )
                        case Alice__merged_____15__0_1_____15__0_3__0_1__86
                        solve( State__Alice( <'rab_____15__0_1', 'rab__rab', %v__>,
                                             return__var__49, 'rab__',
                                             <l__0__49, l__1__49, l__2__49, l__3__49, l__4__49, l__5__49.1, 
                                              l__6__49>,
                                             'rab__'
                               ) ▶₀ #vr.10 )
                          case Alice__merged_____11__0_0_____15__0_1__98_case_1
                          solve( State__Alice( <'rab_____15__0_1', 'rab__rab', %v__>,
                                               return__var__49, 'rab__',
                                               <l__0__49, l__1__49, l__2__49, l__3__49, l__4__49, l__5__49.1, 
                                                l__6__49>,
                                               'rab__'
                                 ) ▶₀ #vr.13 )
                            case Alice__merged_____11__0_0_____15__0_1__98
                            by solve( !KU( ~n.2 ) @ #vk.2 )
                          qed
                        next
                          case Alice__merged_____11__0_0_____15__0_1__98_case_2
                          by solve( !KU( ~n.2 ) @ #vk.3 )
                        next
                          case Alice__merged_____11__1_0_____15__0_1__94_case_1
                          solve( !KU( enc(<~n, l__0__49>, ~n.2) ) @ #vk.3 )
                            case Alice__merged_____1_____9__131
                            solve( State__Alice( <'rab_____15__0_1', 'rab__rab', %v__>,
                                                 return__var__49, 'rab__',
                                                 <l__0__49, l__1__49, l__2__49, l__3__49, l__4__49, 
                                                  l__5__49.1, l__6__49>,
                                                 'rab__'
                                   ) ▶₀ #vr.13 )
                              case Alice__merged_____11__1_0_____15__0_1__94
                              by solve( !KU( ~n.2 ) @ #vk.3 )
                            qed
                          next
                            case c_enc
                            by solve( !KU( ~n.2 ) @ #vk.5 )
                          qed
                        next
                          case Alice__merged_____11__1_0_____15__0_1__94_case_2
                          solve( !KU( enc(<~n, l__0__49>, ~n.2) ) @ #vk.3 )
                            case Alice__merged_____2__1_0_____9__122
                            by solve( !KU( ~n.2 ) @ #vk.4 )
                          next
                            case c_enc
                            by solve( !KU( ~n.2 ) @ #vk.6 )
                          qed
                        next
                          case Alice__merged_____11__1_0_____15__0_1__94_case_3
                          solve( !KU( enc(<~n, l__0__49>, ~n.2) ) @ #vk.3 )
                            case Alice__merged_____1_____9__131
                            solve( State__Alice( <'rab_____15__0_1', 'rab__rab', %v__>,
                                                 return__var__49, 'rab__',
                                                 <l__0__49, l__1__49, l__2__49, l__3__49, l__4__49, 
                                                  l__5__49.1, l__6__49>,
                                                 'rab__'
                                   ) ▶₀ #vr.13 )
                              case Alice__merged_____11__1_0_____15__0_1__94
                              by solve( !KU( ~n.2 ) @ #vk.3 )
                            qed
                          next
                            case c_enc
                            by solve( !KU( ~n.2 ) @ #vk.5 )
                          qed
                        next
                          case Alice__merged_____11__1_0_____15__0_1__94_case_4
                          solve( !KU( enc(<~n, l__0__49>, ~n.2) ) @ #vk.3 )
                            case Alice__merged_____2__1_0_____9__122
                            by solve( !KU( ~n.2 ) @ #vk.4 )
                          next
                            case c_enc
                            by solve( !KU( ~n.2 ) @ #vk.6 )
                          qed
                        next
                          case Alice__merged_____11__1_0_____15__0_1__94_case_5
                          solve( !KU( enc(<~n, l__0__49>, ~n.2) ) @ #vk.3 )
                            case Alice__merged_____1_____9__131
                            solve( State__Alice( <'rab_____15__0_1', 'rab__rab', %v__>,
                                                 return__var__49, 'rab__',
                                                 <l__0__49, l__1__49, l__2__49, l__3__49, l__4__49, 
                                                  l__5__49.1, l__6__49>,
                                                 'rab__'
                                   ) ▶₀ #vr.13 )
                              case Alice__merged_____11__1_0_____15__0_1__94
                              by solve( !KU( ~n.2 ) @ #vk.3 )
                            qed
                          next
                            case c_enc
                            by solve( !KU( ~n.2 ) @ #vk.5 )
                          qed
                        next
                          case Alice__merged_____11__1_0_____15__0_1__94_case_6
                          solve( !KU( enc(<~n, l__0__49>, ~n.2) ) @ #vk.3 )
                            case Alice__merged_____2__1_0_____9__122
                            by solve( !KU( ~n.2 ) @ #vk.4 )
                          next
                            case c_enc
                            by solve( !KU( ~n.2 ) @ #vk.6 )
                          qed
                        qed
                      next
                        case Alice__merged_____1_____9__131
                        solve( State__Alice( <'rab_____15__0_1', 'rab__rab', %v__>,
                                             return__var__49, 'rab__',
                                             <l__0__49, l__1__49, l__2__49, l__3__49, l__4__49, l__5__49, 
                                              l__6__49>,
                                             'rab__'
                               ) ▶₀ #vr.10 )
                          case Alice__merged_____11__1_0_____15__0_1__94_case_1
                          solve( !KU( enc(<~n, l__0__49>, ~n.2) ) @ #vk.3 )
                            case Alice__merged_____1_____9__131
                            solve( State__Alice( <'rab_____15__0_1', 'rab__rab', %v__>,
                                                 return__var__49, 'rab__',
                                                 <l__0__49, l__1__49, l__2__49, l__3__49, l__4__49, l__5__49, 
                                                  l__6__49>,
                                                 'rab__'
                                   ) ▶₀ #vr.13 )
                              case Alice__merged_____11__1_0_____15__0_1__94
                              by solve( !KU( ~n.2 ) @ #vk.3 )
                            qed
                          next
                            case c_enc
                            by solve( !KU( ~n.2 ) @ #vk.5 )
                          qed
                        next
                          case Alice__merged_____11__1_0_____15__0_1__94_case_2
                          solve( !KU( enc(<~n, l__0__49>, ~n.2) ) @ #vk.3 )
                            case Alice__merged_____1_____9__131
                            solve( State__Alice( <'rab_____15__0_1', 'rab__rab', %v__>,
                                                 return__var__49, 'rab__',
                                                 <l__0__49, l__1__49, l__2__49, l__3__49, l__4__49, l__5__49, 
                                                  l__6__49>,
                                                 'rab__'
                                   ) ▶₀ #vr.13 )
                              case Alice__merged_____11__1_0_____15__0_1__94
                              by solve( !KU( ~n.2 ) @ #vk.3 )
                            qed
                          next
                            case c_enc
                            by solve( !KU( ~n.2 ) @ #vk.5 )
                          qed
                        qed
                      next
                        case Alice__merged_____2__1_0_____9__122
                        solve( State__Alice( <'rab_____15__0_1', 'rab__rab', %v__>,
                                             return__var__49, 'rab__',
                                             <l__0__49, l__1__49, l__2__49, l__3__49, l__4__49, l__5__49, 
                                              l__6__49>,
                                             'rab__'
                               ) ▶₀ #vr.10 )
                          case Alice__merged_____11__1_0_____15__0_1__94_case_1
                          solve( !KU( enc(<~n, l__0__49>, ~n.2) ) @ #vk.4 )
                            case Alice__merged_____2__1_0_____9__122
                            by solve( !KU( ~n.2 ) @ #vk.4 )
                          next
                            case c_enc
                            by solve( !KU( ~n.2 ) @ #vk.6 )
                          qed
                        next
                          case Alice__merged_____11__1_0_____15__0_1__94_case_2
                          solve( !KU( enc(<~n, l__0__49>, ~n.2) ) @ #vk.4 )
                            case Alice__merged_____2__1_0_____9__122
                            by solve( !KU( ~n.2 ) @ #vk.4 )
                          next
                            case c_enc
                            by solve( !KU( ~n.2 ) @ #vk.6 )
                          qed
                        qed
                      next
                        case Bob__merged_____3__0_0_____9__79
                        by contradiction /* cyclic */
                      qed
                    next
                      case c_enc
                      by solve( !KU( ~n.3 ) @ #vk.3 )
                    qed
                  qed
                next
                  case Bob__merged_____3__0_0_____9__79_case_1
                  by solve( !KU( ~n.2 ) @ #vk.3 )
                next
                  case Bob__merged_____3__0_0_____9__79_case_2
                  by solve( !KU( ~n.2 ) @ #vk.3 )
                qed
              qed
            qed
          qed
        qed
      qed
    next
      case Alice__merged_____1_____9__131
      solve( !ACP__( <'rab__Bob', 'rab__rab'>, 'rab__udp', 'rab__recv'
             ) ▶₃ #i )
        case Init__system__ACP__0
        solve( !Const__( 'rab__priv_key_bob', priv_key_bob__34 ) ▶₄ #i )
          case Const__priv_key_bob
          solve( !Const__( 'rab__nonce_b', nb ) ▶₅ #i )
            case Const__nonce_b
            solve( !Const__( 'rab__nonce_b', nonce_b__35 ) ▶₆ #i )
              case Const__nonce_b
              solve( !Eq__( z, ~n.1 ) ▶₇ #i )
                case Equality_gen
                solve( !KU( ~n.1 ) @ #vk )
                  case Alice__merged_____15__0_1_____15__0_3__0_1__86
                  solve( splitEqs(1) )
                    case split_case_1
                    solve( !KU( enc(~n.1, ~n.3) ) @ #vk.1 )
                      case Alice__merged_____15__0_1_____15__0_3__0_1__86
                      by solve( Store( 'rab__udp', enc(<l__3__30, x>, ~n.3) ) ▶₁ #vr.1 )
                    next
                      case c_enc
                      by solve( !KU( ~n.3 ) @ #vk.3 )
                    qed
                  next
                    case split_case_2
                    solve( !KU( enc(~n.1, ~n.3) ) @ #vk.1 )
                      case Alice__merged_____15__0_1_____15__0_3__0_1__86
                      solve( Store( 'rab__udp', enc(x, ~n.3) ) ▶₁ #vr.1 )
                        case Alice__merged_____15__0_1_____15__0_3__0_1__86
                        solve( File__Alice( 'rab__rab', loc__0, n__0__20 ) ▶₁ #vr.10 )
                          case Alice__init_filesys_____0_____1__0
                          solve( State__Alice( <'rab_____15__0_1', 'rab__rab', %v__>,
                                               return__var__49, 'rab__',
                                               <l__0__49, l__1__49, l__2__49, l__3__49, l__4__49, l__5__49, 
                                                l__6__49>,
                                               'rab__'
                                 ) ▶₀ #vr.15 )
                            case Alice__merged_____11__1_0_____15__0_1__94_case_1
                            solve( !KU( pk(~n.3) ) @ #vk.2 )
                              case c_pk
                              by solve( !KU( ~n.3 ) @ #vk.4 )
                            qed
                          next
                            case Alice__merged_____11__1_0_____15__0_1__94_case_2
                            solve( !KU( pk(~n.3) ) @ #vk.2 )
                              case c_pk
                              by solve( !KU( ~n.3 ) @ #vk.4 )
                            qed
                          qed
                        next
                          case Alice__merged_____1_____9__131
                          by contradiction /* cyclic */
                        qed
                      qed
                    next
                      case c_enc
                      by solve( !KU( ~n.3 ) @ #vk.3 )
                    qed
                  next
                    case split_case_3
                    solve( !KU( enc(~n.1, ~n.3) ) @ #vk.1 )
                      case Alice__merged_____15__0_1_____15__0_3__0_1__86
                      solve( Store( 'rab__udp', l__4__30 ) ▶₁ #vr.1 )
                        case Alice__merged_____15__0_1_____15__0_3__0_1__86
                        solve( File__Alice( 'rab__rab', loc__0, n__0__20 ) ▶₁ #vr.10 )
                          case Alice__init_filesys_____0_____1__0
                          solve( State__Alice( <'rab_____15__0_1', 'rab__rab', %v__>,
                                               return__var__49, 'rab__',
                                               <l__0__49, l__1__49, l__2__49, l__3__49, l__4__49, l__5__49.1, 
                                                l__6__49>,
                                               'rab__'
                                 ) ▶₀ #vr.15 )
                            case Alice__merged_____11__1_0_____15__0_1__94_case_1
                            solve( !KU( pk(~n.3) ) @ #vk.2 )
                              case c_pk
                              by solve( !KU( ~n.3 ) @ #vk.4 )
                            qed
                          next
                            case Alice__merged_____11__1_0_____15__0_1__94_case_2
                            solve( !KU( pk(~n.3) ) @ #vk.2 )
                              case c_pk
                              by solve( !KU( ~n.3 ) @ #vk.4 )
                            qed
                          qed
                        next
                          case Alice__merged_____1_____9__131
                          by contradiction /* cyclic */
                        qed
                      next
                        case Bob__merged_____3__0_0_____9__79
                        by contradiction /* cyclic */
                      qed
                    next
                      case c_enc
                      by solve( !KU( ~n.3 ) @ #vk.3 )
                    qed
                  qed
                next
                  case Bob__merged_____3__0_0_____9__79_case_1
                  by solve( !KU( ~n.2 ) @ #vk.3 )
                next
                  case Bob__merged_____3__0_0_____9__79_case_2
                  by solve( !KU( ~n.2 ) @ #vk.3 )
                qed
              qed
            qed
          qed
        qed
      qed
    next
      case Alice__merged_____2__1_0_____9__122
      solve( !ACP__( <'rab__Bob', 'rab__rab'>, 'rab__udp', 'rab__recv'
             ) ▶₃ #i )
        case Init__system__ACP__0
        solve( !Const__( 'rab__priv_key_bob', priv_key_bob__34 ) ▶₄ #i )
          case Const__priv_key_bob
          solve( !Const__( 'rab__nonce_b', nb ) ▶₅ #i )
            case Const__nonce_b
            solve( !Const__( 'rab__nonce_b', nonce_b__35 ) ▶₆ #i )
              case Const__nonce_b
              solve( !Eq__( z, ~n.1 ) ▶₇ #i )
                case Equality_gen
                solve( !KU( ~n.1 ) @ #vk )
                  case Alice__merged_____15__0_1_____15__0_3__0_1__86
                  solve( splitEqs(1) )
                    case split_case_1
                    solve( !KU( enc(~n.1, ~n.3) ) @ #vk.1 )
                      case Alice__merged_____15__0_1_____15__0_3__0_1__86
                      by solve( Store( 'rab__udp', enc(<l__3__30, x>, ~n.3) ) ▶₁ #vr.1 )
                    next
                      case c_enc
                      by solve( !KU( ~n.3 ) @ #vk.4 )
                    qed
                  next
                    case split_case_2
                    solve( !KU( enc(~n.1, ~n.3) ) @ #vk.1 )
                      case Alice__merged_____15__0_1_____15__0_3__0_1__86
                      solve( Store( 'rab__udp', enc(x, ~n.3) ) ▶₁ #vr.1 )
                        case Alice__merged_____15__0_1_____15__0_3__0_1__86
                        solve( File__Alice( 'rab__rab', loc__0, n__0__11 ) ▶₁ #vr.10 )
                          case Alice__merged_____0_____2__1_0__133
                          solve( State__Alice( <'rab_____15__0_1', 'rab__rab', %v__>,
                                               return__var__49, 'rab__',
                                               <l__0__49, l__1__49, l__2__49, l__3__49, l__4__49, l__5__49, 
                                                l__6__49>,
                                               'rab__'
                                 ) ▶₀ #vr.15 )
                            case Alice__merged_____11__1_0_____15__0_1__94_case_1
                            solve( !KU( enc(<~n, l__0__49>, ~n.2) ) @ #vk.3 )
                              case Alice__merged_____2__1_0_____9__122
                              by solve( !KU( ~n.2 ) @ #vk.3 )
                            next
                              case c_enc
                              by solve( !KU( ~n.2 ) @ #vk.5 )
                            qed
                          next
                            case Alice__merged_____11__1_0_____15__0_1__94_case_2
                            solve( !KU( enc(<~n, l__0__49>, ~n.2) ) @ #vk.3 )
                              case Alice__merged_____2__1_0_____9__122
                              by solve( !KU( ~n.2 ) @ #vk.3 )
                            next
                              case c_enc
                              by solve( !KU( ~n.2 ) @ #vk.5 )
                            qed
                          qed
                        next
                          case Alice__merged_____2__1_0_____9__122
                          by contradiction /* cyclic */
                        qed
                      qed
                    next
                      case c_enc
                      by solve( !KU( ~n.3 ) @ #vk.4 )
                    qed
                  next
                    case split_case_3
                    solve( !KU( enc(~n.1, ~n.3) ) @ #vk.1 )
                      case Alice__merged_____15__0_1_____15__0_3__0_1__86
                      solve( Store( 'rab__udp', l__4__30 ) ▶₁ #vr.1 )
                        case Alice__merged_____15__0_1_____15__0_3__0_1__86
                        solve( File__Alice( 'rab__rab', loc__0, n__0__11 ) ▶₁ #vr.10 )
                          case Alice__merged_____0_____2__1_0__133
                          solve( State__Alice( <'rab_____15__0_1', 'rab__rab', %v__>,
                                               return__var__49, 'rab__',
                                               <l__0__49, l__1__49, l__2__49, l__3__49, l__4__49, l__5__49.1, 
                                                l__6__49>,
                                               'rab__'
                                 ) ▶₀ #vr.15 )
                            case Alice__merged_____11__1_0_____15__0_1__94_case_1
                            solve( !KU( enc(<~n, l__0__49>, ~n.2) ) @ #vk.3 )
                              case Alice__merged_____2__1_0_____9__122
                              by solve( !KU( ~n.2 ) @ #vk.3 )
                            next
                              case c_enc
                              by solve( !KU( ~n.2 ) @ #vk.5 )
                            qed
                          next
                            case Alice__merged_____11__1_0_____15__0_1__94_case_2
                            solve( !KU( enc(<~n, l__0__49>, ~n.2) ) @ #vk.3 )
                              case Alice__merged_____2__1_0_____9__122
                              by solve( !KU( ~n.2 ) @ #vk.3 )
                            next
                              case c_enc
                              by solve( !KU( ~n.2 ) @ #vk.5 )
                            qed
                          qed
                        next
                          case Alice__merged_____2__1_0_____9__122
                          by contradiction /* cyclic */
                        qed
                      next
                        case Bob__merged_____3__0_0_____9__79
                        by contradiction /* cyclic */
                      qed
                    next
                      case c_enc
                      by solve( !KU( ~n.3 ) @ #vk.4 )
                    qed
                  qed
                next
                  case Bob__merged_____3__0_0_____9__79_case_1
                  by solve( !KU( ~n.2 ) @ #vk.4 )
                next
                  case Bob__merged_____3__0_0_____9__79_case_2
                  by solve( !KU( ~n.2 ) @ #vk.4 )
                qed
              qed
            qed
          qed
        qed
      qed
    next
      case Bob__merged_____3__0_0_____9__79
      solve( !ACP__( <'rab__Bob', 'rab__rab'>, 'rab__udp', 'rab__recv'
             ) ▶₃ #i )
        case Init__system__ACP__0
        solve( !Const__( 'rab__priv_key_bob', priv_key_bob__34 ) ▶₄ #i )
          case Const__priv_key_bob
          solve( !Const__( 'rab__nonce_b', nb ) ▶₅ #i )
            case Const__nonce_b
            solve( !Const__( 'rab__nonce_b', nonce_b__35 ) ▶₆ #i )
              case Const__nonce_b
              solve( !Eq__( z, ~n.1 ) ▶₇ #i )
                case Equality_gen
                solve( !KU( ~n.1 ) @ #vk )
                  case Alice__merged_____15__0_1_____15__0_3__0_1__86
                  solve( splitEqs(1) )
                    case split_case_1
                    solve( !KU( enc(~n.1, ~n.3) ) @ #vk.1 )
                      case Alice__merged_____15__0_1_____15__0_3__0_1__86
                      solve( Store( 'rab__udp', enc(<l__3__30, x>, ~n.3) ) ▶₁ #vr.1 )
                        case Alice__merged_____1_____9__131
                        solve( State__Alice( <'rab_____15__0_1', 'rab__rab', %v__>,
                                             return__var__49, 'rab__',
                                             <l__0__49, l__1__49, l__2__49, l__3__49, l__4__49, l__5__49, 
                                              l__6__49>,
                                             'rab__'
                               ) ▶₀ #vr.11 )
                          case Alice__merged_____11__1_0_____15__0_1__94
                          by solve( !KU( ~n.3 ) @ #vk.2 )
                        qed
                      next
                        case Alice__merged_____2__1_0_____9__122
                        by solve( !KU( ~n.3 ) @ #vk.3 )
                      qed
                    next
                      case c_enc
                      by solve( !KU( ~n.3 ) @ #vk.3 )
                    qed
                  next
                    case split_case_2
                    solve( !KU( enc(~n.1, ~n.3) ) @ #vk.1 )
                      case Alice__merged_____15__0_1_____15__0_3__0_1__86
                      solve( Store( 'rab__udp', enc(x, ~n.3) ) ▶₁ #vr.1 )
                        case Alice__merged_____15__0_1_____15__0_3__0_1__86
                        solve( State__Alice( <'rab_____15__0_1', 'rab__rab', %v__>,
                                             return__var__49, 'rab__',
                                             <l__0__49, l__1__49, l__2__49, l__3__49, l__4__49, l__5__49, 
                                              l__6__49>,
                                             'rab__'
                               ) ▶₀ #vr.11 )
                          case Alice__merged_____11__0_0_____15__0_1__98_case_1
                          by solve( !KU( ~n.2 ) @ #vk.2 )
                        next
                          case Alice__merged_____11__0_0_____15__0_1__98_case_2
                          by solve( !KU( ~n.2 ) @ #vk.2 )
                        next
                          case Alice__merged_____11__1_0_____15__0_1__94_case_1
                          solve( !KU( enc(<~n, l__0__49>, ~n.2) ) @ #vk.3 )
                            case Alice__merged_____1_____9__131
                            by solve( !KU( ~n.2 ) @ #vk.3 )
                          next
                            case c_enc
                            by solve( !KU( ~n.2 ) @ #vk.5 )
                          qed
                        next
                          case Alice__merged_____11__1_0_____15__0_1__94_case_2
                          solve( !KU( enc(<~n, l__0__49>, ~n.2) ) @ #vk.3 )
                            case Alice__merged_____2__1_0_____9__122
                            by solve( !KU( ~n.2 ) @ #vk.3 )
                          next
                            case c_enc
                            by solve( !KU( ~n.2 ) @ #vk.5 )
                          qed
                        next
                          case Alice__merged_____11__1_0_____15__0_1__94_case_3
                          solve( !KU( enc(<~n, l__0__49>, ~n.2) ) @ #vk.3 )
                            case Alice__merged_____1_____9__131
                            by solve( !KU( ~n.2 ) @ #vk.3 )
                          next
                            case c_enc
                            by solve( !KU( ~n.2 ) @ #vk.5 )
                          qed
                        next
                          case Alice__merged_____11__1_0_____15__0_1__94_case_4
                          solve( !KU( enc(<~n, l__0__49>, ~n.2) ) @ #vk.3 )
                            case Alice__merged_____2__1_0_____9__122
                            by solve( !KU( ~n.2 ) @ #vk.3 )
                          next
                            case c_enc
                            by solve( !KU( ~n.2 ) @ #vk.5 )
                          qed
                        qed
                      next
                        case Alice__merged_____1_____9__131
                        by contradiction /* non-normal terms */
                      next
                        case Alice__merged_____2__1_0_____9__122
                        by contradiction /* non-normal terms */
                      qed
                    next
                      case c_enc
                      by solve( !KU( ~n.3 ) @ #vk.3 )
                    qed
                  next
                    case split_case_3
                    solve( !KU( enc(~n.1, ~n.3) ) @ #vk.1 )
                      case Alice__merged_____15__0_1_____15__0_3__0_1__86
                      solve( Store( 'rab__udp', l__4__30 ) ▶₁ #vr.1 )
                        case Alice__merged_____15__0_1_____15__0_3__0_1__86
                        solve( State__Alice( <'rab_____15__0_1', 'rab__rab', %v__>,
                                             return__var__49, 'rab__',
                                             <l__0__49, l__1__49, l__2__49, l__3__49, l__4__49, l__5__49.1, 
                                              l__6__49>,
                                             'rab__'
                               ) ▶₀ #vr.11 )
                          case Alice__merged_____11__0_0_____15__0_1__98_case_1
                          by solve( !KU( ~n.2 ) @ #vk.2 )
                        next
                          case Alice__merged_____11__0_0_____15__0_1__98_case_2
                          by solve( !KU( ~n.2 ) @ #vk.2 )
                        next
                          case Alice__merged_____11__1_0_____15__0_1__94_case_1
                          solve( !KU( enc(<~n, l__0__49>, ~n.2) ) @ #vk.3 )
                            case Alice__merged_____1_____9__131
                            by solve( !KU( ~n.2 ) @ #vk.3 )
                          next
                            case c_enc
                            by solve( !KU( ~n.2 ) @ #vk.5 )
                          qed
                        next
                          case Alice__merged_____11__1_0_____15__0_1__94_case_2
                          solve( !KU( enc(<~n, l__0__49>, ~n.2) ) @ #vk.3 )
                            case Alice__merged_____2__1_0_____9__122
                            by solve( !KU( ~n.2 ) @ #vk.3 )
                          next
                            case c_enc
                            by solve( !KU( ~n.2 ) @ #vk.5 )
                          qed
                        next
                          case Alice__merged_____11__1_0_____15__0_1__94_case_3
                          solve( !KU( enc(<~n, l__0__49>, ~n.2) ) @ #vk.3 )
                            case Alice__merged_____1_____9__131
                            by solve( !KU( ~n.2 ) @ #vk.3 )
                          next
                            case c_enc
                            by solve( !KU( ~n.2 ) @ #vk.5 )
                          qed
                        next
                          case Alice__merged_____11__1_0_____15__0_1__94_case_4
                          solve( !KU( enc(<~n, l__0__49>, ~n.2) ) @ #vk.3 )
                            case Alice__merged_____2__1_0_____9__122
                            by solve( !KU( ~n.2 ) @ #vk.3 )
                          next
                            case c_enc
                            by solve( !KU( ~n.2 ) @ #vk.5 )
                          qed
                        qed
                      next
                        case Alice__merged_____1_____9__131
                        solve( State__Alice( <'rab_____15__0_1', 'rab__rab', %v__>,
                                             return__var__49, 'rab__',
                                             <l__0__49, l__1__49, l__2__49, l__3__49, l__4__49, l__5__49, 
                                              l__6__49>,
                                             'rab__'
                               ) ▶₀ #vr.11 )
                          case Alice__merged_____11__1_0_____15__0_1__94
                          solve( !KU( enc(<~n, l__0__49>, ~n.2) ) @ #vk.3 )
                            case Alice__merged_____1_____9__131
                            by solve( !KU( ~n.2 ) @ #vk.3 )
                          next
                            case c_enc
                            by solve( !KU( ~n.2 ) @ #vk.5 )
                          qed
                        qed
                      next
                        case Alice__merged_____2__1_0_____9__122
                        solve( State__Alice( <'rab_____15__0_1', 'rab__rab', %v__>,
                                             return__var__49, 'rab__',
                                             <l__0__49, l__1__49, l__2__49, l__3__49, l__4__49, l__5__49, 
                                              l__6__49>,
                                             'rab__'
                               ) ▶₀ #vr.11 )
                          case Alice__merged_____11__1_0_____15__0_1__94
                          solve( !KU( enc(<~n, l__0__49>, ~n.2) ) @ #vk.3 )
                            case Alice__merged_____2__1_0_____9__122
                            by solve( !KU( ~n.2 ) @ #vk.3 )
                          next
                            case c_enc
                            by solve( !KU( ~n.2 ) @ #vk.5 )
                          qed
                        qed
                      qed
                    next
                      case c_enc
                      by solve( !KU( ~n.3 ) @ #vk.3 )
                    qed
                  qed
                next
                  case Bob__merged_____3__0_0_____9__79_case_1
                  by solve( !KU( ~n.2 ) @ #vk.3 )
                next
                  case Bob__merged_____3__0_0_____9__79_case_2
                  by solve( !KU( ~n.2 ) @ #vk.3 )
                qed
              qed
            qed
          qed
        qed
      qed
    qed
  next
    case Bob__merged_____9_____11__1_0__63_case_2
    solve( Store( 'rab__udp', n__0__30 ) ▶₁ #i )
      case Alice__merged_____15__0_1_____15__0_3__0_1__86
      solve( !ACP__( <'rab__Bob', 'rab__rab'>, 'rab__udp', 'rab__recv'
             ) ▶₃ #i )
        case Init__system__ACP__0
        solve( !Const__( 'rab__priv_key_bob', priv_key_bob__34 ) ▶₄ #i )
          case Const__priv_key_bob
          solve( !Const__( 'rab__nonce_b', nb ) ▶₅ #i )
            case Const__nonce_b
            solve( !Const__( 'rab__nonce_b', nonce_b__35 ) ▶₆ #i )
              case Const__nonce_b
              solve( !Eq__( z, ~n.1 ) ▶₇ #i )
                case Equality_gen
                solve( !KU( ~n.1 ) @ #vk )
                  case Alice__merged_____15__0_1_____15__0_3__0_1__86
                  solve( splitEqs(1) )
                    case split_case_1
                    solve( !KU( enc(~n.1, ~n.3) ) @ #vk.1 )
                      case Alice__merged_____15__0_1_____15__0_3__0_1__86
                      solve( !KU( enc(<l__3__30, x>, ~n.3) ) @ #vk.2 )
                        case Alice__merged_____1_____9__131
                        solve( Store( 'rab__udp', n__0__9 ) ▶₁ #vr.1 )
                          case Alice__merged_____15__0_1_____15__0_3__0_1__86
                          solve( State__Alice( <'rab_____15__0_1', 'rab__rab', %v__>,
                                               return__var__49, 'rab__',
                                               <l__0__49, l__1__49, l__2__49, l__3__49, l__4__49, l__5__49, 
                                                l__6__49>,
                                               'rab__'
                                 ) ▶₀ #vr.10 )
                            case Alice__merged_____11__1_0_____15__0_1__94_case_1
                            solve( !KU( enc(<~n, l__0__49>, ~n.2) ) @ #vk.4 )
                              case c_enc
                              by solve( !KU( ~n.2 ) @ #vk.6 )
                            qed
                          next
                            case Alice__merged_____11__1_0_____15__0_1__94_case_2
                            solve( !KU( enc(<~n, l__0__49>, ~n.2) ) @ #vk.4 )
                              case c_enc
                              by solve( !KU( ~n.2 ) @ #vk.6 )
                            qed
                          next
                            case Alice__merged_____11__1_0_____15__0_1__94_case_3
                            solve( !KU( enc(<~n, l__0__49>, ~n.2) ) @ #vk.4 )
                              case c_enc
                              by solve( !KU( ~n.2 ) @ #vk.6 )
                            qed
                          qed
                        next
                          case Alice__merged_____1_____9__131
                          solve( State__Alice( <'rab_____15__0_1', 'rab__rab', %v__>,
                                               return__var__49, 'rab__',
                                               <l__0__49, l__1__49, l__2__49, l__3__49, l__4__49, l__5__49, 
                                                l__6__49>,
                                               'rab__'
                                 ) ▶₀ #vr.10 )
                            case Alice__merged_____11__1_0_____15__0_1__94_case_1
                            solve( !KU( enc(<~n, l__0__49>, ~n.2) ) @ #vk.4 )
                              case c_enc
                              by solve( !KU( ~n.2 ) @ #vk.6 )
                            qed
                          next
                            case Alice__merged_____11__1_0_____15__0_1__94_case_2
                            solve( !KU( enc(<~n, l__0__49>, ~n.2) ) @ #vk.4 )
                              case c_enc
                              by solve( !KU( ~n.2 ) @ #vk.6 )
                            qed
                          qed
                        next
                          case Bob__merged_____3__1_0_____9__75
                          by contradiction /* cyclic */
                        qed
                      next
                        case Alice__merged_____2__1_0_____9__122
                        by solve( !KU( ~n.3 ) @ #vk.4 )
                      next
                        case c_enc
                        by solve( !KU( ~n.3 ) @ #vk.5 )
                      qed
                    next
                      case c_enc
                      by solve( !KU( ~n.3 ) @ #vk.4 )
                    qed
                  next
                    case split_case_2
                    solve( !KU( enc(~n.1, ~n.3) ) @ #vk.1 )
                      case Alice__merged_____15__0_1_____15__0_3__0_1__86
                      solve( !KU( enc(x, ~n.3) ) @ #vk.2 )
                        case Alice__merged_____15__0_1_____15__0_3__0_1__86
                        solve( Store( 'rab__udp', n__0__9 ) ▶₁ #vr.1 )
                          case Alice__merged_____15__0_1_____15__0_3__0_1__86
                          solve( State__Alice( <'rab_____15__0_1', 'rab__rab', %v__>,
                                               return__var__49, 'rab__',
                                               <l__0__49, l__1__49, l__2__49, l__3__49, l__4__49, l__5__49, 
                                                l__6__49>,
                                               'rab__'
                                 ) ▶₀ #vr.10 )
                            case Alice__merged_____11__0_0_____15__0_1__98_case_1
                            solve( State__Alice( <'rab_____15__0_1', 'rab__rab', %v__>,
                                                 return__var__49, 'rab__',
                                                 <l__0__49, l__1__49, l__2__49, l__3__49, l__4__49, l__5__49, 
                                                  l__6__49>,
                                                 'rab__'
                                   ) ▶₀ #vr.13 )
                              case Alice__merged_____11__0_0_____15__0_1__98
                              by solve( !KU( ~n.2 ) @ #vk.2 )
                            qed
                          next
                            case Alice__merged_____11__0_0_____15__0_1__98_case_2
                            by solve( !KU( ~n.2 ) @ #vk.3 )
                          next
                            case Alice__merged_____11__1_0_____15__0_1__94_case_1
                            solve( !KU( enc(<~n, l__0__49>, ~n.2) ) @ #vk.3 )
                              case Alice__merged_____1_____9__131
                              solve( State__Alice( <'rab_____15__0_1', 'rab__rab', %v__>,
                                                   return__var__49, 'rab__',
                                                   <l__0__49, l__1__49, l__2__49, l__3__49, l__4__49, 
                                                    l__5__49, l__6__49>,
                                                   'rab__'
                                     ) ▶₀ #vr.13 )
                                case Alice__merged_____11__1_0_____15__0_1__94
                                by solve( !KU( ~n.2 ) @ #vk.3 )
                              qed
                            next
                              case c_enc
                              by solve( !KU( ~n.2 ) @ #vk.5 )
                            qed
                          next
                            case Alice__merged_____11__1_0_____15__0_1__94_case_2
                            solve( !KU( enc(<~n, l__0__49>, ~n.2) ) @ #vk.3 )
                              case Alice__merged_____2__1_0_____9__122
                              by solve( !KU( ~n.2 ) @ #vk.4 )
                            next
                              case c_enc
                              by solve( !KU( ~n.2 ) @ #vk.6 )
                            qed
                          next
                            case Alice__merged_____11__1_0_____15__0_1__94_case_3
                            solve( !KU( enc(<~n, l__0__49>, ~n.2) ) @ #vk.3 )
                              case Alice__merged_____1_____9__131
                              solve( State__Alice( <'rab_____15__0_1', 'rab__rab', %v__>,
                                                   return__var__49, 'rab__',
                                                   <l__0__49, l__1__49, l__2__49, l__3__49, l__4__49, 
                                                    l__5__49, l__6__49>,
                                                   'rab__'
                                     ) ▶₀ #vr.13 )
                                case Alice__merged_____11__1_0_____15__0_1__94
                                by solve( !KU( ~n.2 ) @ #vk.3 )
                              qed
                            next
                              case c_enc
                              by solve( !KU( ~n.2 ) @ #vk.5 )
                            qed
                          next
                            case Alice__merged_____11__1_0_____15__0_1__94_case_4
                            solve( !KU( enc(<~n, l__0__49>, ~n.2) ) @ #vk.3 )
                              case Alice__merged_____2__1_0_____9__122
                              by solve( !KU( ~n.2 ) @ #vk.4 )
                            next
                              case c_enc
                              by solve( !KU( ~n.2 ) @ #vk.6 )
                            qed
                          next
                            case Alice__merged_____11__1_0_____15__0_1__94_case_5
                            solve( !KU( enc(<~n, l__0__49>, ~n.2) ) @ #vk.3 )
                              case Alice__merged_____1_____9__131
                              solve( State__Alice( <'rab_____15__0_1', 'rab__rab', %v__>,
                                                   return__var__49, 'rab__',
                                                   <l__0__49, l__1__49, l__2__49, l__3__49, l__4__49, 
                                                    l__5__49, l__6__49>,
                                                   'rab__'
                                     ) ▶₀ #vr.13 )
                                case Alice__merged_____11__1_0_____15__0_1__94
                                by solve( !KU( ~n.2 ) @ #vk.3 )
                              qed
                            next
                              case c_enc
                              by solve( !KU( ~n.2 ) @ #vk.5 )
                            qed
                          next
                            case Alice__merged_____11__1_0_____15__0_1__94_case_6
                            solve( !KU( enc(<~n, l__0__49>, ~n.2) ) @ #vk.3 )
                              case Alice__merged_____2__1_0_____9__122
                              by solve( !KU( ~n.2 ) @ #vk.4 )
                            next
                              case c_enc
                              by solve( !KU( ~n.2 ) @ #vk.6 )
                            qed
                          qed
                        next
                          case Alice__merged_____1_____9__131
                          solve( State__Alice( <'rab_____15__0_1', 'rab__rab', %v__>,
                                               return__var__49, 'rab__',
                                               <l__0__49, l__1__49, l__2__49, l__3__49, l__4__49, l__5__49, 
                                                l__6__49>,
                                               'rab__'
                                 ) ▶₀ #vr.10 )
                            case Alice__merged_____11__1_0_____15__0_1__94_case_1
                            solve( !KU( enc(<~n, l__0__49>, ~n.2) ) @ #vk.3 )
                              case Alice__merged_____1_____9__131
                              solve( State__Alice( <'rab_____15__0_1', 'rab__rab', %v__>,
                                                   return__var__49, 'rab__',
                                                   <l__0__49, l__1__49, l__2__49, l__3__49, l__4__49, 
                                                    l__5__49, l__6__49>,
                                                   'rab__'
                                     ) ▶₀ #vr.13 )
                                case Alice__merged_____11__1_0_____15__0_1__94
                                by solve( !KU( ~n.2 ) @ #vk.3 )
                              qed
                            next
                              case c_enc
                              by solve( !KU( ~n.2 ) @ #vk.5 )
                            qed
                          next
                            case Alice__merged_____11__1_0_____15__0_1__94_case_2
                            solve( !KU( enc(<~n, l__0__49>, ~n.2) ) @ #vk.3 )
                              case Alice__merged_____1_____9__131
                              solve( State__Alice( <'rab_____15__0_1', 'rab__rab', %v__>,
                                                   return__var__49, 'rab__',
                                                   <l__0__49, l__1__49, l__2__49, l__3__49, l__4__49, 
                                                    l__5__49, l__6__49>,
                                                   'rab__'
                                     ) ▶₀ #vr.13 )
                                case Alice__merged_____11__1_0_____15__0_1__94
                                by solve( !KU( ~n.2 ) @ #vk.3 )
                              qed
                            next
                              case c_enc
                              by solve( !KU( ~n.2 ) @ #vk.5 )
                            qed
                          qed
                        next
                          case Alice__merged_____2__1_0_____9__122
                          solve( State__Alice( <'rab_____15__0_1', 'rab__rab', %v__>,
                                               return__var__49, 'rab__',
                                               <l__0__49, l__1__49, l__2__49, l__3__49, l__4__49, l__5__49, 
                                                l__6__49>,
                                               'rab__'
                                 ) ▶₀ #vr.10 )
                            case Alice__merged_____11__1_0_____15__0_1__94_case_1
                            solve( !KU( enc(<~n, l__0__49>, ~n.2) ) @ #vk.4 )
                              case Alice__merged_____2__1_0_____9__122
                              by solve( !KU( ~n.2 ) @ #vk.4 )
                            next
                              case c_enc
                              by solve( !KU( ~n.2 ) @ #vk.6 )
                            qed
                          next
                            case Alice__merged_____11__1_0_____15__0_1__94_case_2
                            solve( !KU( enc(<~n, l__0__49>, ~n.2) ) @ #vk.4 )
                              case Alice__merged_____2__1_0_____9__122
                              by solve( !KU( ~n.2 ) @ #vk.4 )
                            next
                              case c_enc
                              by solve( !KU( ~n.2 ) @ #vk.6 )
                            qed
                          qed
                        next
                          case Bob__merged_____3__1_0_____9__75
                          by contradiction /* cyclic */
                        qed
                      next
                        case Alice__merged_____1_____9__131
                        by contradiction /* non-normal terms */
                      next
                        case Alice__merged_____2__1_0_____9__122
                        by contradiction /* non-normal terms */
                      next
                        case c_enc
                        by solve( !KU( ~n.3 ) @ #vk.5 )
                      qed
                    next
                      case c_enc
                      by solve( !KU( ~n.3 ) @ #vk.4 )
                    qed
                  next
                    case split_case_3
                    solve( !KU( enc(~n.1, ~n.3) ) @ #vk.1 )
                      case Alice__merged_____15__0_1_____15__0_3__0_1__86
                      solve( Store( 'rab__udp', n__0__9 ) ▶₁ #vr.1 )
                        case Alice__merged_____15__0_1_____15__0_3__0_1__86
                        solve( State__Alice( <'rab_____15__0_1', 'rab__rab', %v__>,
                                             return__var__49, 'rab__',
                                             <l__0__49, l__1__49, l__2__49, l__3__49, l__4__49, l__5__49, 
                                              l__6__49>,
                                             'rab__'
                               ) ▶₀ #vr.10 )
                          case Alice__merged_____11__0_0_____15__0_1__98_case_1
                          solve( State__Alice( <'rab_____15__0_1', 'rab__rab', %v__>,
                                               return__var__49, 'rab__',
                                               <l__0__49, l__1__49, l__2__49, l__3__49, l__4__49, l__5__49, 
                                                l__6__49>,
                                               'rab__'
                                 ) ▶₀ #vr.13 )
                            case Alice__merged_____11__0_0_____15__0_1__98
                            by solve( !KU( ~n.2 ) @ #vk.3 )
                          qed
                        next
                          case Alice__merged_____11__0_0_____15__0_1__98_case_2
                          by solve( !KU( ~n.2 ) @ #vk.4 )
                        next
                          case Alice__merged_____11__1_0_____15__0_1__94_case_1
                          solve( !KU( enc(<~n, l__0__49>, ~n.2) ) @ #vk.4 )
                            case Alice__merged_____1_____9__131
                            solve( State__Alice( <'rab_____15__0_1', 'rab__rab', %v__>,
                                                 return__var__49, 'rab__',
                                                 <l__0__49, l__1__49, l__2__49, l__3__49, l__4__49, l__5__49, 
                                                  l__6__49>,
                                                 'rab__'
                                   ) ▶₀ #vr.13 )
                              case Alice__merged_____11__1_0_____15__0_1__94
                              by solve( !KU( ~n.2 ) @ #vk.4 )
                            qed
                          next
                            case c_enc
                            by solve( !KU( ~n.2 ) @ #vk.6 )
                          qed
                        next
                          case Alice__merged_____11__1_0_____15__0_1__94_case_2
                          solve( !KU( enc(<~n, l__0__49>, ~n.2) ) @ #vk.4 )
                            case Alice__merged_____2__1_0_____9__122
                            by solve( !KU( ~n.2 ) @ #vk.5 )
                          next
                            case c_enc
                            by solve( !KU( ~n.2 ) @ #vk.7 )
                          qed
                        next
                          case Alice__merged_____11__1_0_____15__0_1__94_case_3
                          solve( !KU( enc(<~n, l__0__49>, ~n.2) ) @ #vk.4 )
                            case Alice__merged_____1_____9__131
                            solve( State__Alice( <'rab_____15__0_1', 'rab__rab', %v__>,
                                                 return__var__49, 'rab__',
                                                 <l__0__49, l__1__49, l__2__49, l__3__49, l__4__49, l__5__49, 
                                                  l__6__49>,
                                                 'rab__'
                                   ) ▶₀ #vr.13 )
                              case Alice__merged_____11__1_0_____15__0_1__94
                              by solve( !KU( ~n.2 ) @ #vk.4 )
                            qed
                          next
                            case c_enc
                            by solve( !KU( ~n.2 ) @ #vk.6 )
                          qed
                        next
                          case Alice__merged_____11__1_0_____15__0_1__94_case_4
                          solve( !KU( enc(<~n, l__0__49>, ~n.2) ) @ #vk.4 )
                            case Alice__merged_____2__1_0_____9__122
                            by solve( !KU( ~n.2 ) @ #vk.5 )
                          next
                            case c_enc
                            by solve( !KU( ~n.2 ) @ #vk.7 )
                          qed
                        next
                          case Alice__merged_____11__1_0_____15__0_1__94_case_5
                          solve( !KU( enc(<~n, l__0__49>, ~n.2) ) @ #vk.4 )
                            case Alice__merged_____1_____9__131
                            solve( State__Alice( <'rab_____15__0_1', 'rab__rab', %v__>,
                                                 return__var__49, 'rab__',
                                                 <l__0__49, l__1__49, l__2__49, l__3__49, l__4__49, l__5__49, 
                                                  l__6__49>,
                                                 'rab__'
                                   ) ▶₀ #vr.13 )
                              case Alice__merged_____11__1_0_____15__0_1__94
                              by solve( !KU( ~n.2 ) @ #vk.4 )
                            qed
                          next
                            case c_enc
                            by solve( !KU( ~n.2 ) @ #vk.6 )
                          qed
                        next
                          case Alice__merged_____11__1_0_____15__0_1__94_case_6
                          solve( !KU( enc(<~n, l__0__49>, ~n.2) ) @ #vk.4 )
                            case Alice__merged_____2__1_0_____9__122
                            by solve( !KU( ~n.2 ) @ #vk.5 )
                          next
                            case c_enc
                            by solve( !KU( ~n.2 ) @ #vk.7 )
                          qed
                        qed
                      next
                        case Alice__merged_____1_____9__131
                        solve( State__Alice( <'rab_____15__0_1', 'rab__rab', %v__>,
                                             return__var__49, 'rab__',
                                             <l__0__49, l__1__49, l__2__49, l__3__49, l__4__49, l__5__49, 
                                              l__6__49>,
                                             'rab__'
                               ) ▶₀ #vr.10 )
                          case Alice__merged_____11__1_0_____15__0_1__94_case_1
                          solve( !KU( enc(<~n, l__0__49>, ~n.2) ) @ #vk.4 )
                            case Alice__merged_____1_____9__131
                            solve( State__Alice( <'rab_____15__0_1', 'rab__rab', %v__>,
                                                 return__var__49, 'rab__',
                                                 <l__0__49, l__1__49, l__2__49, l__3__49, l__4__49, l__5__49, 
                                                  l__6__49>,
                                                 'rab__'
                                   ) ▶₀ #vr.13 )
                              case Alice__merged_____11__1_0_____15__0_1__94
                              by solve( !KU( ~n.2 ) @ #vk.4 )
                            qed
                          next
                            case c_enc
                            by solve( !KU( ~n.2 ) @ #vk.6 )
                          qed
                        next
                          case Alice__merged_____11__1_0_____15__0_1__94_case_2
                          solve( !KU( enc(<~n, l__0__49>, ~n.2) ) @ #vk.4 )
                            case Alice__merged_____1_____9__131
                            solve( State__Alice( <'rab_____15__0_1', 'rab__rab', %v__>,
                                                 return__var__49, 'rab__',
                                                 <l__0__49, l__1__49, l__2__49, l__3__49, l__4__49, l__5__49, 
                                                  l__6__49>,
                                                 'rab__'
                                   ) ▶₀ #vr.13 )
                              case Alice__merged_____11__1_0_____15__0_1__94
                              by solve( !KU( ~n.2 ) @ #vk.4 )
                            qed
                          next
                            case c_enc
                            by solve( !KU( ~n.2 ) @ #vk.6 )
                          qed
                        qed
                      next
                        case Alice__merged_____2__1_0_____9__122
                        solve( State__Alice( <'rab_____15__0_1', 'rab__rab', %v__>,
                                             return__var__49, 'rab__',
                                             <l__0__49, l__1__49, l__2__49, l__3__49, l__4__49, l__5__49, 
                                              l__6__49>,
                                             'rab__'
                               ) ▶₀ #vr.10 )
                          case Alice__merged_____11__1_0_____15__0_1__94_case_1
                          solve( !KU( enc(<~n, l__0__49>, ~n.2) ) @ #vk.5 )
                            case Alice__merged_____2__1_0_____9__122
                            by solve( !KU( ~n.2 ) @ #vk.5 )
                          next
                            case c_enc
                            by solve( !KU( ~n.2 ) @ #vk.7 )
                          qed
                        next
                          case Alice__merged_____11__1_0_____15__0_1__94_case_2
                          solve( !KU( enc(<~n, l__0__49>, ~n.2) ) @ #vk.5 )
                            case Alice__merged_____2__1_0_____9__122
                            by solve( !KU( ~n.2 ) @ #vk.5 )
                          next
                            case c_enc
                            by solve( !KU( ~n.2 ) @ #vk.7 )
                          qed
                        qed
                      next
                        case Bob__merged_____3__1_0_____9__75
                        by contradiction /* cyclic */
                      qed
                    next
                      case c_enc
                      by solve( !KU( ~n.3 ) @ #vk.4 )
                    qed
                  qed
                next
                  case Bob__merged_____3__1_0_____9__75_case_1
                  by solve( !KU( ~n.2 ) @ #vk.4 )
                next
                  case Bob__merged_____3__1_0_____9__75_case_2
                  by solve( !KU( ~n.2 ) @ #vk.4 )
                qed
              qed
            qed
          qed
        qed
      qed
    next
      case Alice__merged_____1_____9__131
      solve( !ACP__( <'rab__Bob', 'rab__rab'>, 'rab__udp', 'rab__recv'
             ) ▶₃ #i )
        case Init__system__ACP__0
        solve( !Const__( 'rab__priv_key_bob', priv_key_bob__34 ) ▶₄ #i )
          case Const__priv_key_bob
          solve( !Const__( 'rab__nonce_b', nb ) ▶₅ #i )
            case Const__nonce_b
            solve( !Const__( 'rab__nonce_b', nonce_b__35 ) ▶₆ #i )
              case Const__nonce_b
              solve( !Eq__( z, ~n.1 ) ▶₇ #i )
                case Equality_gen
                solve( !KU( ~n.1 ) @ #vk )
                  case Alice__merged_____15__0_1_____15__0_3__0_1__86
                  solve( splitEqs(1) )
                    case split_case_1
                    solve( !KU( enc(~n.1, ~n.3) ) @ #vk.1 )
                      case Alice__merged_____15__0_1_____15__0_3__0_1__86
                      solve( !KU( enc(<l__3__30, x>, ~n.3) ) @ #vk.2 )
                        case Alice__merged_____1_____9__131
                        solve( Store( 'rab__udp', n__0__9 ) ▶₁ #vr.1 )
                          case Alice__merged_____15__0_1_____15__0_3__0_1__86
                          solve( File__Alice( 'rab__rab', loc__0, ~n.3 ) ▶₁ #vr.10 )
                            case Alice__merged_____1_____9__131
                            by contradiction /* cyclic */
                          qed
                        next
                          case Bob__merged_____3__1_0_____9__75
                          by contradiction /* cyclic */
                        qed
                      next
                        case c_enc
                        by solve( !KU( ~n.3 ) @ #vk.5 )
                      qed
                    next
                      case c_enc
                      by solve( !KU( ~n.3 ) @ #vk.4 )
                    qed
                  next
                    case split_case_2
                    solve( !KU( enc(~n.1, ~n.3) ) @ #vk.1 )
                      case Alice__merged_____15__0_1_____15__0_3__0_1__86
                      solve( !KU( enc(x, ~n.3) ) @ #vk.2 )
                        case Alice__merged_____15__0_1_____15__0_3__0_1__86
                        solve( Store( 'rab__udp', n__0__9 ) ▶₁ #vr.1 )
                          case Alice__merged_____15__0_1_____15__0_3__0_1__86
                          solve( File__Alice( 'rab__rab', loc__0, n__0__20 ) ▶₁ #vr.10 )
                            case Alice__init_filesys_____0_____1__0
                            solve( State__Alice( <'rab_____15__0_1', 'rab__rab', %v__>,
                                                 return__var__49, 'rab__',
                                                 <l__0__49, l__1__49, l__2__49, l__3__49, l__4__49, l__5__49, 
                                                  l__6__49>,
                                                 'rab__'
                                   ) ▶₀ #vr.15 )
                              case Alice__merged_____11__1_0_____15__0_1__94_case_1
                              solve( !KU( pk(~n.3) ) @ #vk.2 )
                                case c_pk
                                by solve( !KU( ~n.3 ) @ #vk.4 )
                              qed
                            next
                              case Alice__merged_____11__1_0_____15__0_1__94_case_2
                              solve( !KU( pk(~n.3) ) @ #vk.2 )
                                case c_pk
                                by solve( !KU( ~n.3 ) @ #vk.4 )
                              qed
                            qed
                          next
                            case Alice__merged_____1_____9__131
                            by contradiction /* cyclic */
                          qed
                        next
                          case Bob__merged_____3__1_0_____9__75
                          by contradiction /* cyclic */
                        qed
                      next
                        case Alice__merged_____1_____9__131
                        by contradiction /* non-normal terms */
                      next
                        case c_enc
                        by solve( !KU( ~n.3 ) @ #vk.5 )
                      qed
                    next
                      case c_enc
                      by solve( !KU( ~n.3 ) @ #vk.4 )
                    qed
                  next
                    case split_case_3
                    solve( !KU( enc(~n.1, ~n.3) ) @ #vk.1 )
                      case Alice__merged_____15__0_1_____15__0_3__0_1__86
                      solve( Store( 'rab__udp', n__0__9 ) ▶₁ #vr.1 )
                        case Alice__merged_____15__0_1_____15__0_3__0_1__86
                        solve( File__Alice( 'rab__rab', loc__0, n__0__20 ) ▶₁ #vr.10 )
                          case Alice__init_filesys_____0_____1__0
                          solve( State__Alice( <'rab_____15__0_1', 'rab__rab', %v__>,
                                               return__var__49, 'rab__',
                                               <l__0__49, l__1__49, l__2__49, l__3__49, l__4__49, l__5__49, 
                                                l__6__49>,
                                               'rab__'
                                 ) ▶₀ #vr.15 )
                            case Alice__merged_____11__1_0_____15__0_1__94_case_1
                            solve( !KU( pk(~n.3) ) @ #vk.3 )
                              case c_pk
                              by solve( !KU( ~n.3 ) @ #vk.5 )
                            qed
                          next
                            case Alice__merged_____11__1_0_____15__0_1__94_case_2
                            solve( !KU( pk(~n.3) ) @ #vk.3 )
                              case c_pk
                              by solve( !KU( ~n.3 ) @ #vk.5 )
                            qed
                          qed
                        next
                          case Alice__merged_____1_____9__131
                          by contradiction /* cyclic */
                        qed
                      next
                        case Bob__merged_____3__1_0_____9__75
                        by contradiction /* cyclic */
                      qed
                    next
                      case c_enc
                      by solve( !KU( ~n.3 ) @ #vk.4 )
                    qed
                  qed
                next
                  case Bob__merged_____3__1_0_____9__75_case_1
                  by solve( !KU( ~n.2 ) @ #vk.4 )
                next
                  case Bob__merged_____3__1_0_____9__75_case_2
                  by solve( !KU( ~n.2 ) @ #vk.4 )
                qed
              qed
            qed
          qed
        qed
      qed
    next
      case Alice__merged_____2__1_0_____9__122
      solve( !ACP__( <'rab__Bob', 'rab__rab'>, 'rab__udp', 'rab__recv'
             ) ▶₃ #i )
        case Init__system__ACP__0
        solve( !Const__( 'rab__priv_key_bob', priv_key_bob__34 ) ▶₄ #i )
          case Const__priv_key_bob
          solve( !Const__( 'rab__nonce_b', nb ) ▶₅ #i )
            case Const__nonce_b
            solve( !Const__( 'rab__nonce_b', nonce_b__35 ) ▶₆ #i )
              case Const__nonce_b
              solve( !Eq__( z, ~n.1 ) ▶₇ #i )
                case Equality_gen
                solve( !KU( ~n.1 ) @ #vk )
                  case Alice__merged_____15__0_1_____15__0_3__0_1__86
                  solve( splitEqs(1) )
                    case split_case_1
                    solve( !KU( enc(~n.1, ~n.3) ) @ #vk.1 )
                      case Alice__merged_____15__0_1_____15__0_3__0_1__86
                      solve( !KU( enc(<l__3__30, x>, ~n.3) ) @ #vk.2 )
                        case Alice__merged_____2__1_0_____9__122
                        by solve( !KU( ~n.3 ) @ #vk.3 )
                      next
                        case c_enc
                        by solve( !KU( ~n.3 ) @ #vk.6 )
                      qed
                    next
                      case c_enc
                      by solve( !KU( ~n.3 ) @ #vk.5 )
                    qed
                  next
                    case split_case_2
                    solve( !KU( enc(~n.1, ~n.3) ) @ #vk.1 )
                      case Alice__merged_____15__0_1_____15__0_3__0_1__86
                      solve( !KU( enc(x, ~n.3) ) @ #vk.2 )
                        case Alice__merged_____15__0_1_____15__0_3__0_1__86
                        solve( Store( 'rab__udp', n__0__9 ) ▶₁ #vr.1 )
                          case Alice__merged_____15__0_1_____15__0_3__0_1__86
                          solve( File__Alice( 'rab__rab', loc__0, n__0__11 ) ▶₁ #vr.10 )
                            case Alice__merged_____0_____2__1_0__133
                            solve( State__Alice( <'rab_____15__0_1', 'rab__rab', %v__>,
                                                 return__var__49, 'rab__',
                                                 <l__0__49, l__1__49, l__2__49, l__3__49, l__4__49, l__5__49, 
                                                  l__6__49>,
                                                 'rab__'
                                   ) ▶₀ #vr.15 )
                              case Alice__merged_____11__1_0_____15__0_1__94_case_1
                              solve( !KU( enc(<~n, l__0__49>, ~n.2) ) @ #vk.3 )
                                case Alice__merged_____2__1_0_____9__122
                                by solve( !KU( ~n.2 ) @ #vk.3 )
                              next
                                case c_enc
                                by solve( !KU( ~n.2 ) @ #vk.5 )
                              qed
                            next
                              case Alice__merged_____11__1_0_____15__0_1__94_case_2
                              solve( !KU( enc(<~n, l__0__49>, ~n.2) ) @ #vk.3 )
                                case Alice__merged_____2__1_0_____9__122
                                by solve( !KU( ~n.2 ) @ #vk.3 )
                              next
                                case c_enc
                                by solve( !KU( ~n.2 ) @ #vk.5 )
                              qed
                            qed
                          next
                            case Alice__merged_____2__1_0_____9__122
                            by contradiction /* cyclic */
                          qed
                        next
                          case Bob__merged_____3__1_0_____9__75
                          by contradiction /* cyclic */
                        qed
                      next
                        case Alice__merged_____2__1_0_____9__122
                        by contradiction /* non-normal terms */
                      next
                        case c_enc
                        by solve( !KU( ~n.3 ) @ #vk.6 )
                      qed
                    next
                      case c_enc
                      by solve( !KU( ~n.3 ) @ #vk.5 )
                    qed
                  next
                    case split_case_3
                    solve( !KU( enc(~n.1, ~n.3) ) @ #vk.1 )
                      case Alice__merged_____15__0_1_____15__0_3__0_1__86
                      solve( Store( 'rab__udp', n__0__9 ) ▶₁ #vr.1 )
                        case Alice__merged_____15__0_1_____15__0_3__0_1__86
                        solve( File__Alice( 'rab__rab', loc__0, n__0__11 ) ▶₁ #vr.10 )
                          case Alice__merged_____0_____2__1_0__133
                          solve( State__Alice( <'rab_____15__0_1', 'rab__rab', %v__>,
                                               return__var__49, 'rab__',
                                               <l__0__49, l__1__49, l__2__49, l__3__49, l__4__49, l__5__49, 
                                                l__6__49>,
                                               'rab__'
                                 ) ▶₀ #vr.15 )
                            case Alice__merged_____11__1_0_____15__0_1__94_case_1
                            solve( !KU( enc(<~n, l__0__49>, ~n.2) ) @ #vk.4 )
                              case Alice__merged_____2__1_0_____9__122
                              by solve( !KU( ~n.2 ) @ #vk.4 )
                            next
                              case c_enc
                              by solve( !KU( ~n.2 ) @ #vk.6 )
                            qed
                          next
                            case Alice__merged_____11__1_0_____15__0_1__94_case_2
                            solve( !KU( enc(<~n, l__0__49>, ~n.2) ) @ #vk.4 )
                              case Alice__merged_____2__1_0_____9__122
                              by solve( !KU( ~n.2 ) @ #vk.4 )
                            next
                              case c_enc
                              by solve( !KU( ~n.2 ) @ #vk.6 )
                            qed
                          qed
                        next
                          case Alice__merged_____2__1_0_____9__122
                          by contradiction /* cyclic */
                        qed
                      next
                        case Bob__merged_____3__1_0_____9__75
                        by contradiction /* cyclic */
                      qed
                    next
                      case c_enc
                      by solve( !KU( ~n.3 ) @ #vk.5 )
                    qed
                  qed
                next
                  case Bob__merged_____3__1_0_____9__75_case_1
                  by solve( !KU( ~n.2 ) @ #vk.5 )
                next
                  case Bob__merged_____3__1_0_____9__75_case_2
                  by solve( !KU( ~n.2 ) @ #vk.5 )
                qed
              qed
            qed
          qed
        qed
      qed
    next
      case Bob__merged_____3__1_0_____9__75
      solve( !ACP__( <'rab__Bob', 'rab__rab'>, 'rab__udp', 'rab__recv'
             ) ▶₃ #i )
        case Init__system__ACP__0
        solve( !Const__( 'rab__priv_key_bob', priv_key_bob__34 ) ▶₄ #i )
          case Const__priv_key_bob
          solve( !Const__( 'rab__nonce_b', nb ) ▶₅ #i )
            case Const__nonce_b
            solve( !Const__( 'rab__nonce_b', nonce_b__35 ) ▶₆ #i )
              case Const__nonce_b
              solve( !Eq__( z, ~n.1 ) ▶₇ #i )
                case Equality_gen
                solve( !KU( ~n.1 ) @ #vk )
                  case Alice__merged_____15__0_1_____15__0_3__0_1__86
                  solve( splitEqs(1) )
                    case split_case_1
                    solve( !KU( enc(~n.1, ~n.3) ) @ #vk.1 )
                      case Alice__merged_____15__0_1_____15__0_3__0_1__86
                      solve( !KU( enc(<l__3__30, x>, ~n.3) ) @ #vk.2 )
                        case Alice__merged_____1_____9__131
                        solve( Store( 'rab__udp', n__0__9 ) ▶₁ #vr.1 )
                          case Alice__merged_____15__0_1_____15__0_3__0_1__86
                          solve( State__Alice( <'rab_____15__0_1', 'rab__rab', %v__>,
                                               return__var__49, 'rab__',
                                               <l__0__49, l__1__49, l__2__49, l__3__49, l__4__49, l__5__49, 
                                                l__6__49>,
                                               'rab__'
                                 ) ▶₀ #vr.11 )
                            case Alice__merged_____11__1_0_____15__0_1__94_case_1
                            by solve( !KU( ~n.3 ) @ #vk.3 )
                          next
                            case Alice__merged_____11__1_0_____15__0_1__94_case_2
                            by solve( !KU( ~n.3 ) @ #vk.3 )
                          qed
                        next
                          case Alice__merged_____1_____9__131
                          solve( State__Alice( <'rab_____15__0_1', 'rab__rab', %v__>,
                                               return__var__49, 'rab__',
                                               <l__0__49, l__1__49, l__2__49, l__3__49, l__4__49, l__5__49, 
                                                l__6__49>,
                                               'rab__'
                                 ) ▶₀ #vr.11 )
                            case Alice__merged_____11__1_0_____15__0_1__94
                            by solve( !KU( ~n.3 ) @ #vk.3 )
                          qed
                        qed
                      next
                        case Alice__merged_____2__1_0_____9__122
                        by solve( !KU( ~n.3 ) @ #vk.4 )
                      next
                        case c_enc
                        by solve( !KU( ~n.3 ) @ #vk.5 )
                      qed
                    next
                      case c_enc
                      by solve( !KU( ~n.3 ) @ #vk.4 )
                    qed
                  next
                    case split_case_2
                    solve( !KU( enc(~n.1, ~n.3) ) @ #vk.1 )
                      case Alice__merged_____15__0_1_____15__0_3__0_1__86
                      solve( !KU( enc(x, ~n.3) ) @ #vk.2 )
                        case Alice__merged_____15__0_1_____15__0_3__0_1__86
                        solve( Store( 'rab__udp', n__0__9 ) ▶₁ #vr.1 )
                          case Alice__merged_____15__0_1_____15__0_3__0_1__86
                          solve( State__Alice( <'rab_____15__0_1', 'rab__rab', %v__>,
                                               return__var__49, 'rab__',
                                               <l__0__49, l__1__49, l__2__49, l__3__49, l__4__49, l__5__49, 
                                                l__6__49>,
                                               'rab__'
                                 ) ▶₀ #vr.11 )
                            case Alice__merged_____11__0_0_____15__0_1__98_case_1
                            by solve( !KU( ~n.2 ) @ #vk.2 )
                          next
                            case Alice__merged_____11__0_0_____15__0_1__98_case_2
                            by solve( !KU( ~n.2 ) @ #vk.2 )
                          next
                            case Alice__merged_____11__1_0_____15__0_1__94_case_1
                            solve( !KU( enc(<~n, l__0__49>, ~n.2) ) @ #vk.3 )
                              case Alice__merged_____1_____9__131
                              by solve( !KU( ~n.2 ) @ #vk.3 )
                            next
                              case c_enc
                              by solve( !KU( ~n.2 ) @ #vk.5 )
                            qed
                          next
                            case Alice__merged_____11__1_0_____15__0_1__94_case_2
                            solve( !KU( enc(<~n, l__0__49>, ~n.2) ) @ #vk.3 )
                              case Alice__merged_____2__1_0_____9__122
                              by solve( !KU( ~n.2 ) @ #vk.3 )
                            next
                              case c_enc
                              by solve( !KU( ~n.2 ) @ #vk.5 )
                            qed
                          next
                            case Alice__merged_____11__1_0_____15__0_1__94_case_3
                            solve( !KU( enc(<~n, l__0__49>, ~n.2) ) @ #vk.3 )
                              case Alice__merged_____1_____9__131
                              by solve( !KU( ~n.2 ) @ #vk.3 )
                            next
                              case c_enc
                              by solve( !KU( ~n.2 ) @ #vk.5 )
                            qed
                          next
                            case Alice__merged_____11__1_0_____15__0_1__94_case_4
                            solve( !KU( enc(<~n, l__0__49>, ~n.2) ) @ #vk.3 )
                              case Alice__merged_____2__1_0_____9__122
                              by solve( !KU( ~n.2 ) @ #vk.3 )
                            next
                              case c_enc
                              by solve( !KU( ~n.2 ) @ #vk.5 )
                            qed
                          qed
                        next
                          case Alice__merged_____1_____9__131
                          solve( State__Alice( <'rab_____15__0_1', 'rab__rab', %v__>,
                                               return__var__49, 'rab__',
                                               <l__0__49, l__1__49, l__2__49, l__3__49, l__4__49, l__5__49, 
                                                l__6__49>,
                                               'rab__'
                                 ) ▶₀ #vr.11 )
                            case Alice__merged_____11__1_0_____15__0_1__94
                            solve( !KU( enc(<~n, l__0__49>, ~n.2) ) @ #vk.3 )
                              case Alice__merged_____1_____9__131
                              by solve( !KU( ~n.2 ) @ #vk.3 )
                            next
                              case c_enc
                              by solve( !KU( ~n.2 ) @ #vk.5 )
                            qed
                          qed
                        next
                          case Alice__merged_____2__1_0_____9__122
                          solve( State__Alice( <'rab_____15__0_1', 'rab__rab', %v__>,
                                               return__var__49, 'rab__',
                                               <l__0__49, l__1__49, l__2__49, l__3__49, l__4__49, l__5__49, 
                                                l__6__49>,
                                               'rab__'
                                 ) ▶₀ #vr.11 )
                            case Alice__merged_____11__1_0_____15__0_1__94
                            solve( !KU( enc(<~n, l__0__49>, ~n.2) ) @ #vk.3 )
                              case Alice__merged_____2__1_0_____9__122
                              by solve( !KU( ~n.2 ) @ #vk.3 )
                            next
                              case c_enc
                              by solve( !KU( ~n.2 ) @ #vk.5 )
                            qed
                          qed
                        qed
                      next
                        case Alice__merged_____1_____9__131
                        by contradiction /* non-normal terms */
                      next
                        case Alice__merged_____2__1_0_____9__122
                        by contradiction /* non-normal terms */
                      next
                        case c_enc
                        by solve( !KU( ~n.3 ) @ #vk.5 )
                      qed
                    next
                      case c_enc
                      by solve( !KU( ~n.3 ) @ #vk.4 )
                    qed
                  next
                    case split_case_3
                    solve( !KU( enc(~n.1, ~n.3) ) @ #vk.1 )
                      case Alice__merged_____15__0_1_____15__0_3__0_1__86
                      solve( Store( 'rab__udp', n__0__9 ) ▶₁ #vr.1 )
                        case Alice__merged_____15__0_1_____15__0_3__0_1__86
                        solve( State__Alice( <'rab_____15__0_1', 'rab__rab', %v__>,
                                             return__var__49, 'rab__',
                                             <l__0__49, l__1__49, l__2__49, l__3__49, l__4__49, l__5__49, 
                                              l__6__49>,
                                             'rab__'
                               ) ▶₀ #vr.11 )
                          case Alice__merged_____11__0_0_____15__0_1__98_case_1
                          by solve( !KU( ~n.2 ) @ #vk.3 )
                        next
                          case Alice__merged_____11__0_0_____15__0_1__98_case_2
                          by solve( !KU( ~n.2 ) @ #vk.3 )
                        next
                          case Alice__merged_____11__1_0_____15__0_1__94_case_1
                          solve( !KU( enc(<~n, l__0__49>, ~n.2) ) @ #vk.4 )
                            case Alice__merged_____1_____9__131
                            by solve( !KU( ~n.2 ) @ #vk.4 )
                          next
                            case c_enc
                            by solve( !KU( ~n.2 ) @ #vk.6 )
                          qed
                        next
                          case Alice__merged_____11__1_0_____15__0_1__94_case_2
                          solve( !KU( enc(<~n, l__0__49>, ~n.2) ) @ #vk.4 )
                            case Alice__merged_____2__1_0_____9__122
                            by solve( !KU( ~n.2 ) @ #vk.4 )
                          next
                            case c_enc
                            by solve( !KU( ~n.2 ) @ #vk.6 )
                          qed
                        next
                          case Alice__merged_____11__1_0_____15__0_1__94_case_3
                          solve( !KU( enc(<~n, l__0__49>, ~n.2) ) @ #vk.4 )
                            case Alice__merged_____1_____9__131
                            by solve( !KU( ~n.2 ) @ #vk.4 )
                          next
                            case c_enc
                            by solve( !KU( ~n.2 ) @ #vk.6 )
                          qed
                        next
                          case Alice__merged_____11__1_0_____15__0_1__94_case_4
                          solve( !KU( enc(<~n, l__0__49>, ~n.2) ) @ #vk.4 )
                            case Alice__merged_____2__1_0_____9__122
                            by solve( !KU( ~n.2 ) @ #vk.4 )
                          next
                            case c_enc
                            by solve( !KU( ~n.2 ) @ #vk.6 )
                          qed
                        qed
                      next
                        case Alice__merged_____1_____9__131
                        solve( State__Alice( <'rab_____15__0_1', 'rab__rab', %v__>,
                                             return__var__49, 'rab__',
                                             <l__0__49, l__1__49, l__2__49, l__3__49, l__4__49, l__5__49, 
                                              l__6__49>,
                                             'rab__'
                               ) ▶₀ #vr.11 )
                          case Alice__merged_____11__1_0_____15__0_1__94
                          solve( !KU( enc(<~n, l__0__49>, ~n.2) ) @ #vk.4 )
                            case Alice__merged_____1_____9__131
                            by solve( !KU( ~n.2 ) @ #vk.4 )
                          next
                            case c_enc
                            by solve( !KU( ~n.2 ) @ #vk.6 )
                          qed
                        qed
                      next
                        case Alice__merged_____2__1_0_____9__122
                        solve( State__Alice( <'rab_____15__0_1', 'rab__rab', %v__>,
                                             return__var__49, 'rab__',
                                             <l__0__49, l__1__49, l__2__49, l__3__49, l__4__49, l__5__49, 
                                              l__6__49>,
                                             'rab__'
                               ) ▶₀ #vr.11 )
                          case Alice__merged_____11__1_0_____15__0_1__94
                          solve( !KU( enc(<~n, l__0__49>, ~n.2) ) @ #vk.4 )
                            case Alice__merged_____2__1_0_____9__122
                            by solve( !KU( ~n.2 ) @ #vk.4 )
                          next
                            case c_enc
                            by solve( !KU( ~n.2 ) @ #vk.6 )
                          qed
                        qed
                      qed
                    next
                      case c_enc
                      by solve( !KU( ~n.3 ) @ #vk.4 )
                    qed
                  qed
                next
                  case Bob__merged_____3__1_0_____9__75_case_1
                  by solve( !KU( ~n.2 ) @ #vk.4 )
                next
                  case Bob__merged_____3__1_0_____9__75_case_2
                  by solve( !KU( ~n.2 ) @ #vk.4 )
                qed
              qed
            qed
          qed
        qed
      qed
    qed
  qed
qed

lemma NonceSecrecyA_tmrn:
  all-traces
  "¬(∃ na #i #j. (SecretNonceAlice( na ) @ #i) ∧ (K( na ) @ #j))"
/*
guarded formula characterizing all counter-examples:
"∃ na #i #j. (SecretNonceAlice( na ) @ #i) ∧ (K( na ) @ #j)"
*/
simplify
solve( SecretNonceAlice( na ) @ #i )
  case Alice__merged_____11__0_0_____15__0_1__98
  solve( State__Alice( <'rab_____11__0_0', param, %v__>, return__var__35,
                       'rab__', <l__0__35, l__1__35, l__2__35, l__3__35, l__4__35>, 'rab__'
         ) ▶₀ #i )
    case Alice__merged_____9_____11__0_0__101_case_1
    solve( Store( 'rab__udp', n__0__35 ) ▶₁ #i )
      case Alice__merged_____15__0_1_____15__0_3__0_1__86
      solve( !ACP__( <'rab__Alice', 'rab__rab'>, 'rab__udp', 'rab__recv'
             ) ▶₂ #i )
        case Init__system__ACP__2
        solve( !Const__( 'rab__priv_key_alice', priv_key_alice__44 ) ▶₃ #i )
          case Const__priv_key_alice
          solve( !Const__( 'rab__nonce_a', na ) ▶₄ #i )
            case Const__nonce_a
            solve( !Const__( 'rab__nonce_a', nonce_a__47 ) ▶₅ #i )
              case Const__nonce_a
              by solve( !Eq__( fst(z), ~n ) ▶₆ #i )
            qed
          qed
        qed
      qed
    next
      case Alice__merged_____1_____9__131
      solve( !ACP__( <'rab__Alice', 'rab__rab'>, 'rab__udp', 'rab__recv'
             ) ▶₂ #i )
        case Init__system__ACP__2
        solve( !Const__( 'rab__priv_key_alice', priv_key_alice__44 ) ▶₃ #i )
          case Const__priv_key_alice
          solve( !Const__( 'rab__nonce_a', na ) ▶₄ #i )
            case Const__nonce_a
            solve( !Const__( 'rab__nonce_a', nonce_a__47 ) ▶₅ #i )
              case Const__nonce_a
              solve( !Eq__( z, ~n ) ▶₆ #i )
                case Equality_gen
                solve( !KU( ~n ) @ #vk )
                  case Alice__merged_____1_____9__131_case_1
                  by solve( !KU( ~l__3__35 ) @ #vk.1 )
                next
                  case Alice__merged_____1_____9__131_case_2
                  by solve( !KU( ~l__3__35 ) @ #vk.1 )
                next
                  case Bob__merged_____3__0_0_____9__79_case_1
                  by solve( !KU( ~l__3__35 ) @ #vk.2 )
                next
                  case Bob__merged_____3__0_0_____9__79_case_2
                  by solve( !KU( ~l__3__35 ) @ #vk.2 )
                next
                  case Bob__merged_____3__1_0_____9__75_case_1
                  by solve( !KU( ~l__3__35 ) @ #vk.3 )
                next
                  case Bob__merged_____3__1_0_____9__75_case_2
                  by solve( !KU( ~l__3__35 ) @ #vk.3 )
                qed
              qed
            qed
          qed
        qed
      qed
    next
      case Bob__merged_____3__0_0_____9__79
      solve( !ACP__( <'rab__Alice', 'rab__rab'>, 'rab__udp', 'rab__recv'
             ) ▶₂ #i )
        case Init__system__ACP__2
        solve( !Const__( 'rab__priv_key_alice', priv_key_alice__44 ) ▶₃ #i )
          case Const__priv_key_alice
          solve( !Const__( 'rab__nonce_a', na ) ▶₄ #i )
            case Const__nonce_a
            solve( !Const__( 'rab__nonce_a', nonce_a__47 ) ▶₅ #i )
              case Const__nonce_a
              by solve( !Eq__( fst(dec(enc(<~n, ~n.2>, pk(~n.3)), ~n.3)), ~n ) ▶₆ #i )
            qed
          qed
        qed
      qed
    next
      case Bob__merged_____3__1_0_____9__75
      solve( !ACP__( <'rab__Alice', 'rab__rab'>, 'rab__udp', 'rab__recv'
             ) ▶₂ #i )
        case Init__system__ACP__2
        solve( !Const__( 'rab__priv_key_alice', priv_key_alice__44 ) ▶₃ #i )
          case Const__priv_key_alice
          solve( !Const__( 'rab__nonce_a', na ) ▶₄ #i )
            case Const__nonce_a
            solve( !Const__( 'rab__nonce_a', nonce_a__47 ) ▶₅ #i )
              case Const__nonce_a
              by solve( !Eq__( fst(dec(enc(<~n, ~n.2>, pk(~n.3)), ~n.3)), ~n ) ▶₆ #i )
            qed
          qed
        qed
      qed
    qed
  next
    case Alice__merged_____9_____11__0_0__101_case_2
    solve( Store( 'rab__udp', n__0__35 ) ▶₁ #i )
      case Alice__merged_____15__0_1_____15__0_3__0_1__86
      solve( !ACP__( <'rab__Alice', 'rab__rab'>, 'rab__udp', 'rab__recv'
             ) ▶₂ #i )
        case Init__system__ACP__2
        solve( !Const__( 'rab__priv_key_alice', priv_key_alice__44 ) ▶₃ #i )
          case Const__priv_key_alice
          solve( !Const__( 'rab__nonce_a', na ) ▶₄ #i )
            case Const__nonce_a
            solve( !Const__( 'rab__nonce_a', nonce_a__47 ) ▶₅ #i )
              case Const__nonce_a
              by solve( !Eq__( fst(z), ~n ) ▶₆ #i )
            qed
          qed
        qed
      qed
    next
      case Alice__merged_____2__1_0_____9__122
      solve( !ACP__( <'rab__Alice', 'rab__rab'>, 'rab__udp', 'rab__recv'
             ) ▶₂ #i )
        case Init__system__ACP__2
        solve( !Const__( 'rab__priv_key_alice', priv_key_alice__44 ) ▶₃ #i )
          case Const__priv_key_alice
          solve( !Const__( 'rab__nonce_a', na ) ▶₄ #i )
            case Const__nonce_a
            solve( !Const__( 'rab__nonce_a', nonce_a__47 ) ▶₅ #i )
              case Const__nonce_a
              solve( !Eq__( z, ~n ) ▶₆ #i )
                case Equality_gen
                solve( !KU( ~n ) @ #vk )
                  case Alice__merged_____2__1_0_____9__122_case_1
                  by solve( !KU( ~l__3__35 ) @ #vk.1 )
                next
                  case Alice__merged_____2__1_0_____9__122_case_2
                  by solve( !KU( ~l__3__35 ) @ #vk.1 )
                next
                  case Bob__merged_____3__0_0_____9__79_case_1
                  by solve( !KU( ~l__3__35 ) @ #vk.2 )
                next
                  case Bob__merged_____3__0_0_____9__79_case_2
                  by solve( !KU( ~l__3__35 ) @ #vk.2 )
                next
                  case Bob__merged_____3__1_0_____9__75_case_1
                  by solve( !KU( ~l__3__35 ) @ #vk.2 )
                next
                  case Bob__merged_____3__1_0_____9__75_case_2
                  by solve( !KU( ~l__3__35 ) @ #vk.2 )
                qed
              qed
            qed
          qed
        qed
      qed
    next
      case Bob__merged_____3__0_0_____9__79
      solve( !ACP__( <'rab__Alice', 'rab__rab'>, 'rab__udp', 'rab__recv'
             ) ▶₂ #i )
        case Init__system__ACP__2
        solve( !Const__( 'rab__priv_key_alice', priv_key_alice__44 ) ▶₃ #i )
          case Const__priv_key_alice
          solve( !Const__( 'rab__nonce_a', na ) ▶₄ #i )
            case Const__nonce_a
            solve( !Const__( 'rab__nonce_a', nonce_a__47 ) ▶₅ #i )
              case Const__nonce_a
              by solve( !Eq__( fst(dec(enc(<~n, ~n.2>, pk(~n.3)), ~n.3)), ~n ) ▶₆ #i )
            qed
          qed
        qed
      qed
    next
      case Bob__merged_____3__1_0_____9__75
      solve( !ACP__( <'rab__Alice', 'rab__rab'>, 'rab__udp', 'rab__recv'
             ) ▶₂ #i )
        case Init__system__ACP__2
        solve( !Const__( 'rab__priv_key_alice', priv_key_alice__44 ) ▶₃ #i )
          case Const__priv_key_alice
          solve( !Const__( 'rab__nonce_a', na ) ▶₄ #i )
            case Const__nonce_a
            solve( !Const__( 'rab__nonce_a', nonce_a__47 ) ▶₅ #i )
              case Const__nonce_a
              by solve( !Eq__( fst(dec(enc(<~n, ~n.2>, pk(~n.3)), ~n.3)), ~n ) ▶₆ #i )
            qed
          qed
        qed
      qed
    qed
  qed
next
  case Alice__merged_____11__1_0_____15__0_1__94
  solve( State__Alice( <'rab_____11__1_0', param, %v__>, return__var__40,
                       'rab__', <l__0__40, l__1__40, l__2__40, l__3__40, l__4__40>, 'rab__'
         ) ▶₀ #i )
    case Alice__merged_____9_____11__1_0__102_case_1
    solve( Store( 'rab__udp', n__0__40 ) ▶₁ #i )
      case Alice__merged_____15__0_1_____15__0_3__0_1__86
      solve( !ACP__( <'rab__Alice', 'rab__rab'>, 'rab__udp', 'rab__recv'
             ) ▶₃ #i )
        case Init__system__ACP__2
        solve( !Const__( 'rab__priv_key_alice', priv_key_alice__44 ) ▶₄ #i )
          case Const__priv_key_alice
          solve( !Const__( 'rab__nonce_a', na ) ▶₅ #i )
            case Const__nonce_a
            solve( !Const__( 'rab__nonce_a', nonce_a__47 ) ▶₆ #i )
              case Const__nonce_a
              solve( !Eq__( z, ~n ) ▶₇ #i )
                case Equality_gen
                solve( !KU( ~n ) @ #vk )
                  case Alice__merged_____1_____9__131_case_1
                  solve( !KU( enc(<~n, z>, ~n.3) ) @ #vk.1 )
                    case Alice__merged_____1_____9__131
                    by solve( !KU( ~n.1 ) @ #vk.2 )
                  next
                    case c_enc
                    by solve( !KU( ~n.3 ) @ #vk.4 )
                  qed
                next
                  case Alice__merged_____1_____9__131_case_2
                  solve( !KU( enc(<~n, z>, ~n.3) ) @ #vk.1 )
                    case Alice__merged_____1_____9__131
                    by solve( !KU( ~n.1 ) @ #vk.2 )
                  next
                    case c_enc
                    by solve( !KU( ~n.3 ) @ #vk.4 )
                  qed
                next
                  case Bob__merged_____3__0_0_____9__79_case_1
                  by solve( !KU( ~n.3 ) @ #vk.3 )
                next
                  case Bob__merged_____3__0_0_____9__79_case_2
                  by solve( !KU( ~n.3 ) @ #vk.3 )
                next
                  case Bob__merged_____3__1_0_____9__75_case_1
                  by solve( !KU( ~n.3 ) @ #vk.4 )
                next
                  case Bob__merged_____3__1_0_____9__75_case_2
                  by solve( !KU( ~n.3 ) @ #vk.4 )
                qed
              qed
            qed
          qed
        qed
      qed
    next
      case Alice__merged_____1_____9__131
      solve( !ACP__( <'rab__Alice', 'rab__rab'>, 'rab__udp', 'rab__recv'
             ) ▶₃ #i )
        case Init__system__ACP__2
        solve( !Const__( 'rab__priv_key_alice', priv_key_alice__44 ) ▶₄ #i )
          case Const__priv_key_alice
          solve( !Const__( 'rab__nonce_a', na ) ▶₅ #i )
            case Const__nonce_a
            solve( !Const__( 'rab__nonce_a', nonce_a__47 ) ▶₆ #i )
              case Const__nonce_a
              solve( !Eq__( z, ~n ) ▶₇ #i )
                case Equality_gen
                solve( !KU( ~n ) @ #vk )
                  case Alice__merged_____1_____9__131_case_1
                  solve( !KU( enc(<~n, z>, ~n.2) ) @ #vk.1 )
                    case Alice__merged_____1_____9__131
                    by solve( !KU( ~n.1 ) @ #vk.2 )
                  next
                    case c_enc
                    by solve( !KU( ~n.2 ) @ #vk.4 )
                  qed
                next
                  case Alice__merged_____1_____9__131_case_2
                  solve( !KU( enc(<~n, z>, ~n.2) ) @ #vk.1 )
                    case Alice__merged_____1_____9__131
                    by solve( !KU( ~n.1 ) @ #vk.2 )
                  next
                    case c_enc
                    by solve( !KU( ~n.2 ) @ #vk.4 )
                  qed
                next
                  case Bob__merged_____3__0_0_____9__79_case_1
                  by solve( !KU( ~n.2 ) @ #vk.3 )
                next
                  case Bob__merged_____3__0_0_____9__79_case_2
                  by solve( !KU( ~n.2 ) @ #vk.3 )
                next
                  case Bob__merged_____3__1_0_____9__75_case_1
                  by solve( !KU( ~n.2 ) @ #vk.4 )
                next
                  case Bob__merged_____3__1_0_____9__75_case_2
                  by solve( !KU( ~n.2 ) @ #vk.4 )
                qed
              qed
            qed
          qed
        qed
      qed
    next
      case Bob__merged_____3__0_0_____9__79
      solve( !ACP__( <'rab__Alice', 'rab__rab'>, 'rab__udp', 'rab__recv'
             ) ▶₃ #i )
        case Init__system__ACP__2
        solve( !Const__( 'rab__priv_key_alice', priv_key_alice__44 ) ▶₄ #i )
          case Const__priv_key_alice
          solve( !Const__( 'rab__nonce_a', na ) ▶₅ #i )
            case Const__nonce_a
            solve( !Const__( 'rab__nonce_a', nonce_a__47 ) ▶₆ #i )
              case Const__nonce_a
              solve( !Eq__( z, ~n ) ▶₇ #i )
                case Equality_gen
                solve( !KU( ~n ) @ #vk )
                  case Alice__merged_____1_____9__131_case_1
                  solve( splitEqs(1) )
                    case split_case_1
                    solve( !KU( enc(<~n, z>, ~n.3) ) @ #vk.1 )
                      case Alice__merged_____1_____9__131
                      by solve( !KU( ~n.1 ) @ #vk.2 )
                    next
                      case c_enc
                      by solve( !KU( ~n.3 ) @ #vk.4 )
                    qed
                  next
                    case split_case_2
                    solve( !KU( enc(<~n, z>, ~n.3) ) @ #vk.1 )
                      case Alice__merged_____1_____9__131
                      by solve( !KU( ~n.1 ) @ #vk.2 )
                    next
                      case c_enc
                      by solve( !KU( ~n.3 ) @ #vk.4 )
                    qed
                  next
                    case split_case_3
                    solve( !KU( enc(<~n, z>, ~n.3) ) @ #vk.1 )
                      case Alice__merged_____1_____9__131
                      by solve( !KU( ~n.1 ) @ #vk.2 )
                    next
                      case c_enc
                      by solve( !KU( ~n.3 ) @ #vk.4 )
                    qed
                  qed
                next
                  case Alice__merged_____1_____9__131_case_2
                  solve( splitEqs(1) )
                    case split_case_1
                    solve( !KU( enc(<~n, z>, ~n.3) ) @ #vk.1 )
                      case Alice__merged_____1_____9__131
                      by solve( !KU( ~n.1 ) @ #vk.2 )
                    next
                      case c_enc
                      by solve( !KU( ~n.3 ) @ #vk.4 )
                    qed
                  next
                    case split_case_2
                    solve( !KU( enc(<~n, z>, ~n.3) ) @ #vk.1 )
                      case Alice__merged_____1_____9__131
                      by solve( !KU( ~n.1 ) @ #vk.2 )
                    next
                      case c_enc
                      by solve( !KU( ~n.3 ) @ #vk.4 )
                    qed
                  next
                    case split_case_3
                    solve( !KU( enc(<~n, z>, ~n.3) ) @ #vk.1 )
                      case Alice__merged_____1_____9__131
                      by solve( !KU( ~n.1 ) @ #vk.2 )
                    next
                      case c_enc
                      by solve( !KU( ~n.3 ) @ #vk.4 )
                    qed
                  qed
                next
                  case Bob__merged_____3__0_0_____9__79_case_1
                  by solve( !KU( ~n.3 ) @ #vk.3 )
                next
                  case Bob__merged_____3__0_0_____9__79_case_2
                  by solve( !KU( ~n.3 ) @ #vk.3 )
                qed
              qed
            qed
          qed
        qed
      qed
    next
      case Bob__merged_____3__1_0_____9__75
      solve( !ACP__( <'rab__Alice', 'rab__rab'>, 'rab__udp', 'rab__recv'
             ) ▶₃ #i )
        case Init__system__ACP__2
        solve( !Const__( 'rab__priv_key_alice', priv_key_alice__44 ) ▶₄ #i )
          case Const__priv_key_alice
          solve( !Const__( 'rab__nonce_a', na ) ▶₅ #i )
            case Const__nonce_a
            solve( !Const__( 'rab__nonce_a', nonce_a__47 ) ▶₆ #i )
              case Const__nonce_a
              solve( !Eq__( z, ~n ) ▶₇ #i )
                case Equality_gen
                solve( !KU( ~n ) @ #vk )
                  case Alice__merged_____1_____9__131_case_1
                  solve( splitEqs(1) )
                    case split_case_1
                    solve( !KU( enc(<~n, z>, ~n.3) ) @ #vk.1 )
                      case Alice__merged_____1_____9__131
                      by solve( !KU( ~n.1 ) @ #vk.3 )
                    next
                      case c_enc
                      by solve( !KU( ~n.3 ) @ #vk.5 )
                    qed
                  next
                    case split_case_2
                    solve( !KU( enc(<~n, z>, ~n.3) ) @ #vk.1 )
                      case Alice__merged_____1_____9__131
                      by solve( !KU( ~n.1 ) @ #vk.3 )
                    next
                      case c_enc
                      by solve( !KU( ~n.3 ) @ #vk.5 )
                    qed
                  next
                    case split_case_3
                    solve( !KU( enc(<~n, z>, ~n.3) ) @ #vk.1 )
                      case Alice__merged_____1_____9__131
                      by solve( !KU( ~n.1 ) @ #vk.3 )
                    next
                      case c_enc
                      by solve( !KU( ~n.3 ) @ #vk.5 )
                    qed
                  qed
                next
                  case Alice__merged_____1_____9__131_case_2
                  solve( splitEqs(1) )
                    case split_case_1
                    solve( !KU( enc(<~n, z>, ~n.3) ) @ #vk.1 )
                      case Alice__merged_____1_____9__131
                      by solve( !KU( ~n.1 ) @ #vk.3 )
                    next
                      case c_enc
                      by solve( !KU( ~n.3 ) @ #vk.5 )
                    qed
                  next
                    case split_case_2
                    solve( !KU( enc(<~n, z>, ~n.3) ) @ #vk.1 )
                      case Alice__merged_____1_____9__131
                      by solve( !KU( ~n.1 ) @ #vk.3 )
                    next
                      case c_enc
                      by solve( !KU( ~n.3 ) @ #vk.5 )
                    qed
                  next
                    case split_case_3
                    solve( !KU( enc(<~n, z>, ~n.3) ) @ #vk.1 )
                      case Alice__merged_____1_____9__131
                      by solve( !KU( ~n.1 ) @ #vk.3 )
                    next
                      case c_enc
                      by solve( !KU( ~n.3 ) @ #vk.5 )
                    qed
                  qed
                next
                  case Bob__merged_____3__1_0_____9__75_case_1
                  by solve( !KU( ~n.3 ) @ #vk.4 )
                next
                  case Bob__merged_____3__1_0_____9__75_case_2
                  by solve( !KU( ~n.3 ) @ #vk.4 )
                qed
              qed
            qed
          qed
        qed
      qed
    qed
  next
    case Alice__merged_____9_____11__1_0__102_case_2
    solve( Store( 'rab__udp', n__0__40 ) ▶₁ #i )
      case Alice__merged_____15__0_1_____15__0_3__0_1__86
      solve( !ACP__( <'rab__Alice', 'rab__rab'>, 'rab__udp', 'rab__recv'
             ) ▶₃ #i )
        case Init__system__ACP__2
        solve( !Const__( 'rab__priv_key_alice', priv_key_alice__44 ) ▶₄ #i )
          case Const__priv_key_alice
          solve( !Const__( 'rab__nonce_a', na ) ▶₅ #i )
            case Const__nonce_a
            solve( !Const__( 'rab__nonce_a', nonce_a__47 ) ▶₆ #i )
              case Const__nonce_a
              solve( !Eq__( z, ~n ) ▶₇ #i )
                case Equality_gen
                solve( !KU( ~n ) @ #vk )
                  case Alice__merged_____2__1_0_____9__122_case_1
                  solve( !KU( enc(<~n, z>, ~n.3) ) @ #vk.1 )
                    case Alice__merged_____2__1_0_____9__122
                    by solve( !KU( ~n.1 ) @ #vk.2 )
                  next
                    case c_enc
                    by solve( !KU( ~n.3 ) @ #vk.4 )
                  qed
                next
                  case Alice__merged_____2__1_0_____9__122_case_2
                  solve( !KU( enc(<~n, z>, ~n.3) ) @ #vk.1 )
                    case Alice__merged_____2__1_0_____9__122
                    by solve( !KU( ~n.1 ) @ #vk.2 )
                  next
                    case c_enc
                    by solve( !KU( ~n.3 ) @ #vk.4 )
                  qed
                next
                  case Bob__merged_____3__0_0_____9__79_case_1
                  by solve( !KU( ~n.3 ) @ #vk.4 )
                next
                  case Bob__merged_____3__0_0_____9__79_case_2
                  by solve( !KU( ~n.3 ) @ #vk.4 )
                next
                  case Bob__merged_____3__1_0_____9__75_case_1
                  by solve( !KU( ~n.3 ) @ #vk.5 )
                next
                  case Bob__merged_____3__1_0_____9__75_case_2
                  by solve( !KU( ~n.3 ) @ #vk.5 )
                qed
              qed
            qed
          qed
        qed
      qed
    next
      case Alice__merged_____2__1_0_____9__122
      solve( !ACP__( <'rab__Alice', 'rab__rab'>, 'rab__udp', 'rab__recv'
             ) ▶₃ #i )
        case Init__system__ACP__2
        solve( !Const__( 'rab__priv_key_alice', priv_key_alice__44 ) ▶₄ #i )
          case Const__priv_key_alice
          solve( !Const__( 'rab__nonce_a', na ) ▶₅ #i )
            case Const__nonce_a
            solve( !Const__( 'rab__nonce_a', nonce_a__47 ) ▶₆ #i )
              case Const__nonce_a
              solve( !Eq__( z, ~n ) ▶₇ #i )
                case Equality_gen
                solve( !KU( ~n ) @ #vk )
                  case Alice__merged_____2__1_0_____9__122_case_1
                  solve( !KU( enc(<~n, z>, ~n.2) ) @ #vk.1 )
                    case Alice__merged_____2__1_0_____9__122
                    by solve( !KU( ~n.1 ) @ #vk.2 )
                  next
                    case c_enc
                    by solve( !KU( ~n.2 ) @ #vk.4 )
                  qed
                next
                  case Alice__merged_____2__1_0_____9__122_case_2
                  solve( !KU( enc(<~n, z>, ~n.2) ) @ #vk.1 )
                    case Alice__merged_____2__1_0_____9__122
                    by solve( !KU( ~n.1 ) @ #vk.2 )
                  next
                    case c_enc
                    by solve( !KU( ~n.2 ) @ #vk.4 )
                  qed
                next
                  case Bob__merged_____3__0_0_____9__79_case_1
                  by solve( !KU( ~n.2 ) @ #vk.4 )
                next
                  case Bob__merged_____3__0_0_____9__79_case_2
                  by solve( !KU( ~n.2 ) @ #vk.4 )
                next
                  case Bob__merged_____3__1_0_____9__75_case_1
                  by solve( !KU( ~n.2 ) @ #vk.5 )
                next
                  case Bob__merged_____3__1_0_____9__75_case_2
                  by solve( !KU( ~n.2 ) @ #vk.5 )
                qed
              qed
            qed
          qed
        qed
      qed
    next
      case Bob__merged_____3__0_0_____9__79
      solve( !ACP__( <'rab__Alice', 'rab__rab'>, 'rab__udp', 'rab__recv'
             ) ▶₃ #i )
        case Init__system__ACP__2
        solve( !Const__( 'rab__priv_key_alice', priv_key_alice__44 ) ▶₄ #i )
          case Const__priv_key_alice
          solve( !Const__( 'rab__nonce_a', na ) ▶₅ #i )
            case Const__nonce_a
            solve( !Const__( 'rab__nonce_a', nonce_a__47 ) ▶₆ #i )
              case Const__nonce_a
              solve( !Eq__( z, ~n ) ▶₇ #i )
                case Equality_gen
                solve( !KU( ~n ) @ #vk )
                  case Alice__merged_____2__1_0_____9__122_case_1
                  solve( splitEqs(1) )
                    case split_case_1
                    solve( !KU( enc(<~n, z>, ~n.3) ) @ #vk.1 )
                      case Alice__merged_____2__1_0_____9__122
                      by solve( !KU( ~n.1 ) @ #vk.2 )
                    next
                      case c_enc
                      by solve( !KU( ~n.3 ) @ #vk.4 )
                    qed
                  next
                    case split_case_2
                    solve( !KU( enc(<~n, z>, ~n.3) ) @ #vk.1 )
                      case Alice__merged_____2__1_0_____9__122
                      by solve( !KU( ~n.1 ) @ #vk.2 )
                    next
                      case c_enc
                      by solve( !KU( ~n.3 ) @ #vk.4 )
                    qed
                  next
                    case split_case_3
                    solve( !KU( enc(<~n, z>, ~n.3) ) @ #vk.1 )
                      case Alice__merged_____2__1_0_____9__122
                      by solve( !KU( ~n.1 ) @ #vk.2 )
                    next
                      case c_enc
                      by solve( !KU( ~n.3 ) @ #vk.4 )
                    qed
                  qed
                next
                  case Alice__merged_____2__1_0_____9__122_case_2
                  solve( splitEqs(1) )
                    case split_case_1
                    solve( !KU( enc(<~n, z>, ~n.3) ) @ #vk.1 )
                      case Alice__merged_____2__1_0_____9__122
                      by solve( !KU( ~n.1 ) @ #vk.2 )
                    next
                      case c_enc
                      by solve( !KU( ~n.3 ) @ #vk.4 )
                    qed
                  next
                    case split_case_2
                    solve( !KU( enc(<~n, z>, ~n.3) ) @ #vk.1 )
                      case Alice__merged_____2__1_0_____9__122
                      by solve( !KU( ~n.1 ) @ #vk.2 )
                    next
                      case c_enc
                      by solve( !KU( ~n.3 ) @ #vk.4 )
                    qed
                  next
                    case split_case_3
                    solve( !KU( enc(<~n, z>, ~n.3) ) @ #vk.1 )
                      case Alice__merged_____2__1_0_____9__122
                      by solve( !KU( ~n.1 ) @ #vk.2 )
                    next
                      case c_enc
                      by solve( !KU( ~n.3 ) @ #vk.4 )
                    qed
                  qed
                next
                  case Bob__merged_____3__0_0_____9__79_case_1
                  by solve( !KU( ~n.3 ) @ #vk.4 )
                next
                  case Bob__merged_____3__0_0_____9__79_case_2
                  by solve( !KU( ~n.3 ) @ #vk.4 )
                qed
              qed
            qed
          qed
        qed
      qed
    next
      case Bob__merged_____3__1_0_____9__75
      solve( !ACP__( <'rab__Alice', 'rab__rab'>, 'rab__udp', 'rab__recv'
             ) ▶₃ #i )
        case Init__system__ACP__2
        solve( !Const__( 'rab__priv_key_alice', priv_key_alice__44 ) ▶₄ #i )
          case Const__priv_key_alice
          solve( !Const__( 'rab__nonce_a', na ) ▶₅ #i )
            case Const__nonce_a
            solve( !Const__( 'rab__nonce_a', nonce_a__47 ) ▶₆ #i )
              case Const__nonce_a
              solve( !Eq__( z, ~n ) ▶₇ #i )
                case Equality_gen
                solve( !KU( ~n ) @ #vk )
                  case Alice__merged_____2__1_0_____9__122_case_1
                  solve( splitEqs(1) )
                    case split_case_1
                    solve( !KU( enc(<~n, z>, ~n.3) ) @ #vk.1 )
                      case Alice__merged_____2__1_0_____9__122
                      by solve( !KU( ~n.1 ) @ #vk.2 )
                    next
                      case c_enc
                      by solve( !KU( ~n.3 ) @ #vk.5 )
                    qed
                  next
                    case split_case_2
                    solve( !KU( enc(<~n, z>, ~n.3) ) @ #vk.1 )
                      case Alice__merged_____2__1_0_____9__122
                      by solve( !KU( ~n.1 ) @ #vk.2 )
                    next
                      case c_enc
                      by solve( !KU( ~n.3 ) @ #vk.5 )
                    qed
                  next
                    case split_case_3
                    solve( !KU( enc(<~n, z>, ~n.3) ) @ #vk.1 )
                      case Alice__merged_____2__1_0_____9__122
                      by solve( !KU( ~n.1 ) @ #vk.2 )
                    next
                      case c_enc
                      by solve( !KU( ~n.3 ) @ #vk.5 )
                    qed
                  qed
                next
                  case Alice__merged_____2__1_0_____9__122_case_2
                  solve( splitEqs(1) )
                    case split_case_1
                    solve( !KU( enc(<~n, z>, ~n.3) ) @ #vk.1 )
                      case Alice__merged_____2__1_0_____9__122
                      by solve( !KU( ~n.1 ) @ #vk.2 )
                    next
                      case c_enc
                      by solve( !KU( ~n.3 ) @ #vk.5 )
                    qed
                  next
                    case split_case_2
                    solve( !KU( enc(<~n, z>, ~n.3) ) @ #vk.1 )
                      case Alice__merged_____2__1_0_____9__122
                      by solve( !KU( ~n.1 ) @ #vk.2 )
                    next
                      case c_enc
                      by solve( !KU( ~n.3 ) @ #vk.5 )
                    qed
                  next
                    case split_case_3
                    solve( !KU( enc(<~n, z>, ~n.3) ) @ #vk.1 )
                      case Alice__merged_____2__1_0_____9__122
                      by solve( !KU( ~n.1 ) @ #vk.2 )
                    next
                      case c_enc
                      by solve( !KU( ~n.3 ) @ #vk.5 )
                    qed
                  qed
                next
                  case Bob__merged_____3__1_0_____9__75_case_1
                  by solve( !KU( ~n.3 ) @ #vk.5 )
                next
                  case Bob__merged_____3__1_0_____9__75_case_2
                  by solve( !KU( ~n.3 ) @ #vk.5 )
                qed
              qed
            qed
          qed
        qed
      qed
    qed
  qed
qed

lemma NonceSecrecyB:
  all-traces
  "∀ nb #j. (SecretNonceBob( nb ) @ #j) ⇒ (¬(∃ #m. K( nb ) @ #m))"
/*
guarded formula characterizing all counter-examples:
"∃ nb #j. (SecretNonceBob( nb ) @ #j) ∧ ∃ #m. (K( nb ) @ #m)"
*/
simplify
solve( SecretNonceBob( nb ) @ #j )
  case Bob__merged_____11__0_0_____13__0_1__59
  solve( State__Bob( <'rab_____11__0_0', param, %v__>, return__var__25,
                     'rab__', <l__0__25, l__1__25, l__2__25, l__3__25, l__4__25>, t__0__25
         ) ▶₀ #j )
    case Bob__merged_____9_____11__0_0__62_case_1
    solve( Store( 'rab__udp', n__0__25 ) ▶₁ #j )
      case Alice__merged_____15__0_1_____15__0_3__0_1__86
      solve( !ACP__( <'rab__Bob', 'rab__rab'>, 'rab__udp', 'rab__recv'
             ) ▶₂ #j )
        case Init__system__ACP__0
        solve( !Const__( 'rab__priv_key_bob', priv_key_bob__34 ) ▶₃ #j )
          case Const__priv_key_bob
          solve( !Const__( 'rab__nonce_b', nb ) ▶₄ #j )
            case Const__nonce_b
            solve( !Const__( 'rab__nonce_b', nonce_b__35 ) ▶₅ #j )
              case Const__nonce_b
              solve( !Eq__( z, ~n.1 ) ▶₆ #j )
                case Equality_gen
                solve( !KU( ~n.1 ) @ #vk )
                  case Alice__merged_____15__0_1_____15__0_3__0_1__86
                  solve( splitEqs(1) )
                    case split_case_1
                    solve( Store( 'rab__udp', l__4__25 ) ▶₁ #vr.1 )
                      case Alice__merged_____15__0_1_____15__0_3__0_1__86
                      solve( State__Alice( <'rab_____15__0_1', 'rab__rab', %v__>,
                                           return__var__49, 'rab__',
                                           <l__0__49, l__1__49, l__2__49, l__3__49, l__4__49, ~l__5__49.1, 
                                            l__6__49>,
                                           'rab__'
                             ) ▶₀ #vr.10 )
                        case Alice__merged_____11__1_0_____15__0_1__94_case_1
                        solve( !KU( enc(<~n, l__0__49>, ~n.2) ) @ #vk.2 )
                          case c_enc
                          by solve( !KU( ~n.2 ) @ #vk.4 )
                        qed
                      next
                        case Alice__merged_____11__1_0_____15__0_1__94_case_2
                        by solve( !KU( ~l__5__49.1 ) @ #vk.3 )
                      next
                        case Alice__merged_____11__1_0_____15__0_1__94_case_3
                        solve( !KU( enc(<~n, l__0__49>, ~n.2) ) @ #vk.2 )
                          case c_enc
                          by solve( !KU( ~n.2 ) @ #vk.4 )
                        qed
                      next
                        case Alice__merged_____11__1_0_____15__0_1__94_case_4
                        by solve( !KU( ~l__5__49.1 ) @ #vk.3 )
                      next
                        case Alice__merged_____11__1_0_____15__0_1__94_case_5
                        solve( !KU( enc(<~n, l__0__49>, ~n.2) ) @ #vk.2 )
                          case c_enc
                          by solve( !KU( ~n.2 ) @ #vk.4 )
                        qed
                      next
                        case Alice__merged_____11__1_0_____15__0_1__94_case_6
                        by solve( !KU( ~l__5__49.1 ) @ #vk.3 )
                      qed
                    next
                      case Alice__merged_____1_____9__131
                      solve( State__Alice( <'rab_____15__0_1', 'rab__rab', %v__>,
                                           return__var__49, 'rab__',
                                           <l__0__49, l__1__49, l__2__49, l__3__49, l__4__49, ~l__5__49, 
                                            l__6__49>,
                                           'rab__'
                             ) ▶₀ #vr.10 )
                        case Alice__merged_____11__1_0_____15__0_1__94
                        by contradiction /* non-normal terms */
                      qed
                    next
                      case Alice__merged_____2__1_0_____9__122
                      solve( State__Alice( <'rab_____15__0_1', 'rab__rab', %v__>,
                                           return__var__49, 'rab__',
                                           <l__0__49, l__1__49, l__2__49, l__3__49, l__4__49, ~l__5__49, 
                                            l__6__49>,
                                           'rab__'
                             ) ▶₀ #vr.10 )
                        case Alice__merged_____11__1_0_____15__0_1__94
                        by contradiction /* non-normal terms */
                      qed
                    next
                      case Bob__merged_____3__0_0_____9__79
                      by contradiction /* cyclic */
                    qed
                  next
                    case split_case_2
                    solve( Store( 'rab__udp', enc(x, ~l__5__49) ) ▶₁ #vr.1 )
                      case Alice__merged_____15__0_1_____15__0_3__0_1__86
                      solve( State__Alice( <'rab_____15__0_1', 'rab__rab', %v__>,
                                           return__var__49, 'rab__',
                                           <l__0__49, l__1__49, l__2__49, l__3__49, l__4__49, ~l__5__49, 
                                            l__6__49>,
                                           'rab__'
                             ) ▶₀ #vr.10 )
                        case Alice__merged_____11__1_0_____15__0_1__94_case_1
                        solve( !KU( enc(<~n, l__0__49>, ~n.2) ) @ #vk.2 )
                          case c_enc
                          by solve( !KU( ~n.2 ) @ #vk.4 )
                        qed
                      next
                        case Alice__merged_____11__1_0_____15__0_1__94_case_2
                        by solve( !KU( ~l__5__49 ) @ #vk.3 )
                      next
                        case Alice__merged_____11__1_0_____15__0_1__94_case_3
                        solve( !KU( enc(<~n, l__0__49>, ~n.2) ) @ #vk.2 )
                          case c_enc
                          by solve( !KU( ~n.2 ) @ #vk.4 )
                        qed
                      next
                        case Alice__merged_____11__1_0_____15__0_1__94_case_4
                        by solve( !KU( ~l__5__49 ) @ #vk.3 )
                      next
                        case Alice__merged_____11__1_0_____15__0_1__94_case_5
                        solve( !KU( enc(<~n, l__0__49>, ~n.2) ) @ #vk.2 )
                          case c_enc
                          by solve( !KU( ~n.2 ) @ #vk.4 )
                        qed
                      next
                        case Alice__merged_____11__1_0_____15__0_1__94_case_6
                        by solve( !KU( ~l__5__49 ) @ #vk.3 )
                      qed
                    next
                      case Alice__merged_____1_____9__131
                      by contradiction /* non-normal terms */
                    next
                      case Alice__merged_____2__1_0_____9__122
                      by contradiction /* non-normal terms */
                    qed
                  next
                    case split_case_3
                    solve( Store( 'rab__udp', enc(<l__3__25, x>, ~l__5__49) ) ▶₁ #vr.1 )
                      case Alice__merged_____1_____9__131
                      solve( State__Alice( <'rab_____15__0_1', 'rab__rab', %v__>,
                                           return__var__49, 'rab__',
                                           <l__0__49, l__1__49, l__2__49, l__3__49, l__4__49, ~l__5__49, 
                                            l__6__49>,
                                           'rab__'
                             ) ▶₀ #vr.10 )
                        case Alice__merged_____11__1_0_____15__0_1__94_case_1
                        solve( !KU( enc(<~n, l__0__49>, ~n.2) ) @ #vk.2 )
                          case c_enc
                          by solve( !KU( ~n.2 ) @ #vk.4 )
                        qed
                      next
                        case Alice__merged_____11__1_0_____15__0_1__94_case_2
                        solve( !KU( enc(<~n, l__0__49>, ~n.2) ) @ #vk.2 )
                          case c_enc
                          by solve( !KU( ~n.2 ) @ #vk.4 )
                        qed
                      qed
                    next
                      case Alice__merged_____2__1_0_____9__122
                      by solve( !KU( ~l__5__49 ) @ #vk.2 )
                    qed
                  qed
                next
                  case Bob__merged_____3__0_0_____9__79_case_1
                  by solve( !KU( ~n.2 ) @ #vk.2 )
                next
                  case Bob__merged_____3__0_0_____9__79_case_2
                  by solve( !KU( ~n.2 ) @ #vk.2 )
                qed
              qed
            qed
          qed
        qed
      qed
    next
      case Alice__merged_____1_____9__131
      solve( !ACP__( <'rab__Bob', 'rab__rab'>, 'rab__udp', 'rab__recv'
             ) ▶₂ #j )
        case Init__system__ACP__0
        solve( !Const__( 'rab__priv_key_bob', priv_key_bob__34 ) ▶₃ #j )
          case Const__priv_key_bob
          solve( !Const__( 'rab__nonce_b', nb ) ▶₄ #j )
            case Const__nonce_b
            solve( !Const__( 'rab__nonce_b', nonce_b__35 ) ▶₅ #j )
              case Const__nonce_b
              by solve( !Eq__( z, ~n.1 ) ▶₆ #j )
            qed
          qed
        qed
      qed
    next
      case Alice__merged_____2__1_0_____9__122
      solve( !ACP__( <'rab__Bob', 'rab__rab'>, 'rab__udp', 'rab__recv'
             ) ▶₂ #j )
        case Init__system__ACP__0
        solve( !Const__( 'rab__priv_key_bob', priv_key_bob__34 ) ▶₃ #j )
          case Const__priv_key_bob
          solve( !Const__( 'rab__nonce_b', nb ) ▶₄ #j )
            case Const__nonce_b
            solve( !Const__( 'rab__nonce_b', nonce_b__35 ) ▶₅ #j )
              case Const__nonce_b
              by solve( !Eq__( z, ~n.1 ) ▶₆ #j )
            qed
          qed
        qed
      qed
    next
      case Bob__merged_____3__0_0_____9__79
      solve( !ACP__( <'rab__Bob', 'rab__rab'>, 'rab__udp', 'rab__recv'
             ) ▶₂ #j )
        case Init__system__ACP__0
        solve( !Const__( 'rab__priv_key_bob', priv_key_bob__34 ) ▶₃ #j )
          case Const__priv_key_bob
          solve( !Const__( 'rab__nonce_b', nb ) ▶₄ #j )
            case Const__nonce_b
            solve( !Const__( 'rab__nonce_b', nonce_b__35 ) ▶₅ #j )
              case Const__nonce_b
              by solve( !Eq__( dec(enc(<~n, ~n.1>, pk(~n.2)), ~n.3), ~n.1 ) ▶₆ #j )
            qed
          qed
        qed
      qed
    qed
  next
    case Bob__merged_____9_____11__0_0__62_case_2
    solve( Store( 'rab__udp', n__0__25 ) ▶₁ #j )
      case Alice__merged_____15__0_1_____15__0_3__0_1__86
      solve( !ACP__( <'rab__Bob', 'rab__rab'>, 'rab__udp', 'rab__recv'
             ) ▶₂ #j )
        case Init__system__ACP__0
        solve( !Const__( 'rab__priv_key_bob', priv_key_bob__34 ) ▶₃ #j )
          case Const__priv_key_bob
          solve( !Const__( 'rab__nonce_b', nb ) ▶₄ #j )
            case Const__nonce_b
            solve( !Const__( 'rab__nonce_b', nonce_b__35 ) ▶₅ #j )
              case Const__nonce_b
              solve( !Eq__( z, ~n.1 ) ▶₆ #j )
                case Equality_gen
                solve( !KU( ~n.1 ) @ #vk )
                  case Alice__merged_____15__0_1_____15__0_3__0_1__86
                  solve( splitEqs(1) )
                    case split_case_1
                    solve( Store( 'rab__udp', n__0__9 ) ▶₁ #vr.1 )
                      case Alice__merged_____15__0_1_____15__0_3__0_1__86
                      solve( State__Alice( <'rab_____15__0_1', 'rab__rab', %v__>,
                                           return__var__49, 'rab__',
                                           <l__0__49, l__1__49, l__2__49, l__3__49, l__4__49, ~l__5__49, 
                                            l__6__49>,
                                           'rab__'
                             ) ▶₀ #vr.10 )
                        case Alice__merged_____11__1_0_____15__0_1__94_case_1
                        solve( !KU( enc(<~n, l__0__49>, ~n.2) ) @ #vk.3 )
                          case c_enc
                          by solve( !KU( ~n.2 ) @ #vk.5 )
                        qed
                      next
                        case Alice__merged_____11__1_0_____15__0_1__94_case_2
                        by solve( !KU( ~l__5__49 ) @ #vk.4 )
                      next
                        case Alice__merged_____11__1_0_____15__0_1__94_case_3
                        solve( !KU( enc(<~n, l__0__49>, ~n.2) ) @ #vk.3 )
                          case c_enc
                          by solve( !KU( ~n.2 ) @ #vk.5 )
                        qed
                      next
                        case Alice__merged_____11__1_0_____15__0_1__94_case_4
                        by solve( !KU( ~l__5__49 ) @ #vk.4 )
                      next
                        case Alice__merged_____11__1_0_____15__0_1__94_case_5
                        solve( !KU( enc(<~n, l__0__49>, ~n.2) ) @ #vk.3 )
                          case c_enc
                          by solve( !KU( ~n.2 ) @ #vk.5 )
                        qed
                      next
                        case Alice__merged_____11__1_0_____15__0_1__94_case_6
                        by solve( !KU( ~l__5__49 ) @ #vk.4 )
                      qed
                    next
                      case Alice__merged_____1_____9__131
                      solve( State__Alice( <'rab_____15__0_1', 'rab__rab', %v__>,
                                           return__var__49, 'rab__',
                                           <l__0__49, l__1__49, l__2__49, l__3__49, l__4__49, ~l__5__49, 
                                            l__6__49>,
                                           'rab__'
                             ) ▶₀ #vr.10 )
                        case Alice__merged_____11__1_0_____15__0_1__94_case_1
                        solve( !KU( enc(<~n, l__0__49>, ~n.2) ) @ #vk.3 )
                          case c_enc
                          by solve( !KU( ~n.2 ) @ #vk.5 )
                        qed
                      next
                        case Alice__merged_____11__1_0_____15__0_1__94_case_2
                        solve( !KU( enc(<~n, l__0__49>, ~n.2) ) @ #vk.3 )
                          case c_enc
                          by solve( !KU( ~n.2 ) @ #vk.5 )
                        qed
                      qed
                    next
                      case Alice__merged_____2__1_0_____9__122
                      solve( State__Alice( <'rab_____15__0_1', 'rab__rab', %v__>,
                                           return__var__49, 'rab__',
                                           <l__0__49, l__1__49, l__2__49, l__3__49, l__4__49, ~l__5__49, 
                                            l__6__49>,
                                           'rab__'
                             ) ▶₀ #vr.10 )
                        case Alice__merged_____11__1_0_____15__0_1__94_case_1
                        by solve( !KU( ~l__5__49 ) @ #vk.3 )
                      next
                        case Alice__merged_____11__1_0_____15__0_1__94_case_2
                        by solve( !KU( ~l__5__49 ) @ #vk.3 )
                      qed
                    next
                      case Bob__merged_____3__1_0_____9__75
                      by contradiction /* cyclic */
                    qed
                  next
                    case split_case_2
                    solve( !KU( enc(x, ~l__5__49) ) @ #vk.1 )
                      case Alice__merged_____15__0_1_____15__0_3__0_1__86
                      solve( Store( 'rab__udp', n__0__9 ) ▶₁ #vr.1 )
                        case Alice__merged_____15__0_1_____15__0_3__0_1__86
                        solve( State__Alice( <'rab_____15__0_1', 'rab__rab', %v__>,
                                             return__var__49, 'rab__',
                                             <l__0__49, l__1__49, l__2__49, l__3__49, l__4__49, ~l__5__49, 
                                              l__6__49>,
                                             'rab__'
                               ) ▶₀ #vr.10 )
                          case Alice__merged_____11__1_0_____15__0_1__94_case_1
                          solve( !KU( enc(<~n, l__0__49>, ~n.2) ) @ #vk.3 )
                            case c_enc
                            by solve( !KU( ~n.2 ) @ #vk.5 )
                          qed
                        next
                          case Alice__merged_____11__1_0_____15__0_1__94_case_2
                          by solve( !KU( ~l__5__49 ) @ #vk.4 )
                        next
                          case Alice__merged_____11__1_0_____15__0_1__94_case_3
                          solve( !KU( enc(<~n, l__0__49>, ~n.2) ) @ #vk.3 )
                            case c_enc
                            by solve( !KU( ~n.2 ) @ #vk.5 )
                          qed
                        next
                          case Alice__merged_____11__1_0_____15__0_1__94_case_4
                          by solve( !KU( ~l__5__49 ) @ #vk.4 )
                        next
                          case Alice__merged_____11__1_0_____15__0_1__94_case_5
                          solve( !KU( enc(<~n, l__0__49>, ~n.2) ) @ #vk.3 )
                            case c_enc
                            by solve( !KU( ~n.2 ) @ #vk.5 )
                          qed
                        next
                          case Alice__merged_____11__1_0_____15__0_1__94_case_6
                          by solve( !KU( ~l__5__49 ) @ #vk.4 )
                        qed
                      next
                        case Alice__merged_____1_____9__131
                        solve( State__Alice( <'rab_____15__0_1', 'rab__rab', %v__>,
                                             return__var__49, 'rab__',
                                             <l__0__49, l__1__49, l__2__49, l__3__49, l__4__49, ~l__5__49, 
                                              l__6__49>,
                                             'rab__'
                               ) ▶₀ #vr.10 )
                          case Alice__merged_____11__1_0_____15__0_1__94_case_1
                          solve( !KU( enc(<~n, l__0__49>, ~n.2) ) @ #vk.3 )
                            case c_enc
                            by solve( !KU( ~n.2 ) @ #vk.5 )
                          qed
                        next
                          case Alice__merged_____11__1_0_____15__0_1__94_case_2
                          solve( !KU( enc(<~n, l__0__49>, ~n.2) ) @ #vk.3 )
                            case c_enc
                            by solve( !KU( ~n.2 ) @ #vk.5 )
                          qed
                        qed
                      next
                        case Alice__merged_____2__1_0_____9__122
                        solve( State__Alice( <'rab_____15__0_1', 'rab__rab', %v__>,
                                             return__var__49, 'rab__',
                                             <l__0__49, l__1__49, l__2__49, l__3__49, l__4__49, ~l__5__49, 
                                              l__6__49>,
                                             'rab__'
                               ) ▶₀ #vr.10 )
                          case Alice__merged_____11__1_0_____15__0_1__94_case_1
                          by solve( !KU( ~l__5__49 ) @ #vk.3 )
                        next
                          case Alice__merged_____11__1_0_____15__0_1__94_case_2
                          by solve( !KU( ~l__5__49 ) @ #vk.3 )
                        qed
                      next
                        case Bob__merged_____3__1_0_____9__75
                        by contradiction /* cyclic */
                      qed
                    next
                      case Alice__merged_____1_____9__131
                      by contradiction /* non-normal terms */
                    next
                      case Alice__merged_____2__1_0_____9__122
                      by contradiction /* non-normal terms */
                    next
                      case c_enc
                      by solve( !KU( ~l__5__49 ) @ #vk.4 )
                    qed
                  next
                    case split_case_3
                    solve( !KU( enc(<l__3__25, x>, ~l__5__49) ) @ #vk.1 )
                      case Alice__merged_____1_____9__131
                      solve( Store( 'rab__udp', n__0__9 ) ▶₁ #vr.1 )
                        case Alice__merged_____15__0_1_____15__0_3__0_1__86
                        solve( State__Alice( <'rab_____15__0_1', 'rab__rab', %v__>,
                                             return__var__49, 'rab__',
                                             <l__0__49, l__1__49, l__2__49, l__3__49, l__4__49, ~l__5__49, 
                                              l__6__49>,
                                             'rab__'
                               ) ▶₀ #vr.10 )
                          case Alice__merged_____11__1_0_____15__0_1__94_case_1
                          solve( !KU( enc(<~n, l__0__49>, ~n.2) ) @ #vk.3 )
                            case c_enc
                            by solve( !KU( ~n.2 ) @ #vk.5 )
                          qed
                        next
                          case Alice__merged_____11__1_0_____15__0_1__94_case_2
                          solve( !KU( enc(<~n, l__0__49>, ~n.2) ) @ #vk.3 )
                            case c_enc
                            by solve( !KU( ~n.2 ) @ #vk.5 )
                          qed
                        next
                          case Alice__merged_____11__1_0_____15__0_1__94_case_3
                          solve( !KU( enc(<~n, l__0__49>, ~n.2) ) @ #vk.3 )
                            case c_enc
                            by solve( !KU( ~n.2 ) @ #vk.5 )
                          qed
                        qed
                      next
                        case Alice__merged_____1_____9__131
                        solve( State__Alice( <'rab_____15__0_1', 'rab__rab', %v__>,
                                             return__var__49, 'rab__',
                                             <l__0__49, l__1__49, l__2__49, l__3__49, l__4__49, ~l__5__49, 
                                              l__6__49>,
                                             'rab__'
                               ) ▶₀ #vr.10 )
                          case Alice__merged_____11__1_0_____15__0_1__94_case_1
                          solve( !KU( enc(<~n, l__0__49>, ~n.2) ) @ #vk.3 )
                            case c_enc
                            by solve( !KU( ~n.2 ) @ #vk.5 )
                          qed
                        next
                          case Alice__merged_____11__1_0_____15__0_1__94_case_2
                          solve( !KU( enc(<~n, l__0__49>, ~n.2) ) @ #vk.3 )
                            case c_enc
                            by solve( !KU( ~n.2 ) @ #vk.5 )
                          qed
                        qed
                      next
                        case Bob__merged_____3__1_0_____9__75
                        by contradiction /* cyclic */
                      qed
                    next
                      case Alice__merged_____2__1_0_____9__122
                      by solve( !KU( ~l__5__49 ) @ #vk.3 )
                    next
                      case c_enc
                      by solve( !KU( ~l__5__49 ) @ #vk.4 )
                    qed
                  qed
                next
                  case Bob__merged_____3__1_0_____9__75_case_1
                  by solve( !KU( ~n.2 ) @ #vk.3 )
                next
                  case Bob__merged_____3__1_0_____9__75_case_2
                  by solve( !KU( ~n.2 ) @ #vk.3 )
                qed
              qed
            qed
          qed
        qed
      qed
    next
      case Alice__merged_____1_____9__131
      solve( !ACP__( <'rab__Bob', 'rab__rab'>, 'rab__udp', 'rab__recv'
             ) ▶₂ #j )
        case Init__system__ACP__0
        solve( !Const__( 'rab__priv_key_bob', priv_key_bob__34 ) ▶₃ #j )
          case Const__priv_key_bob
          solve( !Const__( 'rab__nonce_b', nb ) ▶₄ #j )
            case Const__nonce_b
            solve( !Const__( 'rab__nonce_b', nonce_b__35 ) ▶₅ #j )
              case Const__nonce_b
              by solve( !Eq__( z, ~n.1 ) ▶₆ #j )
            qed
          qed
        qed
      qed
    next
      case Alice__merged_____2__1_0_____9__122
      solve( !ACP__( <'rab__Bob', 'rab__rab'>, 'rab__udp', 'rab__recv'
             ) ▶₂ #j )
        case Init__system__ACP__0
        solve( !Const__( 'rab__priv_key_bob', priv_key_bob__34 ) ▶₃ #j )
          case Const__priv_key_bob
          solve( !Const__( 'rab__nonce_b', nb ) ▶₄ #j )
            case Const__nonce_b
            solve( !Const__( 'rab__nonce_b', nonce_b__35 ) ▶₅ #j )
              case Const__nonce_b
              by solve( !Eq__( z, ~n.1 ) ▶₆ #j )
            qed
          qed
        qed
      qed
    next
      case Bob__merged_____3__1_0_____9__75
      solve( !ACP__( <'rab__Bob', 'rab__rab'>, 'rab__udp', 'rab__recv'
             ) ▶₂ #j )
        case Init__system__ACP__0
        solve( !Const__( 'rab__priv_key_bob', priv_key_bob__34 ) ▶₃ #j )
          case Const__priv_key_bob
          solve( !Const__( 'rab__nonce_b', nb ) ▶₄ #j )
            case Const__nonce_b
            solve( !Const__( 'rab__nonce_b', nonce_b__35 ) ▶₅ #j )
              case Const__nonce_b
              by solve( !Eq__( dec(enc(<~n, ~n.1>, pk(~n.2)), ~n.3), ~n.1 ) ▶₆ #j )
            qed
          qed
        qed
      qed
    qed
  qed
next
  case Bob__merged_____11__1_0_____13__0_1__55
  solve( State__Bob( <'rab_____11__1_0', param, %v__>, return__var__30,
                     'rab__', <l__0__30, l__1__30, l__2__30, l__3__30, l__4__30>, t__0__30
         ) ▶₀ #j )
    case Bob__merged_____9_____11__1_0__63_case_1
    solve( Store( 'rab__udp', n__0__30 ) ▶₁ #j )
      case Alice__merged_____15__0_1_____15__0_3__0_1__86
      solve( !ACP__( <'rab__Bob', 'rab__rab'>, 'rab__udp', 'rab__recv'
             ) ▶₃ #j )
        case Init__system__ACP__0
        solve( !Const__( 'rab__priv_key_bob', priv_key_bob__34 ) ▶₄ #j )
          case Const__priv_key_bob
          solve( !Const__( 'rab__nonce_b', nb ) ▶₅ #j )
            case Const__nonce_b
            solve( !Const__( 'rab__nonce_b', nonce_b__35 ) ▶₆ #j )
              case Const__nonce_b
              solve( !Eq__( z, ~n.1 ) ▶₇ #j )
                case Equality_gen
                solve( !KU( ~n.1 ) @ #vk )
                  case Alice__merged_____15__0_1_____15__0_3__0_1__86
                  solve( splitEqs(1) )
                    case split_case_1
                    solve( !KU( enc(~n.1, ~n.3) ) @ #vk.1 )
                      case Alice__merged_____15__0_1_____15__0_3__0_1__86
                      solve( Store( 'rab__udp', enc(<l__3__30, x>, ~n.3) ) ▶₁ #vr.1 )
                        case Alice__merged_____1_____9__131
                        solve( State__Alice( <'rab_____15__0_1', 'rab__rab', %v__>,
                                             return__var__49, 'rab__',
                                             <l__0__49, l__1__49, l__2__49, l__3__49, l__4__49, l__5__49, 
                                              l__6__49>,
                                             'rab__'
                               ) ▶₀ #vr.10 )
                          case Alice__merged_____11__1_0_____15__0_1__94_case_1
                          solve( !KU( enc(<~n, l__0__49>, ~n.2) ) @ #vk.3 )
                            case c_enc
                            by solve( !KU( ~n.2 ) @ #vk.5 )
                          qed
                        next
                          case Alice__merged_____11__1_0_____15__0_1__94_case_2
                          solve( !KU( enc(<~n, l__0__49>, ~n.2) ) @ #vk.3 )
                            case c_enc
                            by solve( !KU( ~n.2 ) @ #vk.5 )
                          qed
                        qed
                      next
                        case Alice__merged_____2__1_0_____9__122
                        by solve( !KU( ~n.3 ) @ #vk.3 )
                      qed
                    next
                      case c_enc
                      by solve( !KU( ~n.3 ) @ #vk.3 )
                    qed
                  next
                    case split_case_2
                    solve( !KU( enc(~n.1, ~n.3) ) @ #vk.1 )
                      case Alice__merged_____15__0_1_____15__0_3__0_1__86
                      solve( Store( 'rab__udp', enc(x, ~n.3) ) ▶₁ #vr.1 )
                        case Alice__merged_____15__0_1_____15__0_3__0_1__86
                        solve( State__Alice( <'rab_____15__0_1', 'rab__rab', %v__>,
                                             return__var__49, 'rab__',
                                             <l__0__49, l__1__49, l__2__49, l__3__49, l__4__49, l__5__49, 
                                              l__6__49>,
                                             'rab__'
                               ) ▶₀ #vr.10 )
                          case Alice__merged_____11__0_0_____15__0_1__98_case_1
                          solve( State__Alice( <'rab_____15__0_1', 'rab__rab', %v__>,
                                               return__var__49, 'rab__',
                                               <l__0__49, l__1__49, l__2__49, l__3__49, l__4__49, l__5__49, 
                                                l__6__49>,
                                               'rab__'
                                 ) ▶₀ #vr.13 )
                            case Alice__merged_____11__0_0_____15__0_1__98
                            by solve( !KU( ~n.2 ) @ #vk.2 )
                          qed
                        next
                          case Alice__merged_____11__0_0_____15__0_1__98_case_2
                          by solve( !KU( ~n.2 ) @ #vk.3 )
                        next
                          case Alice__merged_____11__1_0_____15__0_1__94_case_1
                          solve( !KU( enc(<~n, l__0__49>, ~n.2) ) @ #vk.3 )
                            case Alice__merged_____1_____9__131
                            solve( State__Alice( <'rab_____15__0_1', 'rab__rab', %v__>,
                                                 return__var__49, 'rab__',
                                                 <l__0__49, l__1__49, l__2__49, l__3__49, l__4__49, l__5__49, 
                                                  l__6__49>,
                                                 'rab__'
                                   ) ▶₀ #vr.13 )
                              case Alice__merged_____11__1_0_____15__0_1__94
                              by solve( !KU( ~n.2 ) @ #vk.3 )
                            qed
                          next
                            case c_enc
                            by solve( !KU( ~n.2 ) @ #vk.5 )
                          qed
                        next
                          case Alice__merged_____11__1_0_____15__0_1__94_case_2
                          solve( !KU( enc(<~n, l__0__49>, ~n.2) ) @ #vk.3 )
                            case Alice__merged_____2__1_0_____9__122
                            by solve( !KU( ~n.2 ) @ #vk.4 )
                          next
                            case c_enc
                            by solve( !KU( ~n.2 ) @ #vk.6 )
                          qed
                        next
                          case Alice__merged_____11__1_0_____15__0_1__94_case_3
                          solve( !KU( enc(<~n, l__0__49>, ~n.2) ) @ #vk.3 )
                            case Alice__merged_____1_____9__131
                            solve( State__Alice( <'rab_____15__0_1', 'rab__rab', %v__>,
                                                 return__var__49, 'rab__',
                                                 <l__0__49, l__1__49, l__2__49, l__3__49, l__4__49, l__5__49, 
                                                  l__6__49>,
                                                 'rab__'
                                   ) ▶₀ #vr.13 )
                              case Alice__merged_____11__1_0_____15__0_1__94
                              by solve( !KU( ~n.2 ) @ #vk.3 )
                            qed
                          next
                            case c_enc
                            by solve( !KU( ~n.2 ) @ #vk.5 )
                          qed
                        next
                          case Alice__merged_____11__1_0_____15__0_1__94_case_4
                          solve( !KU( enc(<~n, l__0__49>, ~n.2) ) @ #vk.3 )
                            case Alice__merged_____2__1_0_____9__122
                            by solve( !KU( ~n.2 ) @ #vk.4 )
                          next
                            case c_enc
                            by solve( !KU( ~n.2 ) @ #vk.6 )
                          qed
                        next
                          case Alice__merged_____11__1_0_____15__0_1__94_case_5
                          solve( !KU( enc(<~n, l__0__49>, ~n.2) ) @ #vk.3 )
                            case Alice__merged_____1_____9__131
                            solve( State__Alice( <'rab_____15__0_1', 'rab__rab', %v__>,
                                                 return__var__49, 'rab__',
                                                 <l__0__49, l__1__49, l__2__49, l__3__49, l__4__49, l__5__49, 
                                                  l__6__49>,
                                                 'rab__'
                                   ) ▶₀ #vr.13 )
                              case Alice__merged_____11__1_0_____15__0_1__94
                              by solve( !KU( ~n.2 ) @ #vk.3 )
                            qed
                          next
                            case c_enc
                            by solve( !KU( ~n.2 ) @ #vk.5 )
                          qed
                        next
                          case Alice__merged_____11__1_0_____15__0_1__94_case_6
                          solve( !KU( enc(<~n, l__0__49>, ~n.2) ) @ #vk.3 )
                            case Alice__merged_____2__1_0_____9__122
                            by solve( !KU( ~n.2 ) @ #vk.4 )
                          next
                            case c_enc
                            by solve( !KU( ~n.2 ) @ #vk.6 )
                          qed
                        qed
                      next
                        case Alice__merged_____1_____9__131
                        by contradiction /* non-normal terms */
                      next
                        case Alice__merged_____2__1_0_____9__122
                        by contradiction /* non-normal terms */
                      qed
                    next
                      case c_enc
                      by solve( !KU( ~n.3 ) @ #vk.3 )
                    qed
                  next
                    case split_case_3
                    solve( !KU( enc(~n.1, ~n.3) ) @ #vk.1 )
                      case Alice__merged_____15__0_1_____15__0_3__0_1__86
                      solve( Store( 'rab__udp', l__4__30 ) ▶₁ #vr.1 )
                        case Alice__merged_____15__0_1_____15__0_3__0_1__86
                        solve( State__Alice( <'rab_____15__0_1', 'rab__rab', %v__>,
                                             return__var__49, 'rab__',
                                             <l__0__49, l__1__49, l__2__49, l__3__49, l__4__49, l__5__49.1, 
                                              l__6__49>,
                                             'rab__'
                               ) ▶₀ #vr.10 )
                          case Alice__merged_____11__0_0_____15__0_1__98_case_1
                          solve( State__Alice( <'rab_____15__0_1', 'rab__rab', %v__>,
                                               return__var__49, 'rab__',
                                               <l__0__49, l__1__49, l__2__49, l__3__49, l__4__49, l__5__49.1, 
                                                l__6__49>,
                                               'rab__'
                                 ) ▶₀ #vr.13 )
                            case Alice__merged_____11__0_0_____15__0_1__98
                            by solve( !KU( ~n.2 ) @ #vk.2 )
                          qed
                        next
                          case Alice__merged_____11__0_0_____15__0_1__98_case_2
                          by solve( !KU( ~n.2 ) @ #vk.3 )
                        next
                          case Alice__merged_____11__1_0_____15__0_1__94_case_1
                          solve( !KU( enc(<~n, l__0__49>, ~n.2) ) @ #vk.3 )
                            case Alice__merged_____1_____9__131
                            solve( State__Alice( <'rab_____15__0_1', 'rab__rab', %v__>,
                                                 return__var__49, 'rab__',
                                                 <l__0__49, l__1__49, l__2__49, l__3__49, l__4__49, 
                                                  l__5__49.1, l__6__49>,
                                                 'rab__'
                                   ) ▶₀ #vr.13 )
                              case Alice__merged_____11__1_0_____15__0_1__94
                              by solve( !KU( ~n.2 ) @ #vk.3 )
                            qed
                          next
                            case c_enc
                            by solve( !KU( ~n.2 ) @ #vk.5 )
                          qed
                        next
                          case Alice__merged_____11__1_0_____15__0_1__94_case_2
                          solve( !KU( enc(<~n, l__0__49>, ~n.2) ) @ #vk.3 )
                            case Alice__merged_____2__1_0_____9__122
                            by solve( !KU( ~n.2 ) @ #vk.4 )
                          next
                            case c_enc
                            by solve( !KU( ~n.2 ) @ #vk.6 )
                          qed
                        next
                          case Alice__merged_____11__1_0_____15__0_1__94_case_3
                          solve( !KU( enc(<~n, l__0__49>, ~n.2) ) @ #vk.3 )
                            case Alice__merged_____1_____9__131
                            solve( State__Alice( <'rab_____15__0_1', 'rab__rab', %v__>,
                                                 return__var__49, 'rab__',
                                                 <l__0__49, l__1__49, l__2__49, l__3__49, l__4__49, 
                                                  l__5__49.1, l__6__49>,
                                                 'rab__'
                                   ) ▶₀ #vr.13 )
                              case Alice__merged_____11__1_0_____15__0_1__94
                              by solve( !KU( ~n.2 ) @ #vk.3 )
                            qed
                          next
                            case c_enc
                            by solve( !KU( ~n.2 ) @ #vk.5 )
                          qed
                        next
                          case Alice__merged_____11__1_0_____15__0_1__94_case_4
                          solve( !KU( enc(<~n, l__0__49>, ~n.2) ) @ #vk.3 )
                            case Alice__merged_____2__1_0_____9__122
                            by solve( !KU( ~n.2 ) @ #vk.4 )
                          next
                            case c_enc
                            by solve( !KU( ~n.2 ) @ #vk.6 )
                          qed
                        next
                          case Alice__merged_____11__1_0_____15__0_1__94_case_5
                          solve( !KU( enc(<~n, l__0__49>, ~n.2) ) @ #vk.3 )
                            case Alice__merged_____1_____9__131
                            solve( State__Alice( <'rab_____15__0_1', 'rab__rab', %v__>,
                                                 return__var__49, 'rab__',
                                                 <l__0__49, l__1__49, l__2__49, l__3__49, l__4__49, 
                                                  l__5__49.1, l__6__49>,
                                                 'rab__'
                                   ) ▶₀ #vr.13 )
                              case Alice__merged_____11__1_0_____15__0_1__94
                              by solve( !KU( ~n.2 ) @ #vk.3 )
                            qed
                          next
                            case c_enc
                            by solve( !KU( ~n.2 ) @ #vk.5 )
                          qed
                        next
                          case Alice__merged_____11__1_0_____15__0_1__94_case_6
                          solve( !KU( enc(<~n, l__0__49>, ~n.2) ) @ #vk.3 )
                            case Alice__merged_____2__1_0_____9__122
                            by solve( !KU( ~n.2 ) @ #vk.4 )
                          next
                            case c_enc
                            by solve( !KU( ~n.2 ) @ #vk.6 )
                          qed
                        qed
                      next
                        case Alice__merged_____1_____9__131
                        solve( State__Alice( <'rab_____15__0_1', 'rab__rab', %v__>,
                                             return__var__49, 'rab__',
                                             <l__0__49, l__1__49, l__2__49, l__3__49, l__4__49, l__5__49, 
                                              l__6__49>,
                                             'rab__'
                               ) ▶₀ #vr.10 )
                          case Alice__merged_____11__1_0_____15__0_1__94_case_1
                          solve( !KU( enc(<~n, l__0__49>, ~n.2) ) @ #vk.3 )
                            case Alice__merged_____1_____9__131
                            solve( State__Alice( <'rab_____15__0_1', 'rab__rab', %v__>,
                                                 return__var__49, 'rab__',
                                                 <l__0__49, l__1__49, l__2__49, l__3__49, l__4__49, l__5__49, 
                                                  l__6__49>,
                                                 'rab__'
                                   ) ▶₀ #vr.13 )
                              case Alice__merged_____11__1_0_____15__0_1__94
                              by solve( !KU( ~n.2 ) @ #vk.3 )
                            qed
                          next
                            case c_enc
                            by solve( !KU( ~n.2 ) @ #vk.5 )
                          qed
                        next
                          case Alice__merged_____11__1_0_____15__0_1__94_case_2
                          solve( !KU( enc(<~n, l__0__49>, ~n.2) ) @ #vk.3 )
                            case Alice__merged_____1_____9__131
                            solve( State__Alice( <'rab_____15__0_1', 'rab__rab', %v__>,
                                                 return__var__49, 'rab__',
                                                 <l__0__49, l__1__49, l__2__49, l__3__49, l__4__49, l__5__49, 
                                                  l__6__49>,
                                                 'rab__'
                                   ) ▶₀ #vr.13 )
                              case Alice__merged_____11__1_0_____15__0_1__94
                              by solve( !KU( ~n.2 ) @ #vk.3 )
                            qed
                          next
                            case c_enc
                            by solve( !KU( ~n.2 ) @ #vk.5 )
                          qed
                        qed
                      next
                        case Alice__merged_____2__1_0_____9__122
                        solve( State__Alice( <'rab_____15__0_1', 'rab__rab', %v__>,
                                             return__var__49, 'rab__',
                                             <l__0__49, l__1__49, l__2__49, l__3__49, l__4__49, l__5__49, 
                                              l__6__49>,
                                             'rab__'
                               ) ▶₀ #vr.10 )
                          case Alice__merged_____11__1_0_____15__0_1__94_case_1
                          solve( !KU( enc(<~n, l__0__49>, ~n.2) ) @ #vk.4 )
                            case Alice__merged_____2__1_0_____9__122
                            by solve( !KU( ~n.2 ) @ #vk.4 )
                          next
                            case c_enc
                            by solve( !KU( ~n.2 ) @ #vk.6 )
                          qed
                        next
                          case Alice__merged_____11__1_0_____15__0_1__94_case_2
                          solve( !KU( enc(<~n, l__0__49>, ~n.2) ) @ #vk.4 )
                            case Alice__merged_____2__1_0_____9__122
                            by solve( !KU( ~n.2 ) @ #vk.4 )
                          next
                            case c_enc
                            by solve( !KU( ~n.2 ) @ #vk.6 )
                          qed
                        qed
                      next
                        case Bob__merged_____3__0_0_____9__79
                        by contradiction /* cyclic */
                      qed
                    next
                      case c_enc
                      by solve( !KU( ~n.3 ) @ #vk.3 )
                    qed
                  qed
                next
                  case Bob__merged_____3__0_0_____9__79_case_1
                  by solve( !KU( ~n.2 ) @ #vk.3 )
                next
                  case Bob__merged_____3__0_0_____9__79_case_2
                  by solve( !KU( ~n.2 ) @ #vk.3 )
                qed
              qed
            qed
          qed
        qed
      qed
    next
      case Alice__merged_____1_____9__131
      solve( !ACP__( <'rab__Bob', 'rab__rab'>, 'rab__udp', 'rab__recv'
             ) ▶₃ #j )
        case Init__system__ACP__0
        solve( !Const__( 'rab__priv_key_bob', priv_key_bob__34 ) ▶₄ #j )
          case Const__priv_key_bob
          solve( !Const__( 'rab__nonce_b', nb ) ▶₅ #j )
            case Const__nonce_b
            solve( !Const__( 'rab__nonce_b', nonce_b__35 ) ▶₆ #j )
              case Const__nonce_b
              solve( !Eq__( z, ~n.1 ) ▶₇ #j )
                case Equality_gen
                solve( !KU( ~n.1 ) @ #vk )
                  case Alice__merged_____15__0_1_____15__0_3__0_1__86
                  solve( splitEqs(1) )
                    case split_case_1
                    solve( !KU( enc(~n.1, ~n.3) ) @ #vk.1 )
                      case Alice__merged_____15__0_1_____15__0_3__0_1__86
                      by solve( Store( 'rab__udp', enc(<l__3__30, x>, ~n.3) ) ▶₁ #vr.1 )
                    next
                      case c_enc
                      by solve( !KU( ~n.3 ) @ #vk.3 )
                    qed
                  next
                    case split_case_2
                    solve( !KU( enc(~n.1, ~n.3) ) @ #vk.1 )
                      case Alice__merged_____15__0_1_____15__0_3__0_1__86
                      solve( Store( 'rab__udp', enc(x, ~n.3) ) ▶₁ #vr.1 )
                        case Alice__merged_____15__0_1_____15__0_3__0_1__86
                        solve( File__Alice( 'rab__rab', loc__0, n__0__20 ) ▶₁ #vr.10 )
                          case Alice__init_filesys_____0_____1__0
                          solve( State__Alice( <'rab_____15__0_1', 'rab__rab', %v__>,
                                               return__var__49, 'rab__',
                                               <l__0__49, l__1__49, l__2__49, l__3__49, l__4__49, l__5__49, 
                                                l__6__49>,
                                               'rab__'
                                 ) ▶₀ #vr.15 )
                            case Alice__merged_____11__1_0_____15__0_1__94_case_1
                            solve( !KU( pk(~n.3) ) @ #vk.2 )
                              case c_pk
                              by solve( !KU( ~n.3 ) @ #vk.4 )
                            qed
                          next
                            case Alice__merged_____11__1_0_____15__0_1__94_case_2
                            solve( !KU( pk(~n.3) ) @ #vk.2 )
                              case c_pk
                              by solve( !KU( ~n.3 ) @ #vk.4 )
                            qed
                          qed
                        next
                          case Alice__merged_____1_____9__131
                          by contradiction /* cyclic */
                        qed
                      qed
                    next
                      case c_enc
                      by solve( !KU( ~n.3 ) @ #vk.3 )
                    qed
                  next
                    case split_case_3
                    solve( !KU( enc(~n.1, ~n.3) ) @ #vk.1 )
                      case Alice__merged_____15__0_1_____15__0_3__0_1__86
                      solve( Store( 'rab__udp', l__4__30 ) ▶₁ #vr.1 )
                        case Alice__merged_____15__0_1_____15__0_3__0_1__86
                        solve( File__Alice( 'rab__rab', loc__0, n__0__20 ) ▶₁ #vr.10 )
                          case Alice__init_filesys_____0_____1__0
                          solve( State__Alice( <'rab_____15__0_1', 'rab__rab', %v__>,
                                               return__var__49, 'rab__',
                                               <l__0__49, l__1__49, l__2__49, l__3__49, l__4__49, l__5__49.1, 
                                                l__6__49>,
                                               'rab__'
                                 ) ▶₀ #vr.15 )
                            case Alice__merged_____11__1_0_____15__0_1__94_case_1
                            solve( !KU( pk(~n.3) ) @ #vk.2 )
                              case c_pk
                              by solve( !KU( ~n.3 ) @ #vk.4 )
                            qed
                          next
                            case Alice__merged_____11__1_0_____15__0_1__94_case_2
                            solve( !KU( pk(~n.3) ) @ #vk.2 )
                              case c_pk
                              by solve( !KU( ~n.3 ) @ #vk.4 )
                            qed
                          qed
                        next
                          case Alice__merged_____1_____9__131
                          by contradiction /* cyclic */
                        qed
                      next
                        case Bob__merged_____3__0_0_____9__79
                        by contradiction /* cyclic */
                      qed
                    next
                      case c_enc
                      by solve( !KU( ~n.3 ) @ #vk.3 )
                    qed
                  qed
                next
                  case Bob__merged_____3__0_0_____9__79_case_1
                  by solve( !KU( ~n.2 ) @ #vk.3 )
                next
                  case Bob__merged_____3__0_0_____9__79_case_2
                  by solve( !KU( ~n.2 ) @ #vk.3 )
                qed
              qed
            qed
          qed
        qed
      qed
    next
      case Alice__merged_____2__1_0_____9__122
      solve( !ACP__( <'rab__Bob', 'rab__rab'>, 'rab__udp', 'rab__recv'
             ) ▶₃ #j )
        case Init__system__ACP__0
        solve( !Const__( 'rab__priv_key_bob', priv_key_bob__34 ) ▶₄ #j )
          case Const__priv_key_bob
          solve( !Const__( 'rab__nonce_b', nb ) ▶₅ #j )
            case Const__nonce_b
            solve( !Const__( 'rab__nonce_b', nonce_b__35 ) ▶₆ #j )
              case Const__nonce_b
              solve( !Eq__( z, ~n.1 ) ▶₇ #j )
                case Equality_gen
                solve( !KU( ~n.1 ) @ #vk )
                  case Alice__merged_____15__0_1_____15__0_3__0_1__86
                  solve( splitEqs(1) )
                    case split_case_1
                    solve( !KU( enc(~n.1, ~n.3) ) @ #vk.1 )
                      case Alice__merged_____15__0_1_____15__0_3__0_1__86
                      by solve( Store( 'rab__udp', enc(<l__3__30, x>, ~n.3) ) ▶₁ #vr.1 )
                    next
                      case c_enc
                      by solve( !KU( ~n.3 ) @ #vk.4 )
                    qed
                  next
                    case split_case_2
                    solve( !KU( enc(~n.1, ~n.3) ) @ #vk.1 )
                      case Alice__merged_____15__0_1_____15__0_3__0_1__86
                      solve( Store( 'rab__udp', enc(x, ~n.3) ) ▶₁ #vr.1 )
                        case Alice__merged_____15__0_1_____15__0_3__0_1__86
                        solve( File__Alice( 'rab__rab', loc__0, n__0__11 ) ▶₁ #vr.10 )
                          case Alice__merged_____0_____2__1_0__133
                          solve( State__Alice( <'rab_____15__0_1', 'rab__rab', %v__>,
                                               return__var__49, 'rab__',
                                               <l__0__49, l__1__49, l__2__49, l__3__49, l__4__49, l__5__49, 
                                                l__6__49>,
                                               'rab__'
                                 ) ▶₀ #vr.15 )
                            case Alice__merged_____11__1_0_____15__0_1__94_case_1
                            solve( !KU( enc(<~n, l__0__49>, ~n.2) ) @ #vk.3 )
                              case Alice__merged_____2__1_0_____9__122
                              by solve( !KU( ~n.2 ) @ #vk.3 )
                            next
                              case c_enc
                              by solve( !KU( ~n.2 ) @ #vk.5 )
                            qed
                          next
                            case Alice__merged_____11__1_0_____15__0_1__94_case_2
                            solve( !KU( enc(<~n, l__0__49>, ~n.2) ) @ #vk.3 )
                              case Alice__merged_____2__1_0_____9__122
                              by solve( !KU( ~n.2 ) @ #vk.3 )
                            next
                              case c_enc
                              by solve( !KU( ~n.2 ) @ #vk.5 )
                            qed
                          qed
                        next
                          case Alice__merged_____2__1_0_____9__122
                          by contradiction /* cyclic */
                        qed
                      qed
                    next
                      case c_enc
                      by solve( !KU( ~n.3 ) @ #vk.4 )
                    qed
                  next
                    case split_case_3
                    solve( !KU( enc(~n.1, ~n.3) ) @ #vk.1 )
                      case Alice__merged_____15__0_1_____15__0_3__0_1__86
                      solve( Store( 'rab__udp', l__4__30 ) ▶₁ #vr.1 )
                        case Alice__merged_____15__0_1_____15__0_3__0_1__86
                        solve( File__Alice( 'rab__rab', loc__0, n__0__11 ) ▶₁ #vr.10 )
                          case Alice__merged_____0_____2__1_0__133
                          solve( State__Alice( <'rab_____15__0_1', 'rab__rab', %v__>,
                                               return__var__49, 'rab__',
                                               <l__0__49, l__1__49, l__2__49, l__3__49, l__4__49, l__5__49.1, 
                                                l__6__49>,
                                               'rab__'
                                 ) ▶₀ #vr.15 )
                            case Alice__merged_____11__1_0_____15__0_1__94_case_1
                            solve( !KU( enc(<~n, l__0__49>, ~n.2) ) @ #vk.3 )
                              case Alice__merged_____2__1_0_____9__122
                              by solve( !KU( ~n.2 ) @ #vk.3 )
                            next
                              case c_enc
                              by solve( !KU( ~n.2 ) @ #vk.5 )
                            qed
                          next
                            case Alice__merged_____11__1_0_____15__0_1__94_case_2
                            solve( !KU( enc(<~n, l__0__49>, ~n.2) ) @ #vk.3 )
                              case Alice__merged_____2__1_0_____9__122
                              by solve( !KU( ~n.2 ) @ #vk.3 )
                            next
                              case c_enc
                              by solve( !KU( ~n.2 ) @ #vk.5 )
                            qed
                          qed
                        next
                          case Alice__merged_____2__1_0_____9__122
                          by contradiction /* cyclic */
                        qed
                      next
                        case Bob__merged_____3__0_0_____9__79
                        by contradiction /* cyclic */
                      qed
                    next
                      case c_enc
                      by solve( !KU( ~n.3 ) @ #vk.4 )
                    qed
                  qed
                next
                  case Bob__merged_____3__0_0_____9__79_case_1
                  by solve( !KU( ~n.2 ) @ #vk.4 )
                next
                  case Bob__merged_____3__0_0_____9__79_case_2
                  by solve( !KU( ~n.2 ) @ #vk.4 )
                qed
              qed
            qed
          qed
        qed
      qed
    next
      case Bob__merged_____3__0_0_____9__79
      solve( !ACP__( <'rab__Bob', 'rab__rab'>, 'rab__udp', 'rab__recv'
             ) ▶₃ #j )
        case Init__system__ACP__0
        solve( !Const__( 'rab__priv_key_bob', priv_key_bob__34 ) ▶₄ #j )
          case Const__priv_key_bob
          solve( !Const__( 'rab__nonce_b', nb ) ▶₅ #j )
            case Const__nonce_b
            solve( !Const__( 'rab__nonce_b', nonce_b__35 ) ▶₆ #j )
              case Const__nonce_b
              solve( !Eq__( z, ~n.1 ) ▶₇ #j )
                case Equality_gen
                solve( !KU( ~n.1 ) @ #vk )
                  case Alice__merged_____15__0_1_____15__0_3__0_1__86
                  solve( splitEqs(1) )
                    case split_case_1
                    solve( !KU( enc(~n.1, ~n.3) ) @ #vk.1 )
                      case Alice__merged_____15__0_1_____15__0_3__0_1__86
                      solve( Store( 'rab__udp', enc(<l__3__30, x>, ~n.3) ) ▶₁ #vr.1 )
                        case Alice__merged_____1_____9__131
                        solve( State__Alice( <'rab_____15__0_1', 'rab__rab', %v__>,
                                             return__var__49, 'rab__',
                                             <l__0__49, l__1__49, l__2__49, l__3__49, l__4__49, l__5__49, 
                                              l__6__49>,
                                             'rab__'
                               ) ▶₀ #vr.11 )
                          case Alice__merged_____11__1_0_____15__0_1__94
                          by solve( !KU( ~n.3 ) @ #vk.2 )
                        qed
                      next
                        case Alice__merged_____2__1_0_____9__122
                        by solve( !KU( ~n.3 ) @ #vk.3 )
                      qed
                    next
                      case c_enc
                      by solve( !KU( ~n.3 ) @ #vk.3 )
                    qed
                  next
                    case split_case_2
                    solve( !KU( enc(~n.1, ~n.3) ) @ #vk.1 )
                      case Alice__merged_____15__0_1_____15__0_3__0_1__86
                      solve( Store( 'rab__udp', enc(x, ~n.3) ) ▶₁ #vr.1 )
                        case Alice__merged_____15__0_1_____15__0_3__0_1__86
                        solve( State__Alice( <'rab_____15__0_1', 'rab__rab', %v__>,
                                             return__var__49, 'rab__',
                                             <l__0__49, l__1__49, l__2__49, l__3__49, l__4__49, l__5__49, 
                                              l__6__49>,
                                             'rab__'
                               ) ▶₀ #vr.11 )
                          case Alice__merged_____11__0_0_____15__0_1__98_case_1
                          by solve( !KU( ~n.2 ) @ #vk.2 )
                        next
                          case Alice__merged_____11__0_0_____15__0_1__98_case_2
                          by solve( !KU( ~n.2 ) @ #vk.2 )
                        next
                          case Alice__merged_____11__1_0_____15__0_1__94_case_1
                          solve( !KU( enc(<~n, l__0__49>, ~n.2) ) @ #vk.3 )
                            case Alice__merged_____1_____9__131
                            by solve( !KU( ~n.2 ) @ #vk.3 )
                          next
                            case c_enc
                            by solve( !KU( ~n.2 ) @ #vk.5 )
                          qed
                        next
                          case Alice__merged_____11__1_0_____15__0_1__94_case_2
                          solve( !KU( enc(<~n, l__0__49>, ~n.2) ) @ #vk.3 )
                            case Alice__merged_____2__1_0_____9__122
                            by solve( !KU( ~n.2 ) @ #vk.3 )
                          next
                            case c_enc
                            by solve( !KU( ~n.2 ) @ #vk.5 )
                          qed
                        next
                          case Alice__merged_____11__1_0_____15__0_1__94_case_3
                          solve( !KU( enc(<~n, l__0__49>, ~n.2) ) @ #vk.3 )
                            case Alice__merged_____1_____9__131
                            by solve( !KU( ~n.2 ) @ #vk.3 )
                          next
                            case c_enc
                            by solve( !KU( ~n.2 ) @ #vk.5 )
                          qed
                        next
                          case Alice__merged_____11__1_0_____15__0_1__94_case_4
                          solve( !KU( enc(<~n, l__0__49>, ~n.2) ) @ #vk.3 )
                            case Alice__merged_____2__1_0_____9__122
                            by solve( !KU( ~n.2 ) @ #vk.3 )
                          next
                            case c_enc
                            by solve( !KU( ~n.2 ) @ #vk.5 )
                          qed
                        qed
                      next
                        case Alice__merged_____1_____9__131
                        by contradiction /* non-normal terms */
                      next
                        case Alice__merged_____2__1_0_____9__122
                        by contradiction /* non-normal terms */
                      qed
                    next
                      case c_enc
                      by solve( !KU( ~n.3 ) @ #vk.3 )
                    qed
                  next
                    case split_case_3
                    solve( !KU( enc(~n.1, ~n.3) ) @ #vk.1 )
                      case Alice__merged_____15__0_1_____15__0_3__0_1__86
                      solve( Store( 'rab__udp', l__4__30 ) ▶₁ #vr.1 )
                        case Alice__merged_____15__0_1_____15__0_3__0_1__86
                        solve( State__Alice( <'rab_____15__0_1', 'rab__rab', %v__>,
                                             return__var__49, 'rab__',
                                             <l__0__49, l__1__49, l__2__49, l__3__49, l__4__49, l__5__49.1, 
                                              l__6__49>,
                                             'rab__'
                               ) ▶₀ #vr.11 )
                          case Alice__merged_____11__0_0_____15__0_1__98_case_1
                          by solve( !KU( ~n.2 ) @ #vk.2 )
                        next
                          case Alice__merged_____11__0_0_____15__0_1__98_case_2
                          by solve( !KU( ~n.2 ) @ #vk.2 )
                        next
                          case Alice__merged_____11__1_0_____15__0_1__94_case_1
                          solve( !KU( enc(<~n, l__0__49>, ~n.2) ) @ #vk.3 )
                            case Alice__merged_____1_____9__131
                            by solve( !KU( ~n.2 ) @ #vk.3 )
                          next
                            case c_enc
                            by solve( !KU( ~n.2 ) @ #vk.5 )
                          qed
                        next
                          case Alice__merged_____11__1_0_____15__0_1__94_case_2
                          solve( !KU( enc(<~n, l__0__49>, ~n.2) ) @ #vk.3 )
                            case Alice__merged_____2__1_0_____9__122
                            by solve( !KU( ~n.2 ) @ #vk.3 )
                          next
                            case c_enc
                            by solve( !KU( ~n.2 ) @ #vk.5 )
                          qed
                        next
                          case Alice__merged_____11__1_0_____15__0_1__94_case_3
                          solve( !KU( enc(<~n, l__0__49>, ~n.2) ) @ #vk.3 )
                            case Alice__merged_____1_____9__131
                            by solve( !KU( ~n.2 ) @ #vk.3 )
                          next
                            case c_enc
                            by solve( !KU( ~n.2 ) @ #vk.5 )
                          qed
                        next
                          case Alice__merged_____11__1_0_____15__0_1__94_case_4
                          solve( !KU( enc(<~n, l__0__49>, ~n.2) ) @ #vk.3 )
                            case Alice__merged_____2__1_0_____9__122
                            by solve( !KU( ~n.2 ) @ #vk.3 )
                          next
                            case c_enc
                            by solve( !KU( ~n.2 ) @ #vk.5 )
                          qed
                        qed
                      next
                        case Alice__merged_____1_____9__131
                        solve( State__Alice( <'rab_____15__0_1', 'rab__rab', %v__>,
                                             return__var__49, 'rab__',
                                             <l__0__49, l__1__49, l__2__49, l__3__49, l__4__49, l__5__49, 
                                              l__6__49>,
                                             'rab__'
                               ) ▶₀ #vr.11 )
                          case Alice__merged_____11__1_0_____15__0_1__94
                          solve( !KU( enc(<~n, l__0__49>, ~n.2) ) @ #vk.3 )
                            case Alice__merged_____1_____9__131
                            by solve( !KU( ~n.2 ) @ #vk.3 )
                          next
                            case c_enc
                            by solve( !KU( ~n.2 ) @ #vk.5 )
                          qed
                        qed
                      next
                        case Alice__merged_____2__1_0_____9__122
                        solve( State__Alice( <'rab_____15__0_1', 'rab__rab', %v__>,
                                             return__var__49, 'rab__',
                                             <l__0__49, l__1__49, l__2__49, l__3__49, l__4__49, l__5__49, 
                                              l__6__49>,
                                             'rab__'
                               ) ▶₀ #vr.11 )
                          case Alice__merged_____11__1_0_____15__0_1__94
                          solve( !KU( enc(<~n, l__0__49>, ~n.2) ) @ #vk.3 )
                            case Alice__merged_____2__1_0_____9__122
                            by solve( !KU( ~n.2 ) @ #vk.3 )
                          next
                            case c_enc
                            by solve( !KU( ~n.2 ) @ #vk.5 )
                          qed
                        qed
                      qed
                    next
                      case c_enc
                      by solve( !KU( ~n.3 ) @ #vk.3 )
                    qed
                  qed
                next
                  case Bob__merged_____3__0_0_____9__79_case_1
                  by solve( !KU( ~n.2 ) @ #vk.3 )
                next
                  case Bob__merged_____3__0_0_____9__79_case_2
                  by solve( !KU( ~n.2 ) @ #vk.3 )
                qed
              qed
            qed
          qed
        qed
      qed
    qed
  next
    case Bob__merged_____9_____11__1_0__63_case_2
    solve( Store( 'rab__udp', n__0__30 ) ▶₁ #j )
      case Alice__merged_____15__0_1_____15__0_3__0_1__86
      solve( !ACP__( <'rab__Bob', 'rab__rab'>, 'rab__udp', 'rab__recv'
             ) ▶₃ #j )
        case Init__system__ACP__0
        solve( !Const__( 'rab__priv_key_bob', priv_key_bob__34 ) ▶₄ #j )
          case Const__priv_key_bob
          solve( !Const__( 'rab__nonce_b', nb ) ▶₅ #j )
            case Const__nonce_b
            solve( !Const__( 'rab__nonce_b', nonce_b__35 ) ▶₆ #j )
              case Const__nonce_b
              solve( !Eq__( z, ~n.1 ) ▶₇ #j )
                case Equality_gen
                solve( !KU( ~n.1 ) @ #vk )
                  case Alice__merged_____15__0_1_____15__0_3__0_1__86
                  solve( splitEqs(1) )
                    case split_case_1
                    solve( !KU( enc(~n.1, ~n.3) ) @ #vk.1 )
                      case Alice__merged_____15__0_1_____15__0_3__0_1__86
                      solve( !KU( enc(<l__3__30, x>, ~n.3) ) @ #vk.2 )
                        case Alice__merged_____1_____9__131
                        solve( Store( 'rab__udp', n__0__9 ) ▶₁ #vr.1 )
                          case Alice__merged_____15__0_1_____15__0_3__0_1__86
                          solve( State__Alice( <'rab_____15__0_1', 'rab__rab', %v__>,
                                               return__var__49, 'rab__',
                                               <l__0__49, l__1__49, l__2__49, l__3__49, l__4__49, l__5__49, 
                                                l__6__49>,
                                               'rab__'
                                 ) ▶₀ #vr.10 )
                            case Alice__merged_____11__1_0_____15__0_1__94_case_1
                            solve( !KU( enc(<~n, l__0__49>, ~n.2) ) @ #vk.4 )
                              case c_enc
                              by solve( !KU( ~n.2 ) @ #vk.6 )
                            qed
                          next
                            case Alice__merged_____11__1_0_____15__0_1__94_case_2
                            solve( !KU( enc(<~n, l__0__49>, ~n.2) ) @ #vk.4 )
                              case c_enc
                              by solve( !KU( ~n.2 ) @ #vk.6 )
                            qed
                          next
                            case Alice__merged_____11__1_0_____15__0_1__94_case_3
                            solve( !KU( enc(<~n, l__0__49>, ~n.2) ) @ #vk.4 )
                              case c_enc
                              by solve( !KU( ~n.2 ) @ #vk.6 )
                            qed
                          qed
                        next
                          case Alice__merged_____1_____9__131
                          solve( State__Alice( <'rab_____15__0_1', 'rab__rab', %v__>,
                                               return__var__49, 'rab__',
                                               <l__0__49, l__1__49, l__2__49, l__3__49, l__4__49, l__5__49, 
                                                l__6__49>,
                                               'rab__'
                                 ) ▶₀ #vr.10 )
                            case Alice__merged_____11__1_0_____15__0_1__94_case_1
                            solve( !KU( enc(<~n, l__0__49>, ~n.2) ) @ #vk.4 )
                              case c_enc
                              by solve( !KU( ~n.2 ) @ #vk.6 )
                            qed
                          next
                            case Alice__merged_____11__1_0_____15__0_1__94_case_2
                            solve( !KU( enc(<~n, l__0__49>, ~n.2) ) @ #vk.4 )
                              case c_enc
                              by solve( !KU( ~n.2 ) @ #vk.6 )
                            qed
                          qed
                        next
                          case Bob__merged_____3__1_0_____9__75
                          by contradiction /* cyclic */
                        qed
                      next
                        case Alice__merged_____2__1_0_____9__122
                        by solve( !KU( ~n.3 ) @ #vk.4 )
                      next
                        case c_enc
                        by solve( !KU( ~n.3 ) @ #vk.5 )
                      qed
                    next
                      case c_enc
                      by solve( !KU( ~n.3 ) @ #vk.4 )
                    qed
                  next
                    case split_case_2
                    solve( !KU( enc(~n.1, ~n.3) ) @ #vk.1 )
                      case Alice__merged_____15__0_1_____15__0_3__0_1__86
                      solve( !KU( enc(x, ~n.3) ) @ #vk.2 )
                        case Alice__merged_____15__0_1_____15__0_3__0_1__86
                        solve( Store( 'rab__udp', n__0__9 ) ▶₁ #vr.1 )
                          case Alice__merged_____15__0_1_____15__0_3__0_1__86
                          solve( State__Alice( <'rab_____15__0_1', 'rab__rab', %v__>,
                                               return__var__49, 'rab__',
                                               <l__0__49, l__1__49, l__2__49, l__3__49, l__4__49, l__5__49, 
                                                l__6__49>,
                                               'rab__'
                                 ) ▶₀ #vr.10 )
                            case Alice__merged_____11__0_0_____15__0_1__98_case_1
                            solve( State__Alice( <'rab_____15__0_1', 'rab__rab', %v__>,
                                                 return__var__49, 'rab__',
                                                 <l__0__49, l__1__49, l__2__49, l__3__49, l__4__49, l__5__49, 
                                                  l__6__49>,
                                                 'rab__'
                                   ) ▶₀ #vr.13 )
                              case Alice__merged_____11__0_0_____15__0_1__98
                              by solve( !KU( ~n.2 ) @ #vk.2 )
                            qed
                          next
                            case Alice__merged_____11__0_0_____15__0_1__98_case_2
                            by solve( !KU( ~n.2 ) @ #vk.3 )
                          next
                            case Alice__merged_____11__1_0_____15__0_1__94_case_1
                            solve( !KU( enc(<~n, l__0__49>, ~n.2) ) @ #vk.3 )
                              case Alice__merged_____1_____9__131
                              solve( State__Alice( <'rab_____15__0_1', 'rab__rab', %v__>,
                                                   return__var__49, 'rab__',
                                                   <l__0__49, l__1__49, l__2__49, l__3__49, l__4__49, 
                                                    l__5__49, l__6__49>,
                                                   'rab__'
                                     ) ▶₀ #vr.13 )
                                case Alice__merged_____11__1_0_____15__0_1__94
                                by solve( !KU( ~n.2 ) @ #vk.3 )
                              qed
                            next
                              case c_enc
                              by solve( !KU( ~n.2 ) @ #vk.5 )
                            qed
                          next
                            case Alice__merged_____11__1_0_____15__0_1__94_case_2
                            solve( !KU( enc(<~n, l__0__49>, ~n.2) ) @ #vk.3 )
                              case Alice__merged_____2__1_0_____9__122
                              by solve( !KU( ~n.2 ) @ #vk.4 )
                            next
                              case c_enc
                              by solve( !KU( ~n.2 ) @ #vk.6 )
                            qed
                          next
                            case Alice__merged_____11__1_0_____15__0_1__94_case_3
                            solve( !KU( enc(<~n, l__0__49>, ~n.2) ) @ #vk.3 )
                              case Alice__merged_____1_____9__131
                              solve( State__Alice( <'rab_____15__0_1', 'rab__rab', %v__>,
                                                   return__var__49, 'rab__',
                                                   <l__0__49, l__1__49, l__2__49, l__3__49, l__4__49, 
                                                    l__5__49, l__6__49>,
                                                   'rab__'
                                     ) ▶₀ #vr.13 )
                                case Alice__merged_____11__1_0_____15__0_1__94
                                by solve( !KU( ~n.2 ) @ #vk.3 )
                              qed
                            next
                              case c_enc
                              by solve( !KU( ~n.2 ) @ #vk.5 )
                            qed
                          next
                            case Alice__merged_____11__1_0_____15__0_1__94_case_4
                            solve( !KU( enc(<~n, l__0__49>, ~n.2) ) @ #vk.3 )
                              case Alice__merged_____2__1_0_____9__122
                              by solve( !KU( ~n.2 ) @ #vk.4 )
                            next
                              case c_enc
                              by solve( !KU( ~n.2 ) @ #vk.6 )
                            qed
                          next
                            case Alice__merged_____11__1_0_____15__0_1__94_case_5
                            solve( !KU( enc(<~n, l__0__49>, ~n.2) ) @ #vk.3 )
                              case Alice__merged_____1_____9__131
                              solve( State__Alice( <'rab_____15__0_1', 'rab__rab', %v__>,
                                                   return__var__49, 'rab__',
                                                   <l__0__49, l__1__49, l__2__49, l__3__49, l__4__49, 
                                                    l__5__49, l__6__49>,
                                                   'rab__'
                                     ) ▶₀ #vr.13 )
                                case Alice__merged_____11__1_0_____15__0_1__94
                                by solve( !KU( ~n.2 ) @ #vk.3 )
                              qed
                            next
                              case c_enc
                              by solve( !KU( ~n.2 ) @ #vk.5 )
                            qed
                          next
                            case Alice__merged_____11__1_0_____15__0_1__94_case_6
                            solve( !KU( enc(<~n, l__0__49>, ~n.2) ) @ #vk.3 )
                              case Alice__merged_____2__1_0_____9__122
                              by solve( !KU( ~n.2 ) @ #vk.4 )
                            next
                              case c_enc
                              by solve( !KU( ~n.2 ) @ #vk.6 )
                            qed
                          qed
                        next
                          case Alice__merged_____1_____9__131
                          solve( State__Alice( <'rab_____15__0_1', 'rab__rab', %v__>,
                                               return__var__49, 'rab__',
                                               <l__0__49, l__1__49, l__2__49, l__3__49, l__4__49, l__5__49, 
                                                l__6__49>,
                                               'rab__'
                                 ) ▶₀ #vr.10 )
                            case Alice__merged_____11__1_0_____15__0_1__94_case_1
                            solve( !KU( enc(<~n, l__0__49>, ~n.2) ) @ #vk.3 )
                              case Alice__merged_____1_____9__131
                              solve( State__Alice( <'rab_____15__0_1', 'rab__rab', %v__>,
                                                   return__var__49, 'rab__',
                                                   <l__0__49, l__1__49, l__2__49, l__3__49, l__4__49, 
                                                    l__5__49, l__6__49>,
                                                   'rab__'
                                     ) ▶₀ #vr.13 )
                                case Alice__merged_____11__1_0_____15__0_1__94
                                by solve( !KU( ~n.2 ) @ #vk.3 )
                              qed
                            next
                              case c_enc
                              by solve( !KU( ~n.2 ) @ #vk.5 )
                            qed
                          next
                            case Alice__merged_____11__1_0_____15__0_1__94_case_2
                            solve( !KU( enc(<~n, l__0__49>, ~n.2) ) @ #vk.3 )
                              case Alice__merged_____1_____9__131
                              solve( State__Alice( <'rab_____15__0_1', 'rab__rab', %v__>,
                                                   return__var__49, 'rab__',
                                                   <l__0__49, l__1__49, l__2__49, l__3__49, l__4__49, 
                                                    l__5__49, l__6__49>,
                                                   'rab__'
                                     ) ▶₀ #vr.13 )
                                case Alice__merged_____11__1_0_____15__0_1__94
                                by solve( !KU( ~n.2 ) @ #vk.3 )
                              qed
                            next
                              case c_enc
                              by solve( !KU( ~n.2 ) @ #vk.5 )
                            qed
                          qed
                        next
                          case Alice__merged_____2__1_0_____9__122
                          solve( State__Alice( <'rab_____15__0_1', 'rab__rab', %v__>,
                                               return__var__49, 'rab__',
                                               <l__0__49, l__1__49, l__2__49, l__3__49, l__4__49, l__5__49, 
                                                l__6__49>,
                                               'rab__'
                                 ) ▶₀ #vr.10 )
                            case Alice__merged_____11__1_0_____15__0_1__94_case_1
                            solve( !KU( enc(<~n, l__0__49>, ~n.2) ) @ #vk.4 )
                              case Alice__merged_____2__1_0_____9__122
                              by solve( !KU( ~n.2 ) @ #vk.4 )
                            next
                              case c_enc
                              by solve( !KU( ~n.2 ) @ #vk.6 )
                            qed
                          next
                            case Alice__merged_____11__1_0_____15__0_1__94_case_2
                            solve( !KU( enc(<~n, l__0__49>, ~n.2) ) @ #vk.4 )
                              case Alice__merged_____2__1_0_____9__122
                              by solve( !KU( ~n.2 ) @ #vk.4 )
                            next
                              case c_enc
                              by solve( !KU( ~n.2 ) @ #vk.6 )
                            qed
                          qed
                        next
                          case Bob__merged_____3__1_0_____9__75
                          by contradiction /* cyclic */
                        qed
                      next
                        case Alice__merged_____1_____9__131
                        by contradiction /* non-normal terms */
                      next
                        case Alice__merged_____2__1_0_____9__122
                        by contradiction /* non-normal terms */
                      next
                        case c_enc
                        by solve( !KU( ~n.3 ) @ #vk.5 )
                      qed
                    next
                      case c_enc
                      by solve( !KU( ~n.3 ) @ #vk.4 )
                    qed
                  next
                    case split_case_3
                    solve( !KU( enc(~n.1, ~n.3) ) @ #vk.1 )
                      case Alice__merged_____15__0_1_____15__0_3__0_1__86
                      solve( Store( 'rab__udp', n__0__9 ) ▶₁ #vr.1 )
                        case Alice__merged_____15__0_1_____15__0_3__0_1__86
                        solve( State__Alice( <'rab_____15__0_1', 'rab__rab', %v__>,
                                             return__var__49, 'rab__',
                                             <l__0__49, l__1__49, l__2__49, l__3__49, l__4__49, l__5__49, 
                                              l__6__49>,
                                             'rab__'
                               ) ▶₀ #vr.10 )
                          case Alice__merged_____11__0_0_____15__0_1__98_case_1
                          solve( State__Alice( <'rab_____15__0_1', 'rab__rab', %v__>,
                                               return__var__49, 'rab__',
                                               <l__0__49, l__1__49, l__2__49, l__3__49, l__4__49, l__5__49, 
                                                l__6__49>,
                                               'rab__'
                                 ) ▶₀ #vr.13 )
                            case Alice__merged_____11__0_0_____15__0_1__98
                            by solve( !KU( ~n.2 ) @ #vk.3 )
                          qed
                        next
                          case Alice__merged_____11__0_0_____15__0_1__98_case_2
                          by solve( !KU( ~n.2 ) @ #vk.4 )
                        next
                          case Alice__merged_____11__1_0_____15__0_1__94_case_1
                          solve( !KU( enc(<~n, l__0__49>, ~n.2) ) @ #vk.4 )
                            case Alice__merged_____1_____9__131
                            solve( State__Alice( <'rab_____15__0_1', 'rab__rab', %v__>,
                                                 return__var__49, 'rab__',
                                                 <l__0__49, l__1__49, l__2__49, l__3__49, l__4__49, l__5__49, 
                                                  l__6__49>,
                                                 'rab__'
                                   ) ▶₀ #vr.13 )
                              case Alice__merged_____11__1_0_____15__0_1__94
                              by solve( !KU( ~n.2 ) @ #vk.4 )
                            qed
                          next
                            case c_enc
                            by solve( !KU( ~n.2 ) @ #vk.6 )
                          qed
                        next
                          case Alice__merged_____11__1_0_____15__0_1__94_case_2
                          solve( !KU( enc(<~n, l__0__49>, ~n.2) ) @ #vk.4 )
                            case Alice__merged_____2__1_0_____9__122
                            by solve( !KU( ~n.2 ) @ #vk.5 )
                          next
                            case c_enc
                            by solve( !KU( ~n.2 ) @ #vk.7 )
                          qed
                        next
                          case Alice__merged_____11__1_0_____15__0_1__94_case_3
                          solve( !KU( enc(<~n, l__0__49>, ~n.2) ) @ #vk.4 )
                            case Alice__merged_____1_____9__131
                            solve( State__Alice( <'rab_____15__0_1', 'rab__rab', %v__>,
                                                 return__var__49, 'rab__',
                                                 <l__0__49, l__1__49, l__2__49, l__3__49, l__4__49, l__5__49, 
                                                  l__6__49>,
                                                 'rab__'
                                   ) ▶₀ #vr.13 )
                              case Alice__merged_____11__1_0_____15__0_1__94
                              by solve( !KU( ~n.2 ) @ #vk.4 )
                            qed
                          next
                            case c_enc
                            by solve( !KU( ~n.2 ) @ #vk.6 )
                          qed
                        next
                          case Alice__merged_____11__1_0_____15__0_1__94_case_4
                          solve( !KU( enc(<~n, l__0__49>, ~n.2) ) @ #vk.4 )
                            case Alice__merged_____2__1_0_____9__122
                            by solve( !KU( ~n.2 ) @ #vk.5 )
                          next
                            case c_enc
                            by solve( !KU( ~n.2 ) @ #vk.7 )
                          qed
                        next
                          case Alice__merged_____11__1_0_____15__0_1__94_case_5
                          solve( !KU( enc(<~n, l__0__49>, ~n.2) ) @ #vk.4 )
                            case Alice__merged_____1_____9__131
                            solve( State__Alice( <'rab_____15__0_1', 'rab__rab', %v__>,
                                                 return__var__49, 'rab__',
                                                 <l__0__49, l__1__49, l__2__49, l__3__49, l__4__49, l__5__49, 
                                                  l__6__49>,
                                                 'rab__'
                                   ) ▶₀ #vr.13 )
                              case Alice__merged_____11__1_0_____15__0_1__94
                              by solve( !KU( ~n.2 ) @ #vk.4 )
                            qed
                          next
                            case c_enc
                            by solve( !KU( ~n.2 ) @ #vk.6 )
                          qed
                        next
                          case Alice__merged_____11__1_0_____15__0_1__94_case_6
                          solve( !KU( enc(<~n, l__0__49>, ~n.2) ) @ #vk.4 )
                            case Alice__merged_____2__1_0_____9__122
                            by solve( !KU( ~n.2 ) @ #vk.5 )
                          next
                            case c_enc
                            by solve( !KU( ~n.2 ) @ #vk.7 )
                          qed
                        qed
                      next
                        case Alice__merged_____1_____9__131
                        solve( State__Alice( <'rab_____15__0_1', 'rab__rab', %v__>,
                                             return__var__49, 'rab__',
                                             <l__0__49, l__1__49, l__2__49, l__3__49, l__4__49, l__5__49, 
                                              l__6__49>,
                                             'rab__'
                               ) ▶₀ #vr.10 )
                          case Alice__merged_____11__1_0_____15__0_1__94_case_1
                          solve( !KU( enc(<~n, l__0__49>, ~n.2) ) @ #vk.4 )
                            case Alice__merged_____1_____9__131
                            solve( State__Alice( <'rab_____15__0_1', 'rab__rab', %v__>,
                                                 return__var__49, 'rab__',
                                                 <l__0__49, l__1__49, l__2__49, l__3__49, l__4__49, l__5__49, 
                                                  l__6__49>,
                                                 'rab__'
                                   ) ▶₀ #vr.13 )
                              case Alice__merged_____11__1_0_____15__0_1__94
                              by solve( !KU( ~n.2 ) @ #vk.4 )
                            qed
                          next
                            case c_enc
                            by solve( !KU( ~n.2 ) @ #vk.6 )
                          qed
                        next
                          case Alice__merged_____11__1_0_____15__0_1__94_case_2
                          solve( !KU( enc(<~n, l__0__49>, ~n.2) ) @ #vk.4 )
                            case Alice__merged_____1_____9__131
                            solve( State__Alice( <'rab_____15__0_1', 'rab__rab', %v__>,
                                                 return__var__49, 'rab__',
                                                 <l__0__49, l__1__49, l__2__49, l__3__49, l__4__49, l__5__49, 
                                                  l__6__49>,
                                                 'rab__'
                                   ) ▶₀ #vr.13 )
                              case Alice__merged_____11__1_0_____15__0_1__94
                              by solve( !KU( ~n.2 ) @ #vk.4 )
                            qed
                          next
                            case c_enc
                            by solve( !KU( ~n.2 ) @ #vk.6 )
                          qed
                        qed
                      next
                        case Alice__merged_____2__1_0_____9__122
                        solve( State__Alice( <'rab_____15__0_1', 'rab__rab', %v__>,
                                             return__var__49, 'rab__',
                                             <l__0__49, l__1__49, l__2__49, l__3__49, l__4__49, l__5__49, 
                                              l__6__49>,
                                             'rab__'
                               ) ▶₀ #vr.10 )
                          case Alice__merged_____11__1_0_____15__0_1__94_case_1
                          solve( !KU( enc(<~n, l__0__49>, ~n.2) ) @ #vk.5 )
                            case Alice__merged_____2__1_0_____9__122
                            by solve( !KU( ~n.2 ) @ #vk.5 )
                          next
                            case c_enc
                            by solve( !KU( ~n.2 ) @ #vk.7 )
                          qed
                        next
                          case Alice__merged_____11__1_0_____15__0_1__94_case_2
                          solve( !KU( enc(<~n, l__0__49>, ~n.2) ) @ #vk.5 )
                            case Alice__merged_____2__1_0_____9__122
                            by solve( !KU( ~n.2 ) @ #vk.5 )
                          next
                            case c_enc
                            by solve( !KU( ~n.2 ) @ #vk.7 )
                          qed
                        qed
                      next
                        case Bob__merged_____3__1_0_____9__75
                        by contradiction /* cyclic */
                      qed
                    next
                      case c_enc
                      by solve( !KU( ~n.3 ) @ #vk.4 )
                    qed
                  qed
                next
                  case Bob__merged_____3__1_0_____9__75_case_1
                  by solve( !KU( ~n.2 ) @ #vk.4 )
                next
                  case Bob__merged_____3__1_0_____9__75_case_2
                  by solve( !KU( ~n.2 ) @ #vk.4 )
                qed
              qed
            qed
          qed
        qed
      qed
    next
      case Alice__merged_____1_____9__131
      solve( !ACP__( <'rab__Bob', 'rab__rab'>, 'rab__udp', 'rab__recv'
             ) ▶₃ #j )
        case Init__system__ACP__0
        solve( !Const__( 'rab__priv_key_bob', priv_key_bob__34 ) ▶₄ #j )
          case Const__priv_key_bob
          solve( !Const__( 'rab__nonce_b', nb ) ▶₅ #j )
            case Const__nonce_b
            solve( !Const__( 'rab__nonce_b', nonce_b__35 ) ▶₆ #j )
              case Const__nonce_b
              solve( !Eq__( z, ~n.1 ) ▶₇ #j )
                case Equality_gen
                solve( !KU( ~n.1 ) @ #vk )
                  case Alice__merged_____15__0_1_____15__0_3__0_1__86
                  solve( splitEqs(1) )
                    case split_case_1
                    solve( !KU( enc(~n.1, ~n.3) ) @ #vk.1 )
                      case Alice__merged_____15__0_1_____15__0_3__0_1__86
                      solve( !KU( enc(<l__3__30, x>, ~n.3) ) @ #vk.2 )
                        case Alice__merged_____1_____9__131
                        solve( Store( 'rab__udp', n__0__9 ) ▶₁ #vr.1 )
                          case Alice__merged_____15__0_1_____15__0_3__0_1__86
                          solve( File__Alice( 'rab__rab', loc__0, ~n.3 ) ▶₁ #vr.10 )
                            case Alice__merged_____1_____9__131
                            by contradiction /* cyclic */
                          qed
                        next
                          case Bob__merged_____3__1_0_____9__75
                          by contradiction /* cyclic */
                        qed
                      next
                        case c_enc
                        by solve( !KU( ~n.3 ) @ #vk.5 )
                      qed
                    next
                      case c_enc
                      by solve( !KU( ~n.3 ) @ #vk.4 )
                    qed
                  next
                    case split_case_2
                    solve( !KU( enc(~n.1, ~n.3) ) @ #vk.1 )
                      case Alice__merged_____15__0_1_____15__0_3__0_1__86
                      solve( !KU( enc(x, ~n.3) ) @ #vk.2 )
                        case Alice__merged_____15__0_1_____15__0_3__0_1__86
                        solve( Store( 'rab__udp', n__0__9 ) ▶₁ #vr.1 )
                          case Alice__merged_____15__0_1_____15__0_3__0_1__86
                          solve( File__Alice( 'rab__rab', loc__0, n__0__20 ) ▶₁ #vr.10 )
                            case Alice__init_filesys_____0_____1__0
                            solve( State__Alice( <'rab_____15__0_1', 'rab__rab', %v__>,
                                                 return__var__49, 'rab__',
                                                 <l__0__49, l__1__49, l__2__49, l__3__49, l__4__49, l__5__49, 
                                                  l__6__49>,
                                                 'rab__'
                                   ) ▶₀ #vr.15 )
                              case Alice__merged_____11__1_0_____15__0_1__94_case_1
                              solve( !KU( pk(~n.3) ) @ #vk.2 )
                                case c_pk
                                by solve( !KU( ~n.3 ) @ #vk.4 )
                              qed
                            next
                              case Alice__merged_____11__1_0_____15__0_1__94_case_2
                              solve( !KU( pk(~n.3) ) @ #vk.2 )
                                case c_pk
                                by solve( !KU( ~n.3 ) @ #vk.4 )
                              qed
                            qed
                          next
                            case Alice__merged_____1_____9__131
                            by contradiction /* cyclic */
                          qed
                        next
                          case Bob__merged_____3__1_0_____9__75
                          by contradiction /* cyclic */
                        qed
                      next
                        case Alice__merged_____1_____9__131
                        by contradiction /* non-normal terms */
                      next
                        case c_enc
                        by solve( !KU( ~n.3 ) @ #vk.5 )
                      qed
                    next
                      case c_enc
                      by solve( !KU( ~n.3 ) @ #vk.4 )
                    qed
                  next
                    case split_case_3
                    solve( !KU( enc(~n.1, ~n.3) ) @ #vk.1 )
                      case Alice__merged_____15__0_1_____15__0_3__0_1__86
                      solve( Store( 'rab__udp', n__0__9 ) ▶₁ #vr.1 )
                        case Alice__merged_____15__0_1_____15__0_3__0_1__86
                        solve( File__Alice( 'rab__rab', loc__0, n__0__20 ) ▶₁ #vr.10 )
                          case Alice__init_filesys_____0_____1__0
                          solve( State__Alice( <'rab_____15__0_1', 'rab__rab', %v__>,
                                               return__var__49, 'rab__',
                                               <l__0__49, l__1__49, l__2__49, l__3__49, l__4__49, l__5__49, 
                                                l__6__49>,
                                               'rab__'
                                 ) ▶₀ #vr.15 )
                            case Alice__merged_____11__1_0_____15__0_1__94_case_1
                            solve( !KU( pk(~n.3) ) @ #vk.3 )
                              case c_pk
                              by solve( !KU( ~n.3 ) @ #vk.5 )
                            qed
                          next
                            case Alice__merged_____11__1_0_____15__0_1__94_case_2
                            solve( !KU( pk(~n.3) ) @ #vk.3 )
                              case c_pk
                              by solve( !KU( ~n.3 ) @ #vk.5 )
                            qed
                          qed
                        next
                          case Alice__merged_____1_____9__131
                          by contradiction /* cyclic */
                        qed
                      next
                        case Bob__merged_____3__1_0_____9__75
                        by contradiction /* cyclic */
                      qed
                    next
                      case c_enc
                      by solve( !KU( ~n.3 ) @ #vk.4 )
                    qed
                  qed
                next
                  case Bob__merged_____3__1_0_____9__75_case_1
                  by solve( !KU( ~n.2 ) @ #vk.4 )
                next
                  case Bob__merged_____3__1_0_____9__75_case_2
                  by solve( !KU( ~n.2 ) @ #vk.4 )
                qed
              qed
            qed
          qed
        qed
      qed
    next
      case Alice__merged_____2__1_0_____9__122
      solve( !ACP__( <'rab__Bob', 'rab__rab'>, 'rab__udp', 'rab__recv'
             ) ▶₃ #j )
        case Init__system__ACP__0
        solve( !Const__( 'rab__priv_key_bob', priv_key_bob__34 ) ▶₄ #j )
          case Const__priv_key_bob
          solve( !Const__( 'rab__nonce_b', nb ) ▶₅ #j )
            case Const__nonce_b
            solve( !Const__( 'rab__nonce_b', nonce_b__35 ) ▶₆ #j )
              case Const__nonce_b
              solve( !Eq__( z, ~n.1 ) ▶₇ #j )
                case Equality_gen
                solve( !KU( ~n.1 ) @ #vk )
                  case Alice__merged_____15__0_1_____15__0_3__0_1__86
                  solve( splitEqs(1) )
                    case split_case_1
                    solve( !KU( enc(~n.1, ~n.3) ) @ #vk.1 )
                      case Alice__merged_____15__0_1_____15__0_3__0_1__86
                      solve( !KU( enc(<l__3__30, x>, ~n.3) ) @ #vk.2 )
                        case Alice__merged_____2__1_0_____9__122
                        by solve( !KU( ~n.3 ) @ #vk.3 )
                      next
                        case c_enc
                        by solve( !KU( ~n.3 ) @ #vk.6 )
                      qed
                    next
                      case c_enc
                      by solve( !KU( ~n.3 ) @ #vk.5 )
                    qed
                  next
                    case split_case_2
                    solve( !KU( enc(~n.1, ~n.3) ) @ #vk.1 )
                      case Alice__merged_____15__0_1_____15__0_3__0_1__86
                      solve( !KU( enc(x, ~n.3) ) @ #vk.2 )
                        case Alice__merged_____15__0_1_____15__0_3__0_1__86
                        solve( Store( 'rab__udp', n__0__9 ) ▶₁ #vr.1 )
                          case Alice__merged_____15__0_1_____15__0_3__0_1__86
                          solve( File__Alice( 'rab__rab', loc__0, n__0__11 ) ▶₁ #vr.10 )
                            case Alice__merged_____0_____2__1_0__133
                            solve( State__Alice( <'rab_____15__0_1', 'rab__rab', %v__>,
                                                 return__var__49, 'rab__',
                                                 <l__0__49, l__1__49, l__2__49, l__3__49, l__4__49, l__5__49, 
                                                  l__6__49>,
                                                 'rab__'
                                   ) ▶₀ #vr.15 )
                              case Alice__merged_____11__1_0_____15__0_1__94_case_1
                              solve( !KU( enc(<~n, l__0__49>, ~n.2) ) @ #vk.3 )
                                case Alice__merged_____2__1_0_____9__122
                                by solve( !KU( ~n.2 ) @ #vk.3 )
                              next
                                case c_enc
                                by solve( !KU( ~n.2 ) @ #vk.5 )
                              qed
                            next
                              case Alice__merged_____11__1_0_____15__0_1__94_case_2
                              solve( !KU( enc(<~n, l__0__49>, ~n.2) ) @ #vk.3 )
                                case Alice__merged_____2__1_0_____9__122
                                by solve( !KU( ~n.2 ) @ #vk.3 )
                              next
                                case c_enc
                                by solve( !KU( ~n.2 ) @ #vk.5 )
                              qed
                            qed
                          next
                            case Alice__merged_____2__1_0_____9__122
                            by contradiction /* cyclic */
                          qed
                        next
                          case Bob__merged_____3__1_0_____9__75
                          by contradiction /* cyclic */
                        qed
                      next
                        case Alice__merged_____2__1_0_____9__122
                        by contradiction /* non-normal terms */
                      next
                        case c_enc
                        by solve( !KU( ~n.3 ) @ #vk.6 )
                      qed
                    next
                      case c_enc
                      by solve( !KU( ~n.3 ) @ #vk.5 )
                    qed
                  next
                    case split_case_3
                    solve( !KU( enc(~n.1, ~n.3) ) @ #vk.1 )
                      case Alice__merged_____15__0_1_____15__0_3__0_1__86
                      solve( Store( 'rab__udp', n__0__9 ) ▶₁ #vr.1 )
                        case Alice__merged_____15__0_1_____15__0_3__0_1__86
                        solve( File__Alice( 'rab__rab', loc__0, n__0__11 ) ▶₁ #vr.10 )
                          case Alice__merged_____0_____2__1_0__133
                          solve( State__Alice( <'rab_____15__0_1', 'rab__rab', %v__>,
                                               return__var__49, 'rab__',
                                               <l__0__49, l__1__49, l__2__49, l__3__49, l__4__49, l__5__49, 
                                                l__6__49>,
                                               'rab__'
                                 ) ▶₀ #vr.15 )
                            case Alice__merged_____11__1_0_____15__0_1__94_case_1
                            solve( !KU( enc(<~n, l__0__49>, ~n.2) ) @ #vk.4 )
                              case Alice__merged_____2__1_0_____9__122
                              by solve( !KU( ~n.2 ) @ #vk.4 )
                            next
                              case c_enc
                              by solve( !KU( ~n.2 ) @ #vk.6 )
                            qed
                          next
                            case Alice__merged_____11__1_0_____15__0_1__94_case_2
                            solve( !KU( enc(<~n, l__0__49>, ~n.2) ) @ #vk.4 )
                              case Alice__merged_____2__1_0_____9__122
                              by solve( !KU( ~n.2 ) @ #vk.4 )
                            next
                              case c_enc
                              by solve( !KU( ~n.2 ) @ #vk.6 )
                            qed
                          qed
                        next
                          case Alice__merged_____2__1_0_____9__122
                          by contradiction /* cyclic */
                        qed
                      next
                        case Bob__merged_____3__1_0_____9__75
                        by contradiction /* cyclic */
                      qed
                    next
                      case c_enc
                      by solve( !KU( ~n.3 ) @ #vk.5 )
                    qed
                  qed
                next
                  case Bob__merged_____3__1_0_____9__75_case_1
                  by solve( !KU( ~n.2 ) @ #vk.5 )
                next
                  case Bob__merged_____3__1_0_____9__75_case_2
                  by solve( !KU( ~n.2 ) @ #vk.5 )
                qed
              qed
            qed
          qed
        qed
      qed
    next
      case Bob__merged_____3__1_0_____9__75
      solve( !ACP__( <'rab__Bob', 'rab__rab'>, 'rab__udp', 'rab__recv'
             ) ▶₃ #j )
        case Init__system__ACP__0
        solve( !Const__( 'rab__priv_key_bob', priv_key_bob__34 ) ▶₄ #j )
          case Const__priv_key_bob
          solve( !Const__( 'rab__nonce_b', nb ) ▶₅ #j )
            case Const__nonce_b
            solve( !Const__( 'rab__nonce_b', nonce_b__35 ) ▶₆ #j )
              case Const__nonce_b
              solve( !Eq__( z, ~n.1 ) ▶₇ #j )
                case Equality_gen
                solve( !KU( ~n.1 ) @ #vk )
                  case Alice__merged_____15__0_1_____15__0_3__0_1__86
                  solve( splitEqs(1) )
                    case split_case_1
                    solve( !KU( enc(~n.1, ~n.3) ) @ #vk.1 )
                      case Alice__merged_____15__0_1_____15__0_3__0_1__86
                      solve( !KU( enc(<l__3__30, x>, ~n.3) ) @ #vk.2 )
                        case Alice__merged_____1_____9__131
                        solve( Store( 'rab__udp', n__0__9 ) ▶₁ #vr.1 )
                          case Alice__merged_____15__0_1_____15__0_3__0_1__86
                          solve( State__Alice( <'rab_____15__0_1', 'rab__rab', %v__>,
                                               return__var__49, 'rab__',
                                               <l__0__49, l__1__49, l__2__49, l__3__49, l__4__49, l__5__49, 
                                                l__6__49>,
                                               'rab__'
                                 ) ▶₀ #vr.11 )
                            case Alice__merged_____11__1_0_____15__0_1__94_case_1
                            by solve( !KU( ~n.3 ) @ #vk.3 )
                          next
                            case Alice__merged_____11__1_0_____15__0_1__94_case_2
                            by solve( !KU( ~n.3 ) @ #vk.3 )
                          qed
                        next
                          case Alice__merged_____1_____9__131
                          solve( State__Alice( <'rab_____15__0_1', 'rab__rab', %v__>,
                                               return__var__49, 'rab__',
                                               <l__0__49, l__1__49, l__2__49, l__3__49, l__4__49, l__5__49, 
                                                l__6__49>,
                                               'rab__'
                                 ) ▶₀ #vr.11 )
                            case Alice__merged_____11__1_0_____15__0_1__94
                            by solve( !KU( ~n.3 ) @ #vk.3 )
                          qed
                        qed
                      next
                        case Alice__merged_____2__1_0_____9__122
                        by solve( !KU( ~n.3 ) @ #vk.4 )
                      next
                        case c_enc
                        by solve( !KU( ~n.3 ) @ #vk.5 )
                      qed
                    next
                      case c_enc
                      by solve( !KU( ~n.3 ) @ #vk.4 )
                    qed
                  next
                    case split_case_2
                    solve( !KU( enc(~n.1, ~n.3) ) @ #vk.1 )
                      case Alice__merged_____15__0_1_____15__0_3__0_1__86
                      solve( !KU( enc(x, ~n.3) ) @ #vk.2 )
                        case Alice__merged_____15__0_1_____15__0_3__0_1__86
                        solve( Store( 'rab__udp', n__0__9 ) ▶₁ #vr.1 )
                          case Alice__merged_____15__0_1_____15__0_3__0_1__86
                          solve( State__Alice( <'rab_____15__0_1', 'rab__rab', %v__>,
                                               return__var__49, 'rab__',
                                               <l__0__49, l__1__49, l__2__49, l__3__49, l__4__49, l__5__49, 
                                                l__6__49>,
                                               'rab__'
                                 ) ▶₀ #vr.11 )
                            case Alice__merged_____11__0_0_____15__0_1__98_case_1
                            by solve( !KU( ~n.2 ) @ #vk.2 )
                          next
                            case Alice__merged_____11__0_0_____15__0_1__98_case_2
                            by solve( !KU( ~n.2 ) @ #vk.2 )
                          next
                            case Alice__merged_____11__1_0_____15__0_1__94_case_1
                            solve( !KU( enc(<~n, l__0__49>, ~n.2) ) @ #vk.3 )
                              case Alice__merged_____1_____9__131
                              by solve( !KU( ~n.2 ) @ #vk.3 )
                            next
                              case c_enc
                              by solve( !KU( ~n.2 ) @ #vk.5 )
                            qed
                          next
                            case Alice__merged_____11__1_0_____15__0_1__94_case_2
                            solve( !KU( enc(<~n, l__0__49>, ~n.2) ) @ #vk.3 )
                              case Alice__merged_____2__1_0_____9__122
                              by solve( !KU( ~n.2 ) @ #vk.3 )
                            next
                              case c_enc
                              by solve( !KU( ~n.2 ) @ #vk.5 )
                            qed
                          next
                            case Alice__merged_____11__1_0_____15__0_1__94_case_3
                            solve( !KU( enc(<~n, l__0__49>, ~n.2) ) @ #vk.3 )
                              case Alice__merged_____1_____9__131
                              by solve( !KU( ~n.2 ) @ #vk.3 )
                            next
                              case c_enc
                              by solve( !KU( ~n.2 ) @ #vk.5 )
                            qed
                          next
                            case Alice__merged_____11__1_0_____15__0_1__94_case_4
                            solve( !KU( enc(<~n, l__0__49>, ~n.2) ) @ #vk.3 )
                              case Alice__merged_____2__1_0_____9__122
                              by solve( !KU( ~n.2 ) @ #vk.3 )
                            next
                              case c_enc
                              by solve( !KU( ~n.2 ) @ #vk.5 )
                            qed
                          qed
                        next
                          case Alice__merged_____1_____9__131
                          solve( State__Alice( <'rab_____15__0_1', 'rab__rab', %v__>,
                                               return__var__49, 'rab__',
                                               <l__0__49, l__1__49, l__2__49, l__3__49, l__4__49, l__5__49, 
                                                l__6__49>,
                                               'rab__'
                                 ) ▶₀ #vr.11 )
                            case Alice__merged_____11__1_0_____15__0_1__94
                            solve( !KU( enc(<~n, l__0__49>, ~n.2) ) @ #vk.3 )
                              case Alice__merged_____1_____9__131
                              by solve( !KU( ~n.2 ) @ #vk.3 )
                            next
                              case c_enc
                              by solve( !KU( ~n.2 ) @ #vk.5 )
                            qed
                          qed
                        next
                          case Alice__merged_____2__1_0_____9__122
                          solve( State__Alice( <'rab_____15__0_1', 'rab__rab', %v__>,
                                               return__var__49, 'rab__',
                                               <l__0__49, l__1__49, l__2__49, l__3__49, l__4__49, l__5__49, 
                                                l__6__49>,
                                               'rab__'
                                 ) ▶₀ #vr.11 )
                            case Alice__merged_____11__1_0_____15__0_1__94
                            solve( !KU( enc(<~n, l__0__49>, ~n.2) ) @ #vk.3 )
                              case Alice__merged_____2__1_0_____9__122
                              by solve( !KU( ~n.2 ) @ #vk.3 )
                            next
                              case c_enc
                              by solve( !KU( ~n.2 ) @ #vk.5 )
                            qed
                          qed
                        qed
                      next
                        case Alice__merged_____1_____9__131
                        by contradiction /* non-normal terms */
                      next
                        case Alice__merged_____2__1_0_____9__122
                        by contradiction /* non-normal terms */
                      next
                        case c_enc
                        by solve( !KU( ~n.3 ) @ #vk.5 )
                      qed
                    next
                      case c_enc
                      by solve( !KU( ~n.3 ) @ #vk.4 )
                    qed
                  next
                    case split_case_3
                    solve( !KU( enc(~n.1, ~n.3) ) @ #vk.1 )
                      case Alice__merged_____15__0_1_____15__0_3__0_1__86
                      solve( Store( 'rab__udp', n__0__9 ) ▶₁ #vr.1 )
                        case Alice__merged_____15__0_1_____15__0_3__0_1__86
                        solve( State__Alice( <'rab_____15__0_1', 'rab__rab', %v__>,
                                             return__var__49, 'rab__',
                                             <l__0__49, l__1__49, l__2__49, l__3__49, l__4__49, l__5__49, 
                                              l__6__49>,
                                             'rab__'
                               ) ▶₀ #vr.11 )
                          case Alice__merged_____11__0_0_____15__0_1__98_case_1
                          by solve( !KU( ~n.2 ) @ #vk.3 )
                        next
                          case Alice__merged_____11__0_0_____15__0_1__98_case_2
                          by solve( !KU( ~n.2 ) @ #vk.3 )
                        next
                          case Alice__merged_____11__1_0_____15__0_1__94_case_1
                          solve( !KU( enc(<~n, l__0__49>, ~n.2) ) @ #vk.4 )
                            case Alice__merged_____1_____9__131
                            by solve( !KU( ~n.2 ) @ #vk.4 )
                          next
                            case c_enc
                            by solve( !KU( ~n.2 ) @ #vk.6 )
                          qed
                        next
                          case Alice__merged_____11__1_0_____15__0_1__94_case_2
                          solve( !KU( enc(<~n, l__0__49>, ~n.2) ) @ #vk.4 )
                            case Alice__merged_____2__1_0_____9__122
                            by solve( !KU( ~n.2 ) @ #vk.4 )
                          next
                            case c_enc
                            by solve( !KU( ~n.2 ) @ #vk.6 )
                          qed
                        next
                          case Alice__merged_____11__1_0_____15__0_1__94_case_3
                          solve( !KU( enc(<~n, l__0__49>, ~n.2) ) @ #vk.4 )
                            case Alice__merged_____1_____9__131
                            by solve( !KU( ~n.2 ) @ #vk.4 )
                          next
                            case c_enc
                            by solve( !KU( ~n.2 ) @ #vk.6 )
                          qed
                        next
                          case Alice__merged_____11__1_0_____15__0_1__94_case_4
                          solve( !KU( enc(<~n, l__0__49>, ~n.2) ) @ #vk.4 )
                            case Alice__merged_____2__1_0_____9__122
                            by solve( !KU( ~n.2 ) @ #vk.4 )
                          next
                            case c_enc
                            by solve( !KU( ~n.2 ) @ #vk.6 )
                          qed
                        qed
                      next
                        case Alice__merged_____1_____9__131
                        solve( State__Alice( <'rab_____15__0_1', 'rab__rab', %v__>,
                                             return__var__49, 'rab__',
                                             <l__0__49, l__1__49, l__2__49, l__3__49, l__4__49, l__5__49, 
                                              l__6__49>,
                                             'rab__'
                               ) ▶₀ #vr.11 )
                          case Alice__merged_____11__1_0_____15__0_1__94
                          solve( !KU( enc(<~n, l__0__49>, ~n.2) ) @ #vk.4 )
                            case Alice__merged_____1_____9__131
                            by solve( !KU( ~n.2 ) @ #vk.4 )
                          next
                            case c_enc
                            by solve( !KU( ~n.2 ) @ #vk.6 )
                          qed
                        qed
                      next
                        case Alice__merged_____2__1_0_____9__122
                        solve( State__Alice( <'rab_____15__0_1', 'rab__rab', %v__>,
                                             return__var__49, 'rab__',
                                             <l__0__49, l__1__49, l__2__49, l__3__49, l__4__49, l__5__49, 
                                              l__6__49>,
                                             'rab__'
                               ) ▶₀ #vr.11 )
                          case Alice__merged_____11__1_0_____15__0_1__94
                          solve( !KU( enc(<~n, l__0__49>, ~n.2) ) @ #vk.4 )
                            case Alice__merged_____2__1_0_____9__122
                            by solve( !KU( ~n.2 ) @ #vk.4 )
                          next
                            case c_enc
                            by solve( !KU( ~n.2 ) @ #vk.6 )
                          qed
                        qed
                      qed
                    next
                      case c_enc
                      by solve( !KU( ~n.3 ) @ #vk.4 )
                    qed
                  qed
                next
                  case Bob__merged_____3__1_0_____9__75_case_1
                  by solve( !KU( ~n.2 ) @ #vk.4 )
                next
                  case Bob__merged_____3__1_0_____9__75_case_2
                  by solve( !KU( ~n.2 ) @ #vk.4 )
                qed
              qed
            qed
          qed
        qed
      qed
    qed
  qed
qed

lemma NonceSecrecyA:
  all-traces
  "∀ na #i. (SecretNonceAlice( na ) @ #i) ⇒ (¬(∃ #l. K( na ) @ #l))"
/*
guarded formula characterizing all counter-examples:
"∃ na #i. (SecretNonceAlice( na ) @ #i) ∧ ∃ #l. (K( na ) @ #l)"
*/
simplify
solve( SecretNonceAlice( na ) @ #i )
  case Alice__merged_____11__0_0_____15__0_1__98
  solve( State__Alice( <'rab_____11__0_0', param, %v__>, return__var__35,
                       'rab__', <l__0__35, l__1__35, l__2__35, l__3__35, l__4__35>, 'rab__'
         ) ▶₀ #i )
    case Alice__merged_____9_____11__0_0__101_case_1
    solve( Store( 'rab__udp', n__0__35 ) ▶₁ #i )
      case Alice__merged_____15__0_1_____15__0_3__0_1__86
      solve( !ACP__( <'rab__Alice', 'rab__rab'>, 'rab__udp', 'rab__recv'
             ) ▶₂ #i )
        case Init__system__ACP__2
        solve( !Const__( 'rab__priv_key_alice', priv_key_alice__44 ) ▶₃ #i )
          case Const__priv_key_alice
          solve( !Const__( 'rab__nonce_a', na ) ▶₄ #i )
            case Const__nonce_a
            solve( !Const__( 'rab__nonce_a', nonce_a__47 ) ▶₅ #i )
              case Const__nonce_a
              by solve( !Eq__( fst(z), ~n ) ▶₆ #i )
            qed
          qed
        qed
      qed
    next
      case Alice__merged_____1_____9__131
      solve( !ACP__( <'rab__Alice', 'rab__rab'>, 'rab__udp', 'rab__recv'
             ) ▶₂ #i )
        case Init__system__ACP__2
        solve( !Const__( 'rab__priv_key_alice', priv_key_alice__44 ) ▶₃ #i )
          case Const__priv_key_alice
          solve( !Const__( 'rab__nonce_a', na ) ▶₄ #i )
            case Const__nonce_a
            solve( !Const__( 'rab__nonce_a', nonce_a__47 ) ▶₅ #i )
              case Const__nonce_a
              solve( !Eq__( z, ~n ) ▶₆ #i )
                case Equality_gen
                solve( !KU( ~n ) @ #vk )
                  case Alice__merged_____1_____9__131_case_1
                  by solve( !KU( ~l__3__35 ) @ #vk.1 )
                next
                  case Alice__merged_____1_____9__131_case_2
                  by solve( !KU( ~l__3__35 ) @ #vk.1 )
                next
                  case Bob__merged_____3__0_0_____9__79_case_1
                  by solve( !KU( ~l__3__35 ) @ #vk.2 )
                next
                  case Bob__merged_____3__0_0_____9__79_case_2
                  by solve( !KU( ~l__3__35 ) @ #vk.2 )
                next
                  case Bob__merged_____3__1_0_____9__75_case_1
                  by solve( !KU( ~l__3__35 ) @ #vk.3 )
                next
                  case Bob__merged_____3__1_0_____9__75_case_2
                  by solve( !KU( ~l__3__35 ) @ #vk.3 )
                qed
              qed
            qed
          qed
        qed
      qed
    next
      case Bob__merged_____3__0_0_____9__79
      solve( !ACP__( <'rab__Alice', 'rab__rab'>, 'rab__udp', 'rab__recv'
             ) ▶₂ #i )
        case Init__system__ACP__2
        solve( !Const__( 'rab__priv_key_alice', priv_key_alice__44 ) ▶₃ #i )
          case Const__priv_key_alice
          solve( !Const__( 'rab__nonce_a', na ) ▶₄ #i )
            case Const__nonce_a
            solve( !Const__( 'rab__nonce_a', nonce_a__47 ) ▶₅ #i )
              case Const__nonce_a
              by solve( !Eq__( fst(dec(enc(<~n, ~n.2>, pk(~n.3)), ~n.3)), ~n ) ▶₆ #i )
            qed
          qed
        qed
      qed
    next
      case Bob__merged_____3__1_0_____9__75
      solve( !ACP__( <'rab__Alice', 'rab__rab'>, 'rab__udp', 'rab__recv'
             ) ▶₂ #i )
        case Init__system__ACP__2
        solve( !Const__( 'rab__priv_key_alice', priv_key_alice__44 ) ▶₃ #i )
          case Const__priv_key_alice
          solve( !Const__( 'rab__nonce_a', na ) ▶₄ #i )
            case Const__nonce_a
            solve( !Const__( 'rab__nonce_a', nonce_a__47 ) ▶₅ #i )
              case Const__nonce_a
              by solve( !Eq__( fst(dec(enc(<~n, ~n.2>, pk(~n.3)), ~n.3)), ~n ) ▶₆ #i )
            qed
          qed
        qed
      qed
    qed
  next
    case Alice__merged_____9_____11__0_0__101_case_2
    solve( Store( 'rab__udp', n__0__35 ) ▶₁ #i )
      case Alice__merged_____15__0_1_____15__0_3__0_1__86
      solve( !ACP__( <'rab__Alice', 'rab__rab'>, 'rab__udp', 'rab__recv'
             ) ▶₂ #i )
        case Init__system__ACP__2
        solve( !Const__( 'rab__priv_key_alice', priv_key_alice__44 ) ▶₃ #i )
          case Const__priv_key_alice
          solve( !Const__( 'rab__nonce_a', na ) ▶₄ #i )
            case Const__nonce_a
            solve( !Const__( 'rab__nonce_a', nonce_a__47 ) ▶₅ #i )
              case Const__nonce_a
              by solve( !Eq__( fst(z), ~n ) ▶₆ #i )
            qed
          qed
        qed
      qed
    next
      case Alice__merged_____2__1_0_____9__122
      solve( !ACP__( <'rab__Alice', 'rab__rab'>, 'rab__udp', 'rab__recv'
             ) ▶₂ #i )
        case Init__system__ACP__2
        solve( !Const__( 'rab__priv_key_alice', priv_key_alice__44 ) ▶₃ #i )
          case Const__priv_key_alice
          solve( !Const__( 'rab__nonce_a', na ) ▶₄ #i )
            case Const__nonce_a
            solve( !Const__( 'rab__nonce_a', nonce_a__47 ) ▶₅ #i )
              case Const__nonce_a
              solve( !Eq__( z, ~n ) ▶₆ #i )
                case Equality_gen
                solve( !KU( ~n ) @ #vk )
                  case Alice__merged_____2__1_0_____9__122_case_1
                  by solve( !KU( ~l__3__35 ) @ #vk.1 )
                next
                  case Alice__merged_____2__1_0_____9__122_case_2
                  by solve( !KU( ~l__3__35 ) @ #vk.1 )
                next
                  case Bob__merged_____3__0_0_____9__79_case_1
                  by solve( !KU( ~l__3__35 ) @ #vk.2 )
                next
                  case Bob__merged_____3__0_0_____9__79_case_2
                  by solve( !KU( ~l__3__35 ) @ #vk.2 )
                next
                  case Bob__merged_____3__1_0_____9__75_case_1
                  by solve( !KU( ~l__3__35 ) @ #vk.2 )
                next
                  case Bob__merged_____3__1_0_____9__75_case_2
                  by solve( !KU( ~l__3__35 ) @ #vk.2 )
                qed
              qed
            qed
          qed
        qed
      qed
    next
      case Bob__merged_____3__0_0_____9__79
      solve( !ACP__( <'rab__Alice', 'rab__rab'>, 'rab__udp', 'rab__recv'
             ) ▶₂ #i )
        case Init__system__ACP__2
        solve( !Const__( 'rab__priv_key_alice', priv_key_alice__44 ) ▶₃ #i )
          case Const__priv_key_alice
          solve( !Const__( 'rab__nonce_a', na ) ▶₄ #i )
            case Const__nonce_a
            solve( !Const__( 'rab__nonce_a', nonce_a__47 ) ▶₅ #i )
              case Const__nonce_a
              by solve( !Eq__( fst(dec(enc(<~n, ~n.2>, pk(~n.3)), ~n.3)), ~n ) ▶₆ #i )
            qed
          qed
        qed
      qed
    next
      case Bob__merged_____3__1_0_____9__75
      solve( !ACP__( <'rab__Alice', 'rab__rab'>, 'rab__udp', 'rab__recv'
             ) ▶₂ #i )
        case Init__system__ACP__2
        solve( !Const__( 'rab__priv_key_alice', priv_key_alice__44 ) ▶₃ #i )
          case Const__priv_key_alice
          solve( !Const__( 'rab__nonce_a', na ) ▶₄ #i )
            case Const__nonce_a
            solve( !Const__( 'rab__nonce_a', nonce_a__47 ) ▶₅ #i )
              case Const__nonce_a
              by solve( !Eq__( fst(dec(enc(<~n, ~n.2>, pk(~n.3)), ~n.3)), ~n ) ▶₆ #i )
            qed
          qed
        qed
      qed
    qed
  qed
next
  case Alice__merged_____11__1_0_____15__0_1__94
  solve( State__Alice( <'rab_____11__1_0', param, %v__>, return__var__40,
                       'rab__', <l__0__40, l__1__40, l__2__40, l__3__40, l__4__40>, 'rab__'
         ) ▶₀ #i )
    case Alice__merged_____9_____11__1_0__102_case_1
    solve( Store( 'rab__udp', n__0__40 ) ▶₁ #i )
      case Alice__merged_____15__0_1_____15__0_3__0_1__86
      solve( !ACP__( <'rab__Alice', 'rab__rab'>, 'rab__udp', 'rab__recv'
             ) ▶₃ #i )
        case Init__system__ACP__2
        solve( !Const__( 'rab__priv_key_alice', priv_key_alice__44 ) ▶₄ #i )
          case Const__priv_key_alice
          solve( !Const__( 'rab__nonce_a', na ) ▶₅ #i )
            case Const__nonce_a
            solve( !Const__( 'rab__nonce_a', nonce_a__47 ) ▶₆ #i )
              case Const__nonce_a
              solve( !Eq__( z, ~n ) ▶₇ #i )
                case Equality_gen
                solve( !KU( ~n ) @ #vk )
                  case Alice__merged_____1_____9__131_case_1
                  solve( !KU( enc(<~n, z>, ~n.3) ) @ #vk.1 )
                    case Alice__merged_____1_____9__131
                    by solve( !KU( ~n.1 ) @ #vk.2 )
                  next
                    case c_enc
                    by solve( !KU( ~n.3 ) @ #vk.4 )
                  qed
                next
                  case Alice__merged_____1_____9__131_case_2
                  solve( !KU( enc(<~n, z>, ~n.3) ) @ #vk.1 )
                    case Alice__merged_____1_____9__131
                    by solve( !KU( ~n.1 ) @ #vk.2 )
                  next
                    case c_enc
                    by solve( !KU( ~n.3 ) @ #vk.4 )
                  qed
                next
                  case Bob__merged_____3__0_0_____9__79_case_1
                  by solve( !KU( ~n.3 ) @ #vk.3 )
                next
                  case Bob__merged_____3__0_0_____9__79_case_2
                  by solve( !KU( ~n.3 ) @ #vk.3 )
                next
                  case Bob__merged_____3__1_0_____9__75_case_1
                  by solve( !KU( ~n.3 ) @ #vk.4 )
                next
                  case Bob__merged_____3__1_0_____9__75_case_2
                  by solve( !KU( ~n.3 ) @ #vk.4 )
                qed
              qed
            qed
          qed
        qed
      qed
    next
      case Alice__merged_____1_____9__131
      solve( !ACP__( <'rab__Alice', 'rab__rab'>, 'rab__udp', 'rab__recv'
             ) ▶₃ #i )
        case Init__system__ACP__2
        solve( !Const__( 'rab__priv_key_alice', priv_key_alice__44 ) ▶₄ #i )
          case Const__priv_key_alice
          solve( !Const__( 'rab__nonce_a', na ) ▶₅ #i )
            case Const__nonce_a
            solve( !Const__( 'rab__nonce_a', nonce_a__47 ) ▶₆ #i )
              case Const__nonce_a
              solve( !Eq__( z, ~n ) ▶₇ #i )
                case Equality_gen
                solve( !KU( ~n ) @ #vk )
                  case Alice__merged_____1_____9__131_case_1
                  solve( !KU( enc(<~n, z>, ~n.2) ) @ #vk.1 )
                    case Alice__merged_____1_____9__131
                    by solve( !KU( ~n.1 ) @ #vk.2 )
                  next
                    case c_enc
                    by solve( !KU( ~n.2 ) @ #vk.4 )
                  qed
                next
                  case Alice__merged_____1_____9__131_case_2
                  solve( !KU( enc(<~n, z>, ~n.2) ) @ #vk.1 )
                    case Alice__merged_____1_____9__131
                    by solve( !KU( ~n.1 ) @ #vk.2 )
                  next
                    case c_enc
                    by solve( !KU( ~n.2 ) @ #vk.4 )
                  qed
                next
                  case Bob__merged_____3__0_0_____9__79_case_1
                  by solve( !KU( ~n.2 ) @ #vk.3 )
                next
                  case Bob__merged_____3__0_0_____9__79_case_2
                  by solve( !KU( ~n.2 ) @ #vk.3 )
                next
                  case Bob__merged_____3__1_0_____9__75_case_1
                  by solve( !KU( ~n.2 ) @ #vk.4 )
                next
                  case Bob__merged_____3__1_0_____9__75_case_2
                  by solve( !KU( ~n.2 ) @ #vk.4 )
                qed
              qed
            qed
          qed
        qed
      qed
    next
      case Bob__merged_____3__0_0_____9__79
      solve( !ACP__( <'rab__Alice', 'rab__rab'>, 'rab__udp', 'rab__recv'
             ) ▶₃ #i )
        case Init__system__ACP__2
        solve( !Const__( 'rab__priv_key_alice', priv_key_alice__44 ) ▶₄ #i )
          case Const__priv_key_alice
          solve( !Const__( 'rab__nonce_a', na ) ▶₅ #i )
            case Const__nonce_a
            solve( !Const__( 'rab__nonce_a', nonce_a__47 ) ▶₆ #i )
              case Const__nonce_a
              solve( !Eq__( z, ~n ) ▶₇ #i )
                case Equality_gen
                solve( !KU( ~n ) @ #vk )
                  case Alice__merged_____1_____9__131_case_1
                  solve( splitEqs(1) )
                    case split_case_1
                    solve( !KU( enc(<~n, z>, ~n.3) ) @ #vk.1 )
                      case Alice__merged_____1_____9__131
                      by solve( !KU( ~n.1 ) @ #vk.2 )
                    next
                      case c_enc
                      by solve( !KU( ~n.3 ) @ #vk.4 )
                    qed
                  next
                    case split_case_2
                    solve( !KU( enc(<~n, z>, ~n.3) ) @ #vk.1 )
                      case Alice__merged_____1_____9__131
                      by solve( !KU( ~n.1 ) @ #vk.2 )
                    next
                      case c_enc
                      by solve( !KU( ~n.3 ) @ #vk.4 )
                    qed
                  next
                    case split_case_3
                    solve( !KU( enc(<~n, z>, ~n.3) ) @ #vk.1 )
                      case Alice__merged_____1_____9__131
                      by solve( !KU( ~n.1 ) @ #vk.2 )
                    next
                      case c_enc
                      by solve( !KU( ~n.3 ) @ #vk.4 )
                    qed
                  qed
                next
                  case Alice__merged_____1_____9__131_case_2
                  solve( splitEqs(1) )
                    case split_case_1
                    solve( !KU( enc(<~n, z>, ~n.3) ) @ #vk.1 )
                      case Alice__merged_____1_____9__131
                      by solve( !KU( ~n.1 ) @ #vk.2 )
                    next
                      case c_enc
                      by solve( !KU( ~n.3 ) @ #vk.4 )
                    qed
                  next
                    case split_case_2
                    solve( !KU( enc(<~n, z>, ~n.3) ) @ #vk.1 )
                      case Alice__merged_____1_____9__131
                      by solve( !KU( ~n.1 ) @ #vk.2 )
                    next
                      case c_enc
                      by solve( !KU( ~n.3 ) @ #vk.4 )
                    qed
                  next
                    case split_case_3
                    solve( !KU( enc(<~n, z>, ~n.3) ) @ #vk.1 )
                      case Alice__merged_____1_____9__131
                      by solve( !KU( ~n.1 ) @ #vk.2 )
                    next
                      case c_enc
                      by solve( !KU( ~n.3 ) @ #vk.4 )
                    qed
                  qed
                next
                  case Bob__merged_____3__0_0_____9__79_case_1
                  by solve( !KU( ~n.3 ) @ #vk.3 )
                next
                  case Bob__merged_____3__0_0_____9__79_case_2
                  by solve( !KU( ~n.3 ) @ #vk.3 )
                qed
              qed
            qed
          qed
        qed
      qed
    next
      case Bob__merged_____3__1_0_____9__75
      solve( !ACP__( <'rab__Alice', 'rab__rab'>, 'rab__udp', 'rab__recv'
             ) ▶₃ #i )
        case Init__system__ACP__2
        solve( !Const__( 'rab__priv_key_alice', priv_key_alice__44 ) ▶₄ #i )
          case Const__priv_key_alice
          solve( !Const__( 'rab__nonce_a', na ) ▶₅ #i )
            case Const__nonce_a
            solve( !Const__( 'rab__nonce_a', nonce_a__47 ) ▶₆ #i )
              case Const__nonce_a
              solve( !Eq__( z, ~n ) ▶₇ #i )
                case Equality_gen
                solve( !KU( ~n ) @ #vk )
                  case Alice__merged_____1_____9__131_case_1
                  solve( splitEqs(1) )
                    case split_case_1
                    solve( !KU( enc(<~n, z>, ~n.3) ) @ #vk.1 )
                      case Alice__merged_____1_____9__131
                      by solve( !KU( ~n.1 ) @ #vk.3 )
                    next
                      case c_enc
                      by solve( !KU( ~n.3 ) @ #vk.5 )
                    qed
                  next
                    case split_case_2
                    solve( !KU( enc(<~n, z>, ~n.3) ) @ #vk.1 )
                      case Alice__merged_____1_____9__131
                      by solve( !KU( ~n.1 ) @ #vk.3 )
                    next
                      case c_enc
                      by solve( !KU( ~n.3 ) @ #vk.5 )
                    qed
                  next
                    case split_case_3
                    solve( !KU( enc(<~n, z>, ~n.3) ) @ #vk.1 )
                      case Alice__merged_____1_____9__131
                      by solve( !KU( ~n.1 ) @ #vk.3 )
                    next
                      case c_enc
                      by solve( !KU( ~n.3 ) @ #vk.5 )
                    qed
                  qed
                next
                  case Alice__merged_____1_____9__131_case_2
                  solve( splitEqs(1) )
                    case split_case_1
                    solve( !KU( enc(<~n, z>, ~n.3) ) @ #vk.1 )
                      case Alice__merged_____1_____9__131
                      by solve( !KU( ~n.1 ) @ #vk.3 )
                    next
                      case c_enc
                      by solve( !KU( ~n.3 ) @ #vk.5 )
                    qed
                  next
                    case split_case_2
                    solve( !KU( enc(<~n, z>, ~n.3) ) @ #vk.1 )
                      case Alice__merged_____1_____9__131
                      by solve( !KU( ~n.1 ) @ #vk.3 )
                    next
                      case c_enc
                      by solve( !KU( ~n.3 ) @ #vk.5 )
                    qed
                  next
                    case split_case_3
                    solve( !KU( enc(<~n, z>, ~n.3) ) @ #vk.1 )
                      case Alice__merged_____1_____9__131
                      by solve( !KU( ~n.1 ) @ #vk.3 )
                    next
                      case c_enc
                      by solve( !KU( ~n.3 ) @ #vk.5 )
                    qed
                  qed
                next
                  case Bob__merged_____3__1_0_____9__75_case_1
                  by solve( !KU( ~n.3 ) @ #vk.4 )
                next
                  case Bob__merged_____3__1_0_____9__75_case_2
                  by solve( !KU( ~n.3 ) @ #vk.4 )
                qed
              qed
            qed
          qed
        qed
      qed
    qed
  next
    case Alice__merged_____9_____11__1_0__102_case_2
    solve( Store( 'rab__udp', n__0__40 ) ▶₁ #i )
      case Alice__merged_____15__0_1_____15__0_3__0_1__86
      solve( !ACP__( <'rab__Alice', 'rab__rab'>, 'rab__udp', 'rab__recv'
             ) ▶₃ #i )
        case Init__system__ACP__2
        solve( !Const__( 'rab__priv_key_alice', priv_key_alice__44 ) ▶₄ #i )
          case Const__priv_key_alice
          solve( !Const__( 'rab__nonce_a', na ) ▶₅ #i )
            case Const__nonce_a
            solve( !Const__( 'rab__nonce_a', nonce_a__47 ) ▶₆ #i )
              case Const__nonce_a
              solve( !Eq__( z, ~n ) ▶₇ #i )
                case Equality_gen
                solve( !KU( ~n ) @ #vk )
                  case Alice__merged_____2__1_0_____9__122_case_1
                  solve( !KU( enc(<~n, z>, ~n.3) ) @ #vk.1 )
                    case Alice__merged_____2__1_0_____9__122
                    by solve( !KU( ~n.1 ) @ #vk.2 )
                  next
                    case c_enc
                    by solve( !KU( ~n.3 ) @ #vk.4 )
                  qed
                next
                  case Alice__merged_____2__1_0_____9__122_case_2
                  solve( !KU( enc(<~n, z>, ~n.3) ) @ #vk.1 )
                    case Alice__merged_____2__1_0_____9__122
                    by solve( !KU( ~n.1 ) @ #vk.2 )
                  next
                    case c_enc
                    by solve( !KU( ~n.3 ) @ #vk.4 )
                  qed
                next
                  case Bob__merged_____3__0_0_____9__79_case_1
                  by solve( !KU( ~n.3 ) @ #vk.4 )
                next
                  case Bob__merged_____3__0_0_____9__79_case_2
                  by solve( !KU( ~n.3 ) @ #vk.4 )
                next
                  case Bob__merged_____3__1_0_____9__75_case_1
                  by solve( !KU( ~n.3 ) @ #vk.5 )
                next
                  case Bob__merged_____3__1_0_____9__75_case_2
                  by solve( !KU( ~n.3 ) @ #vk.5 )
                qed
              qed
            qed
          qed
        qed
      qed
    next
      case Alice__merged_____2__1_0_____9__122
      solve( !ACP__( <'rab__Alice', 'rab__rab'>, 'rab__udp', 'rab__recv'
             ) ▶₃ #i )
        case Init__system__ACP__2
        solve( !Const__( 'rab__priv_key_alice', priv_key_alice__44 ) ▶₄ #i )
          case Const__priv_key_alice
          solve( !Const__( 'rab__nonce_a', na ) ▶₅ #i )
            case Const__nonce_a
            solve( !Const__( 'rab__nonce_a', nonce_a__47 ) ▶₆ #i )
              case Const__nonce_a
              solve( !Eq__( z, ~n ) ▶₇ #i )
                case Equality_gen
                solve( !KU( ~n ) @ #vk )
                  case Alice__merged_____2__1_0_____9__122_case_1
                  solve( !KU( enc(<~n, z>, ~n.2) ) @ #vk.1 )
                    case Alice__merged_____2__1_0_____9__122
                    by solve( !KU( ~n.1 ) @ #vk.2 )
                  next
                    case c_enc
                    by solve( !KU( ~n.2 ) @ #vk.4 )
                  qed
                next
                  case Alice__merged_____2__1_0_____9__122_case_2
                  solve( !KU( enc(<~n, z>, ~n.2) ) @ #vk.1 )
                    case Alice__merged_____2__1_0_____9__122
                    by solve( !KU( ~n.1 ) @ #vk.2 )
                  next
                    case c_enc
                    by solve( !KU( ~n.2 ) @ #vk.4 )
                  qed
                next
                  case Bob__merged_____3__0_0_____9__79_case_1
                  by solve( !KU( ~n.2 ) @ #vk.4 )
                next
                  case Bob__merged_____3__0_0_____9__79_case_2
                  by solve( !KU( ~n.2 ) @ #vk.4 )
                next
                  case Bob__merged_____3__1_0_____9__75_case_1
                  by solve( !KU( ~n.2 ) @ #vk.5 )
                next
                  case Bob__merged_____3__1_0_____9__75_case_2
                  by solve( !KU( ~n.2 ) @ #vk.5 )
                qed
              qed
            qed
          qed
        qed
      qed
    next
      case Bob__merged_____3__0_0_____9__79
      solve( !ACP__( <'rab__Alice', 'rab__rab'>, 'rab__udp', 'rab__recv'
             ) ▶₃ #i )
        case Init__system__ACP__2
        solve( !Const__( 'rab__priv_key_alice', priv_key_alice__44 ) ▶₄ #i )
          case Const__priv_key_alice
          solve( !Const__( 'rab__nonce_a', na ) ▶₅ #i )
            case Const__nonce_a
            solve( !Const__( 'rab__nonce_a', nonce_a__47 ) ▶₆ #i )
              case Const__nonce_a
              solve( !Eq__( z, ~n ) ▶₇ #i )
                case Equality_gen
                solve( !KU( ~n ) @ #vk )
                  case Alice__merged_____2__1_0_____9__122_case_1
                  solve( splitEqs(1) )
                    case split_case_1
                    solve( !KU( enc(<~n, z>, ~n.3) ) @ #vk.1 )
                      case Alice__merged_____2__1_0_____9__122
                      by solve( !KU( ~n.1 ) @ #vk.2 )
                    next
                      case c_enc
                      by solve( !KU( ~n.3 ) @ #vk.4 )
                    qed
                  next
                    case split_case_2
                    solve( !KU( enc(<~n, z>, ~n.3) ) @ #vk.1 )
                      case Alice__merged_____2__1_0_____9__122
                      by solve( !KU( ~n.1 ) @ #vk.2 )
                    next
                      case c_enc
                      by solve( !KU( ~n.3 ) @ #vk.4 )
                    qed
                  next
                    case split_case_3
                    solve( !KU( enc(<~n, z>, ~n.3) ) @ #vk.1 )
                      case Alice__merged_____2__1_0_____9__122
                      by solve( !KU( ~n.1 ) @ #vk.2 )
                    next
                      case c_enc
                      by solve( !KU( ~n.3 ) @ #vk.4 )
                    qed
                  qed
                next
                  case Alice__merged_____2__1_0_____9__122_case_2
                  solve( splitEqs(1) )
                    case split_case_1
                    solve( !KU( enc(<~n, z>, ~n.3) ) @ #vk.1 )
                      case Alice__merged_____2__1_0_____9__122
                      by solve( !KU( ~n.1 ) @ #vk.2 )
                    next
                      case c_enc
                      by solve( !KU( ~n.3 ) @ #vk.4 )
                    qed
                  next
                    case split_case_2
                    solve( !KU( enc(<~n, z>, ~n.3) ) @ #vk.1 )
                      case Alice__merged_____2__1_0_____9__122
                      by solve( !KU( ~n.1 ) @ #vk.2 )
                    next
                      case c_enc
                      by solve( !KU( ~n.3 ) @ #vk.4 )
                    qed
                  next
                    case split_case_3
                    solve( !KU( enc(<~n, z>, ~n.3) ) @ #vk.1 )
                      case Alice__merged_____2__1_0_____9__122
                      by solve( !KU( ~n.1 ) @ #vk.2 )
                    next
                      case c_enc
                      by solve( !KU( ~n.3 ) @ #vk.4 )
                    qed
                  qed
                next
                  case Bob__merged_____3__0_0_____9__79_case_1
                  by solve( !KU( ~n.3 ) @ #vk.4 )
                next
                  case Bob__merged_____3__0_0_____9__79_case_2
                  by solve( !KU( ~n.3 ) @ #vk.4 )
                qed
              qed
            qed
          qed
        qed
      qed
    next
      case Bob__merged_____3__1_0_____9__75
      solve( !ACP__( <'rab__Alice', 'rab__rab'>, 'rab__udp', 'rab__recv'
             ) ▶₃ #i )
        case Init__system__ACP__2
        solve( !Const__( 'rab__priv_key_alice', priv_key_alice__44 ) ▶₄ #i )
          case Const__priv_key_alice
          solve( !Const__( 'rab__nonce_a', na ) ▶₅ #i )
            case Const__nonce_a
            solve( !Const__( 'rab__nonce_a', nonce_a__47 ) ▶₆ #i )
              case Const__nonce_a
              solve( !Eq__( z, ~n ) ▶₇ #i )
                case Equality_gen
                solve( !KU( ~n ) @ #vk )
                  case Alice__merged_____2__1_0_____9__122_case_1
                  solve( splitEqs(1) )
                    case split_case_1
                    solve( !KU( enc(<~n, z>, ~n.3) ) @ #vk.1 )
                      case Alice__merged_____2__1_0_____9__122
                      by solve( !KU( ~n.1 ) @ #vk.2 )
                    next
                      case c_enc
                      by solve( !KU( ~n.3 ) @ #vk.5 )
                    qed
                  next
                    case split_case_2
                    solve( !KU( enc(<~n, z>, ~n.3) ) @ #vk.1 )
                      case Alice__merged_____2__1_0_____9__122
                      by solve( !KU( ~n.1 ) @ #vk.2 )
                    next
                      case c_enc
                      by solve( !KU( ~n.3 ) @ #vk.5 )
                    qed
                  next
                    case split_case_3
                    solve( !KU( enc(<~n, z>, ~n.3) ) @ #vk.1 )
                      case Alice__merged_____2__1_0_____9__122
                      by solve( !KU( ~n.1 ) @ #vk.2 )
                    next
                      case c_enc
                      by solve( !KU( ~n.3 ) @ #vk.5 )
                    qed
                  qed
                next
                  case Alice__merged_____2__1_0_____9__122_case_2
                  solve( splitEqs(1) )
                    case split_case_1
                    solve( !KU( enc(<~n, z>, ~n.3) ) @ #vk.1 )
                      case Alice__merged_____2__1_0_____9__122
                      by solve( !KU( ~n.1 ) @ #vk.2 )
                    next
                      case c_enc
                      by solve( !KU( ~n.3 ) @ #vk.5 )
                    qed
                  next
                    case split_case_2
                    solve( !KU( enc(<~n, z>, ~n.3) ) @ #vk.1 )
                      case Alice__merged_____2__1_0_____9__122
                      by solve( !KU( ~n.1 ) @ #vk.2 )
                    next
                      case c_enc
                      by solve( !KU( ~n.3 ) @ #vk.5 )
                    qed
                  next
                    case split_case_3
                    solve( !KU( enc(<~n, z>, ~n.3) ) @ #vk.1 )
                      case Alice__merged_____2__1_0_____9__122
                      by solve( !KU( ~n.1 ) @ #vk.2 )
                    next
                      case c_enc
                      by solve( !KU( ~n.3 ) @ #vk.5 )
                    qed
                  qed
                next
                  case Bob__merged_____3__1_0_____9__75_case_1
                  by solve( !KU( ~n.3 ) @ #vk.5 )
                next
                  case Bob__merged_____3__1_0_____9__75_case_2
                  by solve( !KU( ~n.3 ) @ #vk.5 )
                qed
              qed
            qed
          qed
        qed
      qed
    qed
  qed
qed

lemma SecrecyCanBeEstablishedB_tmrn:
  exists-trace "∃ nb #j. SecretNonceBob( nb ) @ #j"
/*
guarded formula characterizing all satisfying traces:
"∃ nb #j. (SecretNonceBob( nb ) @ #j)"
*/
simplify
solve( SecretNonceBob( nb ) @ #j )
  case Bob__merged_____11__0_0_____13__0_1__59
  solve( State__Bob( <'rab_____11__0_0', param, %v__>, return__var__25,
                     'rab__', <l__0__25, l__1__25, l__2__25, l__3__25, l__4__25>, t__0__25
         ) ▶₀ #j )
    case Bob__merged_____9_____11__0_0__62_case_1
    solve( Store( 'rab__udp', n__0__25 ) ▶₁ #j )
      case Alice__merged_____15__0_1_____15__0_3__0_1__86
      solve( !ACP__( <'rab__Bob', 'rab__rab'>, 'rab__udp', 'rab__recv'
             ) ▶₂ #j )
        case Init__system__ACP__0
        solve( !Const__( 'rab__priv_key_bob', priv_key_bob__34 ) ▶₃ #j )
          case Const__priv_key_bob
          solve( !Const__( 'rab__nonce_b', nb ) ▶₄ #j )
            case Const__nonce_b
            solve( !Const__( 'rab__nonce_b', nonce_b__35 ) ▶₅ #j )
              case Const__nonce_b
              solve( !Eq__( z, ~n.1 ) ▶₆ #j )
                case Equality_gen
                solve( splitEqs(1) )
                  case split_case_1
                  solve( Store( 'rab__udp', l__4__25 ) ▶₁ #vr.1 )
                    case Alice__merged_____15__0_1_____15__0_3__0_1__86
                    solve( State__Alice( <'rab_____15__0_1', 'rab__rab', %v__>,
                                         return__var__49, 'rab__',
                                         <l__0__49, l__1__49, l__2__49, l__3__49, l__4__49, ~l__5__49.1, 
                                          l__6__49>,
                                         'rab__'
                           ) ▶₀ #vr.10 )
                      case Alice__merged_____11__1_0_____15__0_1__94_case_1
                      solve( !KU( enc(<~n, l__0__49>, ~n.2) ) @ #vk )
                        case c_enc
                        by solve( !KU( ~n.2 ) @ #vk.2 )
                      qed
                    next
                      case Alice__merged_____11__1_0_____15__0_1__94_case_2
                      by solve( !KU( ~l__5__49.1 ) @ #vk.1 )
                    next
                      case Alice__merged_____11__1_0_____15__0_1__94_case_3
                      solve( !KU( enc(<~n, l__0__49>, ~n.2) ) @ #vk )
                        case c_enc
                        by solve( !KU( ~n.2 ) @ #vk.2 )
                      qed
                    next
                      case Alice__merged_____11__1_0_____15__0_1__94_case_4
                      by solve( !KU( ~l__5__49.1 ) @ #vk.1 )
                    next
                      case Alice__merged_____11__1_0_____15__0_1__94_case_5
                      solve( !KU( enc(<~n, l__0__49>, ~n.2) ) @ #vk )
                        case c_enc
                        by solve( !KU( ~n.2 ) @ #vk.2 )
                      qed
                    next
                      case Alice__merged_____11__1_0_____15__0_1__94_case_6
                      by solve( !KU( ~l__5__49.1 ) @ #vk.1 )
                    qed
                  next
                    case Alice__merged_____1_____9__131
                    solve( State__Alice( <'rab_____15__0_1', 'rab__rab', %v__>,
                                         return__var__49, 'rab__',
                                         <l__0__49, l__1__49, l__2__49, l__3__49, l__4__49, ~l__5__49, 
                                          l__6__49>,
                                         'rab__'
                           ) ▶₀ #vr.10 )
                      case Alice__merged_____11__1_0_____15__0_1__94
                      by contradiction /* non-normal terms */
                    qed
                  next
                    case Alice__merged_____2__1_0_____9__122
                    solve( State__Alice( <'rab_____15__0_1', 'rab__rab', %v__>,
                                         return__var__49, 'rab__',
                                         <l__0__49, l__1__49, l__2__49, l__3__49, l__4__49, ~l__5__49, 
                                          l__6__49>,
                                         'rab__'
                           ) ▶₀ #vr.10 )
                      case Alice__merged_____11__1_0_____15__0_1__94
                      by contradiction /* non-normal terms */
                    qed
                  next
                    case Bob__merged_____3__0_0_____9__79
                    by contradiction /* cyclic */
                  qed
                next
                  case split_case_2
                  solve( Store( 'rab__udp', enc(x, ~l__5__49) ) ▶₁ #vr.1 )
                    case Alice__merged_____15__0_1_____15__0_3__0_1__86
                    solve( State__Alice( <'rab_____15__0_1', 'rab__rab', %v__>,
                                         return__var__49, 'rab__',
                                         <l__0__49, l__1__49, l__2__49, l__3__49, l__4__49, ~l__5__49, 
                                          l__6__49>,
                                         'rab__'
                           ) ▶₀ #vr.10 )
                      case Alice__merged_____11__1_0_____15__0_1__94_case_1
                      solve( !KU( enc(<~n, l__0__49>, ~n.2) ) @ #vk )
                        case c_enc
                        by solve( !KU( ~n.2 ) @ #vk.2 )
                      qed
                    next
                      case Alice__merged_____11__1_0_____15__0_1__94_case_2
                      by solve( !KU( ~l__5__49 ) @ #vk.1 )
                    next
                      case Alice__merged_____11__1_0_____15__0_1__94_case_3
                      solve( !KU( enc(<~n, l__0__49>, ~n.2) ) @ #vk )
                        case c_enc
                        by solve( !KU( ~n.2 ) @ #vk.2 )
                      qed
                    next
                      case Alice__merged_____11__1_0_____15__0_1__94_case_4
                      by solve( !KU( ~l__5__49 ) @ #vk.1 )
                    next
                      case Alice__merged_____11__1_0_____15__0_1__94_case_5
                      solve( !KU( enc(<~n, l__0__49>, ~n.2) ) @ #vk )
                        case c_enc
                        by solve( !KU( ~n.2 ) @ #vk.2 )
                      qed
                    next
                      case Alice__merged_____11__1_0_____15__0_1__94_case_6
                      by solve( !KU( ~l__5__49 ) @ #vk.1 )
                    qed
                  next
                    case Alice__merged_____1_____9__131
                    by contradiction /* non-normal terms */
                  next
                    case Alice__merged_____2__1_0_____9__122
                    by contradiction /* non-normal terms */
                  qed
                next
                  case split_case_3
                  solve( Store( 'rab__udp', enc(<l__3__25, x>, ~l__5__49) ) ▶₁ #vr.1 )
                    case Alice__merged_____1_____9__131
                    solve( State__Alice( <'rab_____15__0_1', 'rab__rab', %v__>,
                                         return__var__49, 'rab__',
                                         <l__0__49, l__1__49, l__2__49, l__3__49, l__4__49, ~l__5__49, 
                                          l__6__49>,
                                         'rab__'
                           ) ▶₀ #vr.10 )
                      case Alice__merged_____11__1_0_____15__0_1__94_case_1
                      solve( !KU( enc(<~n, l__0__49>, ~n.2) ) @ #vk )
                        case c_enc
                        by solve( !KU( ~n.2 ) @ #vk.2 )
                      qed
                    next
                      case Alice__merged_____11__1_0_____15__0_1__94_case_2
                      solve( !KU( enc(<~n, l__0__49>, ~n.2) ) @ #vk )
                        case c_enc
                        by solve( !KU( ~n.2 ) @ #vk.2 )
                      qed
                    qed
                  next
                    case Alice__merged_____2__1_0_____9__122
                    by solve( !KU( ~l__5__49 ) @ #vk )
                  qed
                qed
              qed
            qed
          qed
        qed
      qed
    next
      case Alice__merged_____1_____9__131
      solve( !ACP__( <'rab__Bob', 'rab__rab'>, 'rab__udp', 'rab__recv'
             ) ▶₂ #j )
        case Init__system__ACP__0
        solve( !Const__( 'rab__priv_key_bob', priv_key_bob__34 ) ▶₃ #j )
          case Const__priv_key_bob
          solve( !Const__( 'rab__nonce_b', nb ) ▶₄ #j )
            case Const__nonce_b
            solve( !Const__( 'rab__nonce_b', nonce_b__35 ) ▶₅ #j )
              case Const__nonce_b
              by solve( !Eq__( z, ~n.1 ) ▶₆ #j )
            qed
          qed
        qed
      qed
    next
      case Alice__merged_____2__1_0_____9__122
      solve( !ACP__( <'rab__Bob', 'rab__rab'>, 'rab__udp', 'rab__recv'
             ) ▶₂ #j )
        case Init__system__ACP__0
        solve( !Const__( 'rab__priv_key_bob', priv_key_bob__34 ) ▶₃ #j )
          case Const__priv_key_bob
          solve( !Const__( 'rab__nonce_b', nb ) ▶₄ #j )
            case Const__nonce_b
            solve( !Const__( 'rab__nonce_b', nonce_b__35 ) ▶₅ #j )
              case Const__nonce_b
              by solve( !Eq__( z, ~n.1 ) ▶₆ #j )
            qed
          qed
        qed
      qed
    next
      case Bob__merged_____3__0_0_____9__79
      solve( !ACP__( <'rab__Bob', 'rab__rab'>, 'rab__udp', 'rab__recv'
             ) ▶₂ #j )
        case Init__system__ACP__0
        solve( !Const__( 'rab__priv_key_bob', priv_key_bob__34 ) ▶₃ #j )
          case Const__priv_key_bob
          solve( !Const__( 'rab__nonce_b', nb ) ▶₄ #j )
            case Const__nonce_b
            solve( !Const__( 'rab__nonce_b', nonce_b__35 ) ▶₅ #j )
              case Const__nonce_b
              by solve( !Eq__( dec(enc(<~n, ~n.1>, pk(~n.2)), ~n.3), ~n.1 ) ▶₆ #j )
            qed
          qed
        qed
      qed
    qed
  next
    case Bob__merged_____9_____11__0_0__62_case_2
    solve( Store( 'rab__udp', n__0__25 ) ▶₁ #j )
      case Alice__merged_____15__0_1_____15__0_3__0_1__86
      solve( !ACP__( <'rab__Bob', 'rab__rab'>, 'rab__udp', 'rab__recv'
             ) ▶₂ #j )
        case Init__system__ACP__0
        solve( !Const__( 'rab__priv_key_bob', priv_key_bob__34 ) ▶₃ #j )
          case Const__priv_key_bob
          solve( !Const__( 'rab__nonce_b', nb ) ▶₄ #j )
            case Const__nonce_b
            solve( !Const__( 'rab__nonce_b', nonce_b__35 ) ▶₅ #j )
              case Const__nonce_b
              solve( !Eq__( z, ~n.1 ) ▶₆ #j )
                case Equality_gen
                solve( splitEqs(1) )
                  case split_case_1
                  solve( Store( 'rab__udp', n__0__9 ) ▶₁ #vr.1 )
                    case Alice__merged_____15__0_1_____15__0_3__0_1__86
                    solve( State__Alice( <'rab_____15__0_1', 'rab__rab', %v__>,
                                         return__var__49, 'rab__',
                                         <l__0__49, l__1__49, l__2__49, l__3__49, l__4__49, ~l__5__49, 
                                          l__6__49>,
                                         'rab__'
                           ) ▶₀ #vr.10 )
                      case Alice__merged_____11__1_0_____15__0_1__94_case_1
                      solve( !KU( enc(<~n, l__0__49>, ~n.2) ) @ #vk.1 )
                        case c_enc
                        by solve( !KU( ~n.2 ) @ #vk.3 )
                      qed
                    next
                      case Alice__merged_____11__1_0_____15__0_1__94_case_2
                      by solve( !KU( ~l__5__49 ) @ #vk.2 )
                    next
                      case Alice__merged_____11__1_0_____15__0_1__94_case_3
                      solve( !KU( enc(<~n, l__0__49>, ~n.2) ) @ #vk.1 )
                        case c_enc
                        by solve( !KU( ~n.2 ) @ #vk.3 )
                      qed
                    next
                      case Alice__merged_____11__1_0_____15__0_1__94_case_4
                      by solve( !KU( ~l__5__49 ) @ #vk.2 )
                    next
                      case Alice__merged_____11__1_0_____15__0_1__94_case_5
                      solve( !KU( enc(<~n, l__0__49>, ~n.2) ) @ #vk.1 )
                        case c_enc
                        by solve( !KU( ~n.2 ) @ #vk.3 )
                      qed
                    next
                      case Alice__merged_____11__1_0_____15__0_1__94_case_6
                      by solve( !KU( ~l__5__49 ) @ #vk.2 )
                    qed
                  next
                    case Alice__merged_____1_____9__131
                    solve( State__Alice( <'rab_____15__0_1', 'rab__rab', %v__>,
                                         return__var__49, 'rab__',
                                         <l__0__49, l__1__49, l__2__49, l__3__49, l__4__49, ~l__5__49, 
                                          l__6__49>,
                                         'rab__'
                           ) ▶₀ #vr.10 )
                      case Alice__merged_____11__1_0_____15__0_1__94_case_1
                      solve( !KU( enc(<~n, l__0__49>, ~n.2) ) @ #vk.1 )
                        case c_enc
                        by solve( !KU( ~n.2 ) @ #vk.3 )
                      qed
                    next
                      case Alice__merged_____11__1_0_____15__0_1__94_case_2
                      solve( !KU( enc(<~n, l__0__49>, ~n.2) ) @ #vk.1 )
                        case c_enc
                        by solve( !KU( ~n.2 ) @ #vk.3 )
                      qed
                    qed
                  next
                    case Alice__merged_____2__1_0_____9__122
                    solve( State__Alice( <'rab_____15__0_1', 'rab__rab', %v__>,
                                         return__var__49, 'rab__',
                                         <l__0__49, l__1__49, l__2__49, l__3__49, l__4__49, ~l__5__49, 
                                          l__6__49>,
                                         'rab__'
                           ) ▶₀ #vr.10 )
                      case Alice__merged_____11__1_0_____15__0_1__94_case_1
                      by solve( !KU( ~l__5__49 ) @ #vk.1 )
                    next
                      case Alice__merged_____11__1_0_____15__0_1__94_case_2
                      by solve( !KU( ~l__5__49 ) @ #vk.1 )
                    qed
                  next
                    case Bob__merged_____3__1_0_____9__75
                    by contradiction /* cyclic */
                  qed
                next
                  case split_case_2
                  solve( !KU( enc(x, ~l__5__49) ) @ #vk )
                    case Alice__merged_____15__0_1_____15__0_3__0_1__86
                    solve( Store( 'rab__udp', n__0__9 ) ▶₁ #vr.1 )
                      case Alice__merged_____15__0_1_____15__0_3__0_1__86
                      solve( State__Alice( <'rab_____15__0_1', 'rab__rab', %v__>,
                                           return__var__49, 'rab__',
                                           <l__0__49, l__1__49, l__2__49, l__3__49, l__4__49, ~l__5__49, 
                                            l__6__49>,
                                           'rab__'
                             ) ▶₀ #vr.10 )
                        case Alice__merged_____11__1_0_____15__0_1__94_case_1
                        solve( !KU( enc(<~n, l__0__49>, ~n.2) ) @ #vk.1 )
                          case c_enc
                          by solve( !KU( ~n.2 ) @ #vk.3 )
                        qed
                      next
                        case Alice__merged_____11__1_0_____15__0_1__94_case_2
                        by solve( !KU( ~l__5__49 ) @ #vk.2 )
                      next
                        case Alice__merged_____11__1_0_____15__0_1__94_case_3
                        solve( !KU( enc(<~n, l__0__49>, ~n.2) ) @ #vk.1 )
                          case c_enc
                          by solve( !KU( ~n.2 ) @ #vk.3 )
                        qed
                      next
                        case Alice__merged_____11__1_0_____15__0_1__94_case_4
                        by solve( !KU( ~l__5__49 ) @ #vk.2 )
                      next
                        case Alice__merged_____11__1_0_____15__0_1__94_case_5
                        solve( !KU( enc(<~n, l__0__49>, ~n.2) ) @ #vk.1 )
                          case c_enc
                          by solve( !KU( ~n.2 ) @ #vk.3 )
                        qed
                      next
                        case Alice__merged_____11__1_0_____15__0_1__94_case_6
                        by solve( !KU( ~l__5__49 ) @ #vk.2 )
                      qed
                    next
                      case Alice__merged_____1_____9__131
                      solve( State__Alice( <'rab_____15__0_1', 'rab__rab', %v__>,
                                           return__var__49, 'rab__',
                                           <l__0__49, l__1__49, l__2__49, l__3__49, l__4__49, ~l__5__49, 
                                            l__6__49>,
                                           'rab__'
                             ) ▶₀ #vr.10 )
                        case Alice__merged_____11__1_0_____15__0_1__94_case_1
                        solve( !KU( enc(<~n, l__0__49>, ~n.2) ) @ #vk.1 )
                          case c_enc
                          by solve( !KU( ~n.2 ) @ #vk.3 )
                        qed
                      next
                        case Alice__merged_____11__1_0_____15__0_1__94_case_2
                        solve( !KU( enc(<~n, l__0__49>, ~n.2) ) @ #vk.1 )
                          case c_enc
                          by solve( !KU( ~n.2 ) @ #vk.3 )
                        qed
                      qed
                    next
                      case Alice__merged_____2__1_0_____9__122
                      solve( State__Alice( <'rab_____15__0_1', 'rab__rab', %v__>,
                                           return__var__49, 'rab__',
                                           <l__0__49, l__1__49, l__2__49, l__3__49, l__4__49, ~l__5__49, 
                                            l__6__49>,
                                           'rab__'
                             ) ▶₀ #vr.10 )
                        case Alice__merged_____11__1_0_____15__0_1__94_case_1
                        by solve( !KU( ~l__5__49 ) @ #vk.1 )
                      next
                        case Alice__merged_____11__1_0_____15__0_1__94_case_2
                        by solve( !KU( ~l__5__49 ) @ #vk.1 )
                      qed
                    next
                      case Bob__merged_____3__1_0_____9__75
                      by contradiction /* cyclic */
                    qed
                  next
                    case Alice__merged_____1_____9__131
                    by contradiction /* non-normal terms */
                  next
                    case Alice__merged_____2__1_0_____9__122
                    by contradiction /* non-normal terms */
                  next
                    case c_enc
                    by solve( !KU( ~l__5__49 ) @ #vk.2 )
                  qed
                next
                  case split_case_3
                  solve( !KU( enc(<l__3__25, x>, ~l__5__49) ) @ #vk )
                    case Alice__merged_____1_____9__131
                    solve( Store( 'rab__udp', n__0__9 ) ▶₁ #vr.1 )
                      case Alice__merged_____15__0_1_____15__0_3__0_1__86
                      solve( State__Alice( <'rab_____15__0_1', 'rab__rab', %v__>,
                                           return__var__49, 'rab__',
                                           <l__0__49, l__1__49, l__2__49, l__3__49, l__4__49, ~l__5__49, 
                                            l__6__49>,
                                           'rab__'
                             ) ▶₀ #vr.10 )
                        case Alice__merged_____11__1_0_____15__0_1__94_case_1
                        solve( !KU( enc(<~n, l__0__49>, ~n.2) ) @ #vk.1 )
                          case c_enc
                          by solve( !KU( ~n.2 ) @ #vk.3 )
                        qed
                      next
                        case Alice__merged_____11__1_0_____15__0_1__94_case_2
                        solve( !KU( enc(<~n, l__0__49>, ~n.2) ) @ #vk.1 )
                          case c_enc
                          by solve( !KU( ~n.2 ) @ #vk.3 )
                        qed
                      next
                        case Alice__merged_____11__1_0_____15__0_1__94_case_3
                        solve( !KU( enc(<~n, l__0__49>, ~n.2) ) @ #vk.1 )
                          case c_enc
                          by solve( !KU( ~n.2 ) @ #vk.3 )
                        qed
                      qed
                    next
                      case Alice__merged_____1_____9__131
                      solve( State__Alice( <'rab_____15__0_1', 'rab__rab', %v__>,
                                           return__var__49, 'rab__',
                                           <l__0__49, l__1__49, l__2__49, l__3__49, l__4__49, ~l__5__49, 
                                            l__6__49>,
                                           'rab__'
                             ) ▶₀ #vr.10 )
                        case Alice__merged_____11__1_0_____15__0_1__94_case_1
                        solve( !KU( enc(<~n, l__0__49>, ~n.2) ) @ #vk.1 )
                          case c_enc
                          by solve( !KU( ~n.2 ) @ #vk.3 )
                        qed
                      next
                        case Alice__merged_____11__1_0_____15__0_1__94_case_2
                        solve( !KU( enc(<~n, l__0__49>, ~n.2) ) @ #vk.1 )
                          case c_enc
                          by solve( !KU( ~n.2 ) @ #vk.3 )
                        qed
                      qed
                    next
                      case Bob__merged_____3__1_0_____9__75
                      by contradiction /* cyclic */
                    qed
                  next
                    case Alice__merged_____2__1_0_____9__122
                    by solve( !KU( ~l__5__49 ) @ #vk.1 )
                  next
                    case c_enc
                    by solve( !KU( ~l__5__49 ) @ #vk.2 )
                  qed
                qed
              qed
            qed
          qed
        qed
      qed
    next
      case Alice__merged_____1_____9__131
      solve( !ACP__( <'rab__Bob', 'rab__rab'>, 'rab__udp', 'rab__recv'
             ) ▶₂ #j )
        case Init__system__ACP__0
        solve( !Const__( 'rab__priv_key_bob', priv_key_bob__34 ) ▶₃ #j )
          case Const__priv_key_bob
          solve( !Const__( 'rab__nonce_b', nb ) ▶₄ #j )
            case Const__nonce_b
            solve( !Const__( 'rab__nonce_b', nonce_b__35 ) ▶₅ #j )
              case Const__nonce_b
              by solve( !Eq__( z, ~n.1 ) ▶₆ #j )
            qed
          qed
        qed
      qed
    next
      case Alice__merged_____2__1_0_____9__122
      solve( !ACP__( <'rab__Bob', 'rab__rab'>, 'rab__udp', 'rab__recv'
             ) ▶₂ #j )
        case Init__system__ACP__0
        solve( !Const__( 'rab__priv_key_bob', priv_key_bob__34 ) ▶₃ #j )
          case Const__priv_key_bob
          solve( !Const__( 'rab__nonce_b', nb ) ▶₄ #j )
            case Const__nonce_b
            solve( !Const__( 'rab__nonce_b', nonce_b__35 ) ▶₅ #j )
              case Const__nonce_b
              by solve( !Eq__( z, ~n.1 ) ▶₆ #j )
            qed
          qed
        qed
      qed
    next
      case Bob__merged_____3__1_0_____9__75
      solve( !ACP__( <'rab__Bob', 'rab__rab'>, 'rab__udp', 'rab__recv'
             ) ▶₂ #j )
        case Init__system__ACP__0
        solve( !Const__( 'rab__priv_key_bob', priv_key_bob__34 ) ▶₃ #j )
          case Const__priv_key_bob
          solve( !Const__( 'rab__nonce_b', nb ) ▶₄ #j )
            case Const__nonce_b
            solve( !Const__( 'rab__nonce_b', nonce_b__35 ) ▶₅ #j )
              case Const__nonce_b
              by solve( !Eq__( dec(enc(<~n, ~n.1>, pk(~n.2)), ~n.3), ~n.1 ) ▶₆ #j )
            qed
          qed
        qed
      qed
    qed
  qed
next
  case Bob__merged_____11__1_0_____13__0_1__55
  solve( State__Bob( <'rab_____11__1_0', param, %v__>, return__var__30,
                     'rab__', <l__0__30, l__1__30, l__2__30, l__3__30, l__4__30>, t__0__30
         ) ▶₀ #j )
    case Bob__merged_____9_____11__1_0__63_case_1
    solve( Store( 'rab__udp', n__0__30 ) ▶₁ #j )
      case Alice__merged_____15__0_1_____15__0_3__0_1__86
      solve( !ACP__( <'rab__Bob', 'rab__rab'>, 'rab__udp', 'rab__recv'
             ) ▶₃ #j )
        case Init__system__ACP__0
        solve( !Const__( 'rab__priv_key_bob', priv_key_bob__34 ) ▶₄ #j )
          case Const__priv_key_bob
          solve( !Const__( 'rab__nonce_b', nb ) ▶₅ #j )
            case Const__nonce_b
            solve( !Const__( 'rab__nonce_b', nonce_b__35 ) ▶₆ #j )
              case Const__nonce_b
              solve( !Eq__( z, ~n.1 ) ▶₇ #j )
                case Equality_gen
                solve( splitEqs(1) )
                  case split_case_1
                  solve( !KU( enc(~n.1, ~n.3) ) @ #vk )
                    case Alice__merged_____15__0_1_____15__0_3__0_1__86
                    solve( Store( 'rab__udp', enc(<l__3__30, x>, ~n.3) ) ▶₁ #vr.1 )
                      case Alice__merged_____1_____9__131
                      solve( State__Alice( <'rab_____15__0_1', 'rab__rab', %v__>,
                                           return__var__49, 'rab__',
                                           <l__0__49, l__1__49, l__2__49, l__3__49, l__4__49, l__5__49, 
                                            l__6__49>,
                                           'rab__'
                             ) ▶₀ #vr.10 )
                        case Alice__merged_____11__1_0_____15__0_1__94_case_1
                        solve( !KU( enc(<~n, l__0__49>, ~n.2) ) @ #vk.1 )
                          case c_enc
                          by solve( !KU( ~n.2 ) @ #vk.3 )
                        qed
                      next
                        case Alice__merged_____11__1_0_____15__0_1__94_case_2
                        solve( !KU( enc(<~n, l__0__49>, ~n.2) ) @ #vk.1 )
                          case c_enc
                          by solve( !KU( ~n.2 ) @ #vk.3 )
                        qed
                      qed
                    next
                      case Alice__merged_____2__1_0_____9__122
                      by solve( !KU( ~n.3 ) @ #vk.1 )
                    qed
                  next
                    case c_enc
                    solve( !KU( ~n.1 ) @ #vk.1 )
                      case Alice__merged_____15__0_1_____15__0_3__0_1__86
                      by solve( !KU( ~n.3 ) @ #vk.2 )
                    next
                      case Bob__merged_____3__0_0_____9__79_case_1
                      by solve( !KU( ~n.3 ) @ #vk.3 )
                    next
                      case Bob__merged_____3__0_0_____9__79_case_2
                      by solve( !KU( ~n.3 ) @ #vk.3 )
                    qed
                  qed
                next
                  case split_case_2
                  solve( !KU( enc(~n.1, ~n.3) ) @ #vk )
                    case Alice__merged_____15__0_1_____15__0_3__0_1__86
                    solve( Store( 'rab__udp', enc(x, ~n.3) ) ▶₁ #vr.1 )
                      case Alice__merged_____15__0_1_____15__0_3__0_1__86
                      solve( State__Alice( <'rab_____15__0_1', 'rab__rab', %v__>,
                                           return__var__49, 'rab__',
                                           <l__0__49, l__1__49, l__2__49, l__3__49, l__4__49, l__5__49, 
                                            l__6__49>,
                                           'rab__'
                             ) ▶₀ #vr.10 )
                        case Alice__merged_____11__0_0_____15__0_1__98_case_1
                        by solve( State__Alice( <'rab_____15__0_1', 'rab__rab', %v__>,
                                                return__var__49, 'rab__',
                                                <l__0__49, l__1__49, l__2__49, l__3__49, l__4__49, ~n.3, 
                                                 l__6__49>,
                                                'rab__'
                                  ) ▶₀ #vr.13 )
                      next
                        case Alice__merged_____11__0_0_____15__0_1__98_case_2
                        by solve( !KU( ~n.2 ) @ #vk.1 )
                      next
                        case Alice__merged_____11__1_0_____15__0_1__94_case_1
                        solve( !KU( enc(<~n, l__0__49>, ~n.2) ) @ #vk.1 )
                          case Alice__merged_____1_____9__131
                          by solve( State__Alice( <'rab_____15__0_1', 'rab__rab', %v__>,
                                                  return__var__49, 'rab__',
                                                  <l__0__49, l__1__49, l__2__49, l__3__49, l__4__49, ~n.3, 
                                                   l__6__49>,
                                                  'rab__'
                                    ) ▶₀ #vr.13 )
                        next
                          case c_enc
                          by solve( !KU( ~n.2 ) @ #vk.3 )
                        qed
                      next
                        case Alice__merged_____11__1_0_____15__0_1__94_case_2
                        solve( !KU( enc(<~n, l__0__49>, ~n.2) ) @ #vk.1 )
                          case Alice__merged_____2__1_0_____9__122
                          by solve( !KU( ~n.2 ) @ #vk.2 )
                        next
                          case c_enc
                          by solve( !KU( ~n.2 ) @ #vk.4 )
                        qed
                      next
                        case Alice__merged_____11__1_0_____15__0_1__94_case_3
                        solve( !KU( enc(<~n, l__0__49>, ~n.2) ) @ #vk.1 )
                          case Alice__merged_____1_____9__131
                          by solve( State__Alice( <'rab_____15__0_1', 'rab__rab', %v__>,
                                                  return__var__49, 'rab__',
                                                  <l__0__49, l__1__49, l__2__49, l__3__49, l__4__49, ~n.3, 
                                                   l__6__49>,
                                                  'rab__'
                                    ) ▶₀ #vr.13 )
                        next
                          case c_enc
                          by solve( !KU( ~n.2 ) @ #vk.3 )
                        qed
                      next
                        case Alice__merged_____11__1_0_____15__0_1__94_case_4
                        solve( !KU( enc(<~n, l__0__49>, ~n.2) ) @ #vk.1 )
                          case Alice__merged_____2__1_0_____9__122
                          by solve( !KU( ~n.2 ) @ #vk.2 )
                        next
                          case c_enc
                          by solve( !KU( ~n.2 ) @ #vk.4 )
                        qed
                      next
                        case Alice__merged_____11__1_0_____15__0_1__94_case_5
                        solve( !KU( enc(<~n, l__0__49>, ~n.2) ) @ #vk.1 )
                          case Alice__merged_____1_____9__131
                          by solve( State__Alice( <'rab_____15__0_1', 'rab__rab', %v__>,
                                                  return__var__49, 'rab__',
                                                  <l__0__49, l__1__49, l__2__49, l__3__49, l__4__49, ~n.3, 
                                                   l__6__49>,
                                                  'rab__'
                                    ) ▶₀ #vr.13 )
                        next
                          case c_enc
                          by solve( !KU( ~n.2 ) @ #vk.3 )
                        qed
                      next
                        case Alice__merged_____11__1_0_____15__0_1__94_case_6
                        solve( !KU( enc(<~n, l__0__49>, ~n.2) ) @ #vk.1 )
                          case Alice__merged_____2__1_0_____9__122
                          by solve( !KU( ~n.2 ) @ #vk.2 )
                        next
                          case c_enc
                          by solve( !KU( ~n.2 ) @ #vk.4 )
                        qed
                      qed
                    next
                      case Alice__merged_____1_____9__131
                      by contradiction /* non-normal terms */
                    next
                      case Alice__merged_____2__1_0_____9__122
                      by contradiction /* non-normal terms */
                    qed
                  next
                    case c_enc
                    solve( !KU( ~n.1 ) @ #vk.1 )
                      case Alice__merged_____15__0_1_____15__0_3__0_1__86
                      by solve( !KU( ~n.3 ) @ #vk.2 )
                    next
                      case Bob__merged_____3__0_0_____9__79_case_1
                      by solve( !KU( ~n.3 ) @ #vk.3 )
                    next
                      case Bob__merged_____3__0_0_____9__79_case_2
                      by solve( !KU( ~n.3 ) @ #vk.3 )
                    qed
                  qed
                next
                  case split_case_3
                  solve( !KU( enc(~n.1, ~n.3) ) @ #vk )
                    case Alice__merged_____15__0_1_____15__0_3__0_1__86
                    solve( Store( 'rab__udp', l__4__30 ) ▶₁ #vr.1 )
                      case Alice__merged_____15__0_1_____15__0_3__0_1__86
                      solve( State__Alice( <'rab_____15__0_1', 'rab__rab', %v__>,
                                           return__var__49, 'rab__',
                                           <l__0__49, l__1__49, l__2__49, l__3__49, l__4__49, l__5__49.1, 
                                            l__6__49>,
                                           'rab__'
                             ) ▶₀ #vr.10 )
                        case Alice__merged_____11__0_0_____15__0_1__98_case_1
                        by solve( State__Alice( <'rab_____15__0_1', 'rab__rab', %v__>,
                                                return__var__49, 'rab__',
                                                <l__0__49, l__1__49, l__2__49, l__3__49, l__4__49, ~n.3, 
                                                 l__6__49>,
                                                'rab__'
                                  ) ▶₀ #vr.13 )
                      next
                        case Alice__merged_____11__0_0_____15__0_1__98_case_2
                        by solve( !KU( ~n.2 ) @ #vk.1 )
                      next
                        case Alice__merged_____11__1_0_____15__0_1__94_case_1
                        solve( !KU( enc(<~n, l__0__49>, ~n.2) ) @ #vk.1 )
                          case Alice__merged_____1_____9__131
                          by solve( State__Alice( <'rab_____15__0_1', 'rab__rab', %v__>,
                                                  return__var__49, 'rab__',
                                                  <l__0__49, l__1__49, l__2__49, l__3__49, l__4__49, ~n.3, 
                                                   l__6__49>,
                                                  'rab__'
                                    ) ▶₀ #vr.13 )
                        next
                          case c_enc
                          by solve( !KU( ~n.2 ) @ #vk.3 )
                        qed
                      next
                        case Alice__merged_____11__1_0_____15__0_1__94_case_2
                        solve( !KU( enc(<~n, l__0__49>, ~n.2) ) @ #vk.1 )
                          case Alice__merged_____2__1_0_____9__122
                          by solve( !KU( ~n.2 ) @ #vk.2 )
                        next
                          case c_enc
                          by solve( !KU( ~n.2 ) @ #vk.4 )
                        qed
                      next
                        case Alice__merged_____11__1_0_____15__0_1__94_case_3
                        solve( !KU( enc(<~n, l__0__49>, ~n.2) ) @ #vk.1 )
                          case Alice__merged_____1_____9__131
                          by solve( State__Alice( <'rab_____15__0_1', 'rab__rab', %v__>,
                                                  return__var__49, 'rab__',
                                                  <l__0__49, l__1__49, l__2__49, l__3__49, l__4__49, ~n.3, 
                                                   l__6__49>,
                                                  'rab__'
                                    ) ▶₀ #vr.13 )
                        next
                          case c_enc
                          by solve( !KU( ~n.2 ) @ #vk.3 )
                        qed
                      next
                        case Alice__merged_____11__1_0_____15__0_1__94_case_4
                        solve( !KU( enc(<~n, l__0__49>, ~n.2) ) @ #vk.1 )
                          case Alice__merged_____2__1_0_____9__122
                          by solve( !KU( ~n.2 ) @ #vk.2 )
                        next
                          case c_enc
                          by solve( !KU( ~n.2 ) @ #vk.4 )
                        qed
                      next
                        case Alice__merged_____11__1_0_____15__0_1__94_case_5
                        solve( !KU( enc(<~n, l__0__49>, ~n.2) ) @ #vk.1 )
                          case Alice__merged_____1_____9__131
                          by solve( State__Alice( <'rab_____15__0_1', 'rab__rab', %v__>,
                                                  return__var__49, 'rab__',
                                                  <l__0__49, l__1__49, l__2__49, l__3__49, l__4__49, ~n.3, 
                                                   l__6__49>,
                                                  'rab__'
                                    ) ▶₀ #vr.13 )
                        next
                          case c_enc
                          by solve( !KU( ~n.2 ) @ #vk.3 )
                        qed
                      next
                        case Alice__merged_____11__1_0_____15__0_1__94_case_6
                        solve( !KU( enc(<~n, l__0__49>, ~n.2) ) @ #vk.1 )
                          case Alice__merged_____2__1_0_____9__122
                          by solve( !KU( ~n.2 ) @ #vk.2 )
                        next
                          case c_enc
                          by solve( !KU( ~n.2 ) @ #vk.4 )
                        qed
                      qed
                    next
                      case Alice__merged_____1_____9__131
                      solve( State__Alice( <'rab_____15__0_1', 'rab__rab', %v__>,
                                           return__var__49, 'rab__',
                                           <l__0__49, l__1__49, l__2__49, l__3__49, l__4__49, l__5__49, 
                                            l__6__49>,
                                           'rab__'
                             ) ▶₀ #vr.10 )
                        case Alice__merged_____11__1_0_____15__0_1__94_case_1
                        solve( !KU( enc(<~n, l__0__49>, ~n.2) ) @ #vk.1 )
                          case Alice__merged_____1_____9__131
                          by solve( State__Alice( <'rab_____15__0_1', 'rab__rab', %v__>,
                                                  return__var__49, 'rab__',
                                                  <l__0__49, l__1__49, l__2__49, l__3__49, l__4__49, ~n.3, 
                                                   l__6__49>,
                                                  'rab__'
                                    ) ▶₀ #vr.13 )
                        next
                          case c_enc
                          by solve( !KU( ~n.2 ) @ #vk.3 )
                        qed
                      next
                        case Alice__merged_____11__1_0_____15__0_1__94_case_2
                        solve( !KU( enc(<~n, l__0__49>, ~n.2) ) @ #vk.1 )
                          case Alice__merged_____1_____9__131
                          by solve( State__Alice( <'rab_____15__0_1', 'rab__rab', %v__>,
                                                  return__var__49, 'rab__',
                                                  <l__0__49, l__1__49, l__2__49, l__3__49, l__4__49, ~n.3, 
                                                   l__6__49>,
                                                  'rab__'
                                    ) ▶₀ #vr.13 )
                        next
                          case c_enc
                          by solve( !KU( ~n.2 ) @ #vk.3 )
                        qed
                      qed
                    next
                      case Alice__merged_____2__1_0_____9__122
                      solve( State__Alice( <'rab_____15__0_1', 'rab__rab', %v__>,
                                           return__var__49, 'rab__',
                                           <l__0__49, l__1__49, l__2__49, l__3__49, l__4__49, l__5__49, 
                                            l__6__49>,
                                           'rab__'
                             ) ▶₀ #vr.10 )
                        case Alice__merged_____11__1_0_____15__0_1__94_case_1
                        solve( !KU( enc(<~n, l__0__49>, ~n.2) ) @ #vk.2 )
                          case Alice__merged_____2__1_0_____9__122
                          by solve( !KU( ~n.2 ) @ #vk.2 )
                        next
                          case c_enc
                          by solve( !KU( ~n.2 ) @ #vk.4 )
                        qed
                      next
                        case Alice__merged_____11__1_0_____15__0_1__94_case_2
                        solve( !KU( enc(<~n, l__0__49>, ~n.2) ) @ #vk.2 )
                          case Alice__merged_____2__1_0_____9__122
                          by solve( !KU( ~n.2 ) @ #vk.2 )
                        next
                          case c_enc
                          by solve( !KU( ~n.2 ) @ #vk.4 )
                        qed
                      qed
                    next
                      case Bob__merged_____3__0_0_____9__79
                      by contradiction /* cyclic */
                    qed
                  next
                    case c_enc
                    solve( !KU( ~n.1 ) @ #vk.1 )
                      case Alice__merged_____15__0_1_____15__0_3__0_1__86
                      by solve( !KU( ~n.3 ) @ #vk.2 )
                    next
                      case Bob__merged_____3__0_0_____9__79_case_1
                      by solve( !KU( ~n.3 ) @ #vk.3 )
                    next
                      case Bob__merged_____3__0_0_____9__79_case_2
                      by solve( !KU( ~n.3 ) @ #vk.3 )
                    qed
                  qed
                qed
              qed
            qed
          qed
        qed
      qed
    next
      case Alice__merged_____1_____9__131
      solve( !ACP__( <'rab__Bob', 'rab__rab'>, 'rab__udp', 'rab__recv'
             ) ▶₃ #j )
        case Init__system__ACP__0
        solve( !Const__( 'rab__priv_key_bob', priv_key_bob__34 ) ▶₄ #j )
          case Const__priv_key_bob
          solve( !Const__( 'rab__nonce_b', nb ) ▶₅ #j )
            case Const__nonce_b
            solve( !Const__( 'rab__nonce_b', nonce_b__35 ) ▶₆ #j )
              case Const__nonce_b
              solve( !Eq__( z, ~n.1 ) ▶₇ #j )
                case Equality_gen
                solve( splitEqs(1) )
                  case split_case_1
                  solve( !KU( enc(~n.1, ~n.3) ) @ #vk )
                    case Alice__merged_____15__0_1_____15__0_3__0_1__86
                    by solve( Store( 'rab__udp', enc(<l__3__30, x>, ~n.3) ) ▶₁ #vr.1 )
                  next
                    case c_enc
                    solve( !KU( ~n.1 ) @ #vk.1 )
                      case Alice__merged_____15__0_1_____15__0_3__0_1__86
                      by solve( !KU( ~n.3 ) @ #vk.2 )
                    next
                      case Bob__merged_____3__0_0_____9__79_case_1
                      by solve( !KU( ~n.3 ) @ #vk.3 )
                    next
                      case Bob__merged_____3__0_0_____9__79_case_2
                      by solve( !KU( ~n.3 ) @ #vk.3 )
                    qed
                  qed
                next
                  case split_case_2
                  solve( !KU( enc(~n.1, ~n.3) ) @ #vk )
                    case Alice__merged_____15__0_1_____15__0_3__0_1__86
                    solve( Store( 'rab__udp', enc(x, ~n.3) ) ▶₁ #vr.1 )
                      case Alice__merged_____15__0_1_____15__0_3__0_1__86
                      solve( File__Alice( 'rab__rab', loc__0, n__0__20 ) ▶₁ #vr.10 )
                        case Alice__init_filesys_____0_____1__0
                        by solve( State__Alice( <'rab_____15__0_1', 'rab__rab', %v__>,
                                                return__var__49, 'rab__',
                                                <l__0__49, l__1__49, l__2__49, l__3__49, l__4__49, ~n.3, 
                                                 l__6__49>,
                                                'rab__'
                                  ) ▶₀ #vr.15 )
                      next
                        case Alice__merged_____1_____9__131
                        by contradiction /* cyclic */
                      qed
                    qed
                  next
                    case c_enc
                    solve( !KU( ~n.1 ) @ #vk.1 )
                      case Alice__merged_____15__0_1_____15__0_3__0_1__86
                      by solve( !KU( ~n.3 ) @ #vk.2 )
                    next
                      case Bob__merged_____3__0_0_____9__79_case_1
                      by solve( !KU( ~n.3 ) @ #vk.3 )
                    next
                      case Bob__merged_____3__0_0_____9__79_case_2
                      by solve( !KU( ~n.3 ) @ #vk.3 )
                    qed
                  qed
                next
                  case split_case_3
                  solve( !KU( enc(~n.1, ~n.3) ) @ #vk )
                    case Alice__merged_____15__0_1_____15__0_3__0_1__86
                    solve( Store( 'rab__udp', l__4__30 ) ▶₁ #vr.1 )
                      case Alice__merged_____15__0_1_____15__0_3__0_1__86
                      solve( File__Alice( 'rab__rab', loc__0, n__0__20 ) ▶₁ #vr.10 )
                        case Alice__init_filesys_____0_____1__0
                        by solve( State__Alice( <'rab_____15__0_1', 'rab__rab', %v__>,
                                                return__var__49, 'rab__',
                                                <l__0__49, l__1__49, l__2__49, l__3__49, l__4__49, ~n.3, 
                                                 l__6__49>,
                                                'rab__'
                                  ) ▶₀ #vr.15 )
                      next
                        case Alice__merged_____1_____9__131
                        by contradiction /* cyclic */
                      qed
                    next
                      case Bob__merged_____3__0_0_____9__79
                      by contradiction /* cyclic */
                    qed
                  next
                    case c_enc
                    solve( !KU( ~n.1 ) @ #vk.1 )
                      case Alice__merged_____15__0_1_____15__0_3__0_1__86
                      by solve( !KU( ~n.3 ) @ #vk.2 )
                    next
                      case Bob__merged_____3__0_0_____9__79_case_1
                      by solve( !KU( ~n.3 ) @ #vk.3 )
                    next
                      case Bob__merged_____3__0_0_____9__79_case_2
                      by solve( !KU( ~n.3 ) @ #vk.3 )
                    qed
                  qed
                qed
              qed
            qed
          qed
        qed
      qed
    next
      case Alice__merged_____2__1_0_____9__122
      solve( !ACP__( <'rab__Bob', 'rab__rab'>, 'rab__udp', 'rab__recv'
             ) ▶₃ #j )
        case Init__system__ACP__0
        solve( !Const__( 'rab__priv_key_bob', priv_key_bob__34 ) ▶₄ #j )
          case Const__priv_key_bob
          solve( !Const__( 'rab__nonce_b', nb ) ▶₅ #j )
            case Const__nonce_b
            solve( !Const__( 'rab__nonce_b', nonce_b__35 ) ▶₆ #j )
              case Const__nonce_b
              solve( !Eq__( z, ~n.1 ) ▶₇ #j )
                case Equality_gen
                solve( splitEqs(1) )
                  case split_case_1
                  solve( !KU( enc(~n.1, ~n.3) ) @ #vk )
                    case Alice__merged_____15__0_1_____15__0_3__0_1__86
                    by solve( Store( 'rab__udp', enc(<l__3__30, x>, ~n.3) ) ▶₁ #vr.1 )
                  next
                    case c_enc
                    solve( !KU( ~n.1 ) @ #vk.2 )
                      case Alice__merged_____15__0_1_____15__0_3__0_1__86
                      by solve( !KU( ~n.3 ) @ #vk.3 )
                    next
                      case Bob__merged_____3__0_0_____9__79_case_1
                      by solve( !KU( ~n.3 ) @ #vk.4 )
                    next
                      case Bob__merged_____3__0_0_____9__79_case_2
                      by solve( !KU( ~n.3 ) @ #vk.4 )
                    qed
                  qed
                next
                  case split_case_2
                  solve( !KU( enc(~n.1, ~n.3) ) @ #vk )
                    case Alice__merged_____15__0_1_____15__0_3__0_1__86
                    solve( Store( 'rab__udp', enc(x, ~n.3) ) ▶₁ #vr.1 )
                      case Alice__merged_____15__0_1_____15__0_3__0_1__86
                      solve( File__Alice( 'rab__rab', loc__0, n__0__11 ) ▶₁ #vr.10 )
                        case Alice__merged_____0_____2__1_0__133
                        solve( State__Alice( <'rab_____15__0_1', 'rab__rab', %v__>,
                                             return__var__49, 'rab__',
                                             <l__0__49, l__1__49, l__2__49, l__3__49, l__4__49, ~n.3, l__6__49
                                             >,
                                             'rab__'
                               ) ▶₀ #vr.15 )
                          case Alice__merged_____11__1_0_____15__0_1__94_case_1
                          by solve( !KU( ~n.3 ) @ #vk.1 )
                        next
                          case Alice__merged_____11__1_0_____15__0_1__94_case_2
                          by solve( !KU( ~n.3 ) @ #vk.1 )
                        qed
                      next
                        case Alice__merged_____2__1_0_____9__122
                        by contradiction /* cyclic */
                      qed
                    qed
                  next
                    case c_enc
                    solve( !KU( ~n.1 ) @ #vk.2 )
                      case Alice__merged_____15__0_1_____15__0_3__0_1__86
                      by solve( !KU( ~n.3 ) @ #vk.3 )
                    next
                      case Bob__merged_____3__0_0_____9__79_case_1
                      by solve( !KU( ~n.3 ) @ #vk.4 )
                    next
                      case Bob__merged_____3__0_0_____9__79_case_2
                      by solve( !KU( ~n.3 ) @ #vk.4 )
                    qed
                  qed
                next
                  case split_case_3
                  solve( !KU( enc(~n.1, ~n.3) ) @ #vk )
                    case Alice__merged_____15__0_1_____15__0_3__0_1__86
                    solve( Store( 'rab__udp', l__4__30 ) ▶₁ #vr.1 )
                      case Alice__merged_____15__0_1_____15__0_3__0_1__86
                      solve( File__Alice( 'rab__rab', loc__0, n__0__11 ) ▶₁ #vr.10 )
                        case Alice__merged_____0_____2__1_0__133
                        solve( State__Alice( <'rab_____15__0_1', 'rab__rab', %v__>,
                                             return__var__49, 'rab__',
                                             <l__0__49, l__1__49, l__2__49, l__3__49, l__4__49, ~n.3, l__6__49
                                             >,
                                             'rab__'
                               ) ▶₀ #vr.15 )
                          case Alice__merged_____11__1_0_____15__0_1__94_case_1
                          by solve( !KU( ~n.3 ) @ #vk.1 )
                        next
                          case Alice__merged_____11__1_0_____15__0_1__94_case_2
                          by solve( !KU( ~n.3 ) @ #vk.1 )
                        qed
                      next
                        case Alice__merged_____2__1_0_____9__122
                        by contradiction /* cyclic */
                      qed
                    next
                      case Bob__merged_____3__0_0_____9__79
                      by contradiction /* cyclic */
                    qed
                  next
                    case c_enc
                    solve( !KU( ~n.1 ) @ #vk.2 )
                      case Alice__merged_____15__0_1_____15__0_3__0_1__86
                      by solve( !KU( ~n.3 ) @ #vk.3 )
                    next
                      case Bob__merged_____3__0_0_____9__79_case_1
                      by solve( !KU( ~n.3 ) @ #vk.4 )
                    next
                      case Bob__merged_____3__0_0_____9__79_case_2
                      by solve( !KU( ~n.3 ) @ #vk.4 )
                    qed
                  qed
                qed
              qed
            qed
          qed
        qed
      qed
    next
      case Bob__merged_____3__0_0_____9__79
      solve( !ACP__( <'rab__Bob', 'rab__rab'>, 'rab__udp', 'rab__recv'
             ) ▶₃ #j )
        case Init__system__ACP__0
        solve( !Const__( 'rab__priv_key_bob', priv_key_bob__34 ) ▶₄ #j )
          case Const__priv_key_bob
          solve( !Const__( 'rab__nonce_b', nb ) ▶₅ #j )
            case Const__nonce_b
            solve( !Const__( 'rab__nonce_b', nonce_b__35 ) ▶₆ #j )
              case Const__nonce_b
              solve( !Eq__( z, ~n.1 ) ▶₇ #j )
                case Equality_gen
                solve( splitEqs(1) )
                  case split_case_1
                  solve( !KU( enc(~n.1, ~n.3) ) @ #vk )
                    case Alice__merged_____15__0_1_____15__0_3__0_1__86
                    solve( Store( 'rab__udp', enc(<l__3__30, x>, ~n.3) ) ▶₁ #vr.1 )
                      case Alice__merged_____1_____9__131
                      solve( State__Alice( <'rab_____15__0_1', 'rab__rab', %v__>,
                                           return__var__49, 'rab__',
                                           <l__0__49, l__1__49, l__2__49, l__3__49, l__4__49, ~n.3, l__6__49>,
                                           'rab__'
                             ) ▶₀ #vr.11 )
                        case Alice__merged_____11__1_0_____15__0_1__94
                        solve( !KU( enc(<~n, l__0__49>, ~n.2) ) @ #vk.1 )
                          case c_enc
                          by solve( !KU( ~n.2 ) @ #vk.3 )
                        qed
                      qed
                    next
                      case Alice__merged_____2__1_0_____9__122
                      by solve( !KU( ~n.3 ) @ #vk.1 )
                    qed
                  next
                    case c_enc
                    solve( !KU( ~n.1 ) @ #vk.1 )
                      case Alice__merged_____15__0_1_____15__0_3__0_1__86
                      by solve( !KU( ~n.3 ) @ #vk.2 )
                    next
                      case Bob__merged_____3__0_0_____9__79_case_1
                      by solve( !KU( ~n.3 ) @ #vk.3 )
                    next
                      case Bob__merged_____3__0_0_____9__79_case_2
                      by solve( !KU( ~n.3 ) @ #vk.3 )
                    qed
                  qed
                next
                  case split_case_2
                  solve( !KU( enc(~n.1, ~n.3) ) @ #vk )
                    case Alice__merged_____15__0_1_____15__0_3__0_1__86
                    solve( Store( 'rab__udp', enc(x, ~n.3) ) ▶₁ #vr.1 )
                      case Alice__merged_____15__0_1_____15__0_3__0_1__86
                      solve( State__Alice( <'rab_____15__0_1', 'rab__rab', %v__>,
                                           return__var__49, 'rab__',
                                           <l__0__49, l__1__49, l__2__49, l__3__49, l__4__49, ~n.3, l__6__49>,
                                           'rab__'
                             ) ▶₀ #vr.11 )
                        case Alice__merged_____11__1_0_____15__0_1__94_case_1
                        solve( !KU( enc(<~n, l__0__49>, ~n.2) ) @ #vk.1 )
                          case c_enc
                          by solve( !KU( ~n.2 ) @ #vk.3 )
                        qed
                      next
                        case Alice__merged_____11__1_0_____15__0_1__94_case_2
                        by solve( !KU( ~n.3 ) @ #vk.2 )
                      next
                        case Alice__merged_____11__1_0_____15__0_1__94_case_3
                        solve( !KU( enc(<~n, l__0__49>, ~n.2) ) @ #vk.1 )
                          case c_enc
                          by solve( !KU( ~n.2 ) @ #vk.3 )
                        qed
                      next
                        case Alice__merged_____11__1_0_____15__0_1__94_case_4
                        by solve( !KU( ~n.3 ) @ #vk.2 )
                      qed
                    next
                      case Alice__merged_____1_____9__131
                      by contradiction /* non-normal terms */
                    next
                      case Alice__merged_____2__1_0_____9__122
                      by contradiction /* non-normal terms */
                    qed
                  next
                    case c_enc
                    solve( !KU( ~n.1 ) @ #vk.1 )
                      case Alice__merged_____15__0_1_____15__0_3__0_1__86
                      by solve( !KU( ~n.3 ) @ #vk.2 )
                    next
                      case Bob__merged_____3__0_0_____9__79_case_1
                      by solve( !KU( ~n.3 ) @ #vk.3 )
                    next
                      case Bob__merged_____3__0_0_____9__79_case_2
                      by solve( !KU( ~n.3 ) @ #vk.3 )
                    qed
                  qed
                next
                  case split_case_3
                  solve( !KU( enc(~n.1, ~n.3) ) @ #vk )
                    case Alice__merged_____15__0_1_____15__0_3__0_1__86
                    solve( Store( 'rab__udp', l__4__30 ) ▶₁ #vr.1 )
                      case Alice__merged_____15__0_1_____15__0_3__0_1__86
                      solve( State__Alice( <'rab_____15__0_1', 'rab__rab', %v__>,
                                           return__var__49, 'rab__',
                                           <l__0__49, l__1__49, l__2__49, l__3__49, l__4__49, ~n.3, l__6__49>,
                                           'rab__'
                             ) ▶₀ #vr.11 )
                        case Alice__merged_____11__1_0_____15__0_1__94_case_1
                        solve( !KU( enc(<~n, l__0__49>, ~n.2) ) @ #vk.1 )
                          case c_enc
                          by solve( !KU( ~n.2 ) @ #vk.3 )
                        qed
                      next
                        case Alice__merged_____11__1_0_____15__0_1__94_case_2
                        by solve( !KU( ~n.3 ) @ #vk.2 )
                      next
                        case Alice__merged_____11__1_0_____15__0_1__94_case_3
                        solve( !KU( enc(<~n, l__0__49>, ~n.2) ) @ #vk.1 )
                          case c_enc
                          by solve( !KU( ~n.2 ) @ #vk.3 )
                        qed
                      next
                        case Alice__merged_____11__1_0_____15__0_1__94_case_4
                        by solve( !KU( ~n.3 ) @ #vk.2 )
                      qed
                    next
                      case Alice__merged_____1_____9__131
                      solve( State__Alice( <'rab_____15__0_1', 'rab__rab', %v__>,
                                           return__var__49, 'rab__',
                                           <l__0__49, l__1__49, l__2__49, l__3__49, l__4__49, ~n.3, l__6__49>,
                                           'rab__'
                             ) ▶₀ #vr.11 )
                        case Alice__merged_____11__1_0_____15__0_1__94
                        by contradiction /* non-normal terms */
                      qed
                    next
                      case Alice__merged_____2__1_0_____9__122
                      solve( State__Alice( <'rab_____15__0_1', 'rab__rab', %v__>,
                                           return__var__49, 'rab__',
                                           <l__0__49, l__1__49, l__2__49, l__3__49, l__4__49, ~n.3, l__6__49>,
                                           'rab__'
                             ) ▶₀ #vr.11 )
                        case Alice__merged_____11__1_0_____15__0_1__94
                        by contradiction /* non-normal terms */
                      qed
                    qed
                  next
                    case c_enc
                    solve( !KU( ~n.1 ) @ #vk.1 )
                      case Alice__merged_____15__0_1_____15__0_3__0_1__86
                      by solve( !KU( ~n.3 ) @ #vk.2 )
                    next
                      case Bob__merged_____3__0_0_____9__79_case_1
                      by solve( !KU( ~n.3 ) @ #vk.3 )
                    next
                      case Bob__merged_____3__0_0_____9__79_case_2
                      by solve( !KU( ~n.3 ) @ #vk.3 )
                    qed
                  qed
                qed
              qed
            qed
          qed
        qed
      qed
    qed
  next
    case Bob__merged_____9_____11__1_0__63_case_2
    solve( Store( 'rab__udp', n__0__30 ) ▶₁ #j )
      case Alice__merged_____15__0_1_____15__0_3__0_1__86
      solve( !ACP__( <'rab__Bob', 'rab__rab'>, 'rab__udp', 'rab__recv'
             ) ▶₃ #j )
        case Init__system__ACP__0
        solve( !Const__( 'rab__priv_key_bob', priv_key_bob__34 ) ▶₄ #j )
          case Const__priv_key_bob
          solve( !Const__( 'rab__nonce_b', nb ) ▶₅ #j )
            case Const__nonce_b
            solve( !Const__( 'rab__nonce_b', nonce_b__35 ) ▶₆ #j )
              case Const__nonce_b
              solve( !Eq__( z, ~n.1 ) ▶₇ #j )
                case Equality_gen
                solve( splitEqs(1) )
                  case split_case_1
                  solve( !KU( enc(~n.1, ~n.3) ) @ #vk )
                    case Alice__merged_____15__0_1_____15__0_3__0_1__86
                    solve( !KU( enc(<l__3__30, x>, ~n.3) ) @ #vk.1 )
                      case Alice__merged_____1_____9__131
                      solve( Store( 'rab__udp', n__0__9 ) ▶₁ #vr.1 )
                        case Alice__merged_____15__0_1_____15__0_3__0_1__86
                        solve( State__Alice( <'rab_____15__0_1', 'rab__rab', %v__>,
                                             return__var__49, 'rab__',
                                             <l__0__49, l__1__49, l__2__49, l__3__49, l__4__49, l__5__49, 
                                              l__6__49>,
                                             'rab__'
                               ) ▶₀ #vr.10 )
                          case Alice__merged_____11__1_0_____15__0_1__94_case_1
                          solve( !KU( enc(<~n, l__0__49>, ~n.2) ) @ #vk.2 )
                            case c_enc
                            by solve( !KU( ~n.2 ) @ #vk.4 )
                          qed
                        next
                          case Alice__merged_____11__1_0_____15__0_1__94_case_2
                          solve( !KU( enc(<~n, l__0__49>, ~n.2) ) @ #vk.2 )
                            case c_enc
                            by solve( !KU( ~n.2 ) @ #vk.4 )
                          qed
                        next
                          case Alice__merged_____11__1_0_____15__0_1__94_case_3
                          solve( !KU( enc(<~n, l__0__49>, ~n.2) ) @ #vk.2 )
                            case c_enc
                            by solve( !KU( ~n.2 ) @ #vk.4 )
                          qed
                        qed
                      next
                        case Alice__merged_____1_____9__131
                        solve( State__Alice( <'rab_____15__0_1', 'rab__rab', %v__>,
                                             return__var__49, 'rab__',
                                             <l__0__49, l__1__49, l__2__49, l__3__49, l__4__49, l__5__49, 
                                              l__6__49>,
                                             'rab__'
                               ) ▶₀ #vr.10 )
                          case Alice__merged_____11__1_0_____15__0_1__94_case_1
                          solve( !KU( enc(<~n, l__0__49>, ~n.2) ) @ #vk.2 )
                            case c_enc
                            by solve( !KU( ~n.2 ) @ #vk.4 )
                          qed
                        next
                          case Alice__merged_____11__1_0_____15__0_1__94_case_2
                          solve( !KU( enc(<~n, l__0__49>, ~n.2) ) @ #vk.2 )
                            case c_enc
                            by solve( !KU( ~n.2 ) @ #vk.4 )
                          qed
                        qed
                      next
                        case Bob__merged_____3__1_0_____9__75
                        by contradiction /* cyclic */
                      qed
                    next
                      case Alice__merged_____2__1_0_____9__122
                      by solve( !KU( ~n.3 ) @ #vk.2 )
                    next
                      case c_enc
                      by solve( !KU( ~n.3 ) @ #vk.3 )
                    qed
                  next
                    case c_enc
                    solve( !KU( ~n.1 ) @ #vk.2 )
                      case Alice__merged_____15__0_1_____15__0_3__0_1__86
                      by solve( !KU( ~n.3 ) @ #vk.3 )
                    next
                      case Bob__merged_____3__1_0_____9__75_case_1
                      by solve( !KU( ~n.3 ) @ #vk.4 )
                    next
                      case Bob__merged_____3__1_0_____9__75_case_2
                      by solve( !KU( ~n.3 ) @ #vk.4 )
                    qed
                  qed
                next
                  case split_case_2
                  solve( !KU( enc(~n.1, ~n.3) ) @ #vk )
                    case Alice__merged_____15__0_1_____15__0_3__0_1__86
                    solve( !KU( enc(x, ~n.3) ) @ #vk.1 )
                      case Alice__merged_____15__0_1_____15__0_3__0_1__86
                      solve( Store( 'rab__udp', n__0__9 ) ▶₁ #vr.1 )
                        case Alice__merged_____15__0_1_____15__0_3__0_1__86
                        solve( State__Alice( <'rab_____15__0_1', 'rab__rab', %v__>,
                                             return__var__49, 'rab__',
                                             <l__0__49, l__1__49, l__2__49, l__3__49, l__4__49, l__5__49, 
                                              l__6__49>,
                                             'rab__'
                               ) ▶₀ #vr.10 )
                          case Alice__merged_____11__0_0_____15__0_1__98_case_1
                          by solve( State__Alice( <'rab_____15__0_1', 'rab__rab', %v__>,
                                                  return__var__49, 'rab__',
                                                  <l__0__49, l__1__49, l__2__49, l__3__49, l__4__49, ~n.3, 
                                                   l__6__49>,
                                                  'rab__'
                                    ) ▶₀ #vr.13 )
                        next
                          case Alice__merged_____11__0_0_____15__0_1__98_case_2
                          by solve( !KU( ~n.2 ) @ #vk.1 )
                        next
                          case Alice__merged_____11__1_0_____15__0_1__94_case_1
                          solve( !KU( enc(<~n, l__0__49>, ~n.2) ) @ #vk.1 )
                            case Alice__merged_____1_____9__131
                            by solve( State__Alice( <'rab_____15__0_1', 'rab__rab', %v__>,
                                                    return__var__49, 'rab__',
                                                    <l__0__49, l__1__49, l__2__49, l__3__49, l__4__49, ~n.3, 
                                                     l__6__49>,
                                                    'rab__'
                                      ) ▶₀ #vr.13 )
                          next
                            case c_enc
                            by solve( !KU( ~n.2 ) @ #vk.3 )
                          qed
                        next
                          case Alice__merged_____11__1_0_____15__0_1__94_case_2
                          solve( !KU( enc(<~n, l__0__49>, ~n.2) ) @ #vk.1 )
                            case Alice__merged_____2__1_0_____9__122
                            by solve( !KU( ~n.2 ) @ #vk.2 )
                          next
                            case c_enc
                            by solve( !KU( ~n.2 ) @ #vk.4 )
                          qed
                        next
                          case Alice__merged_____11__1_0_____15__0_1__94_case_3
                          solve( !KU( enc(<~n, l__0__49>, ~n.2) ) @ #vk.1 )
                            case Alice__merged_____1_____9__131
                            by solve( State__Alice( <'rab_____15__0_1', 'rab__rab', %v__>,
                                                    return__var__49, 'rab__',
                                                    <l__0__49, l__1__49, l__2__49, l__3__49, l__4__49, ~n.3, 
                                                     l__6__49>,
                                                    'rab__'
                                      ) ▶₀ #vr.13 )
                          next
                            case c_enc
                            by solve( !KU( ~n.2 ) @ #vk.3 )
                          qed
                        next
                          case Alice__merged_____11__1_0_____15__0_1__94_case_4
                          solve( !KU( enc(<~n, l__0__49>, ~n.2) ) @ #vk.1 )
                            case Alice__merged_____2__1_0_____9__122
                            by solve( !KU( ~n.2 ) @ #vk.2 )
                          next
                            case c_enc
                            by solve( !KU( ~n.2 ) @ #vk.4 )
                          qed
                        next
                          case Alice__merged_____11__1_0_____15__0_1__94_case_5
                          solve( !KU( enc(<~n, l__0__49>, ~n.2) ) @ #vk.1 )
                            case Alice__merged_____1_____9__131
                            by solve( State__Alice( <'rab_____15__0_1', 'rab__rab', %v__>,
                                                    return__var__49, 'rab__',
                                                    <l__0__49, l__1__49, l__2__49, l__3__49, l__4__49, ~n.3, 
                                                     l__6__49>,
                                                    'rab__'
                                      ) ▶₀ #vr.13 )
                          next
                            case c_enc
                            by solve( !KU( ~n.2 ) @ #vk.3 )
                          qed
                        next
                          case Alice__merged_____11__1_0_____15__0_1__94_case_6
                          solve( !KU( enc(<~n, l__0__49>, ~n.2) ) @ #vk.1 )
                            case Alice__merged_____2__1_0_____9__122
                            by solve( !KU( ~n.2 ) @ #vk.2 )
                          next
                            case c_enc
                            by solve( !KU( ~n.2 ) @ #vk.4 )
                          qed
                        qed
                      next
                        case Alice__merged_____1_____9__131
                        solve( State__Alice( <'rab_____15__0_1', 'rab__rab', %v__>,
                                             return__var__49, 'rab__',
                                             <l__0__49, l__1__49, l__2__49, l__3__49, l__4__49, l__5__49, 
                                              l__6__49>,
                                             'rab__'
                               ) ▶₀ #vr.10 )
                          case Alice__merged_____11__1_0_____15__0_1__94_case_1
                          solve( !KU( enc(<~n, l__0__49>, ~n.2) ) @ #vk.1 )
                            case Alice__merged_____1_____9__131
                            by solve( State__Alice( <'rab_____15__0_1', 'rab__rab', %v__>,
                                                    return__var__49, 'rab__',
                                                    <l__0__49, l__1__49, l__2__49, l__3__49, l__4__49, ~n.3, 
                                                     l__6__49>,
                                                    'rab__'
                                      ) ▶₀ #vr.13 )
                          next
                            case c_enc
                            by solve( !KU( ~n.2 ) @ #vk.3 )
                          qed
                        next
                          case Alice__merged_____11__1_0_____15__0_1__94_case_2
                          solve( !KU( enc(<~n, l__0__49>, ~n.2) ) @ #vk.1 )
                            case Alice__merged_____1_____9__131
                            by solve( State__Alice( <'rab_____15__0_1', 'rab__rab', %v__>,
                                                    return__var__49, 'rab__',
                                                    <l__0__49, l__1__49, l__2__49, l__3__49, l__4__49, ~n.3, 
                                                     l__6__49>,
                                                    'rab__'
                                      ) ▶₀ #vr.13 )
                          next
                            case c_enc
                            by solve( !KU( ~n.2 ) @ #vk.3 )
                          qed
                        qed
                      next
                        case Alice__merged_____2__1_0_____9__122
                        solve( State__Alice( <'rab_____15__0_1', 'rab__rab', %v__>,
                                             return__var__49, 'rab__',
                                             <l__0__49, l__1__49, l__2__49, l__3__49, l__4__49, l__5__49, 
                                              l__6__49>,
                                             'rab__'
                               ) ▶₀ #vr.10 )
                          case Alice__merged_____11__1_0_____15__0_1__94_case_1
                          solve( !KU( enc(<~n, l__0__49>, ~n.2) ) @ #vk.2 )
                            case Alice__merged_____2__1_0_____9__122
                            by solve( !KU( ~n.2 ) @ #vk.2 )
                          next
                            case c_enc
                            by solve( !KU( ~n.2 ) @ #vk.4 )
                          qed
                        next
                          case Alice__merged_____11__1_0_____15__0_1__94_case_2
                          solve( !KU( enc(<~n, l__0__49>, ~n.2) ) @ #vk.2 )
                            case Alice__merged_____2__1_0_____9__122
                            by solve( !KU( ~n.2 ) @ #vk.2 )
                          next
                            case c_enc
                            by solve( !KU( ~n.2 ) @ #vk.4 )
                          qed
                        qed
                      next
                        case Bob__merged_____3__1_0_____9__75
                        by contradiction /* cyclic */
                      qed
                    next
                      case Alice__merged_____1_____9__131
                      by contradiction /* non-normal terms */
                    next
                      case Alice__merged_____2__1_0_____9__122
                      by contradiction /* non-normal terms */
                    next
                      case c_enc
                      by solve( !KU( ~n.3 ) @ #vk.3 )
                    qed
                  next
                    case c_enc
                    solve( !KU( ~n.1 ) @ #vk.2 )
                      case Alice__merged_____15__0_1_____15__0_3__0_1__86
                      by solve( !KU( ~n.3 ) @ #vk.3 )
                    next
                      case Bob__merged_____3__1_0_____9__75_case_1
                      by solve( !KU( ~n.3 ) @ #vk.4 )
                    next
                      case Bob__merged_____3__1_0_____9__75_case_2
                      by solve( !KU( ~n.3 ) @ #vk.4 )
                    qed
                  qed
                next
                  case split_case_3
                  solve( !KU( enc(~n.1, ~n.3) ) @ #vk )
                    case Alice__merged_____15__0_1_____15__0_3__0_1__86
                    solve( Store( 'rab__udp', n__0__9 ) ▶₁ #vr.1 )
                      case Alice__merged_____15__0_1_____15__0_3__0_1__86
                      solve( State__Alice( <'rab_____15__0_1', 'rab__rab', %v__>,
                                           return__var__49, 'rab__',
                                           <l__0__49, l__1__49, l__2__49, l__3__49, l__4__49, l__5__49, 
                                            l__6__49>,
                                           'rab__'
                             ) ▶₀ #vr.10 )
                        case Alice__merged_____11__0_0_____15__0_1__98_case_1
                        by solve( State__Alice( <'rab_____15__0_1', 'rab__rab', %v__>,
                                                return__var__49, 'rab__',
                                                <l__0__49, l__1__49, l__2__49, l__3__49, l__4__49, ~n.3, 
                                                 l__6__49>,
                                                'rab__'
                                  ) ▶₀ #vr.13 )
                      next
                        case Alice__merged_____11__0_0_____15__0_1__98_case_2
                        by solve( !KU( ~n.2 ) @ #vk.2 )
                      next
                        case Alice__merged_____11__1_0_____15__0_1__94_case_1
                        solve( !KU( enc(<~n, l__0__49>, ~n.2) ) @ #vk.2 )
                          case Alice__merged_____1_____9__131
                          by solve( State__Alice( <'rab_____15__0_1', 'rab__rab', %v__>,
                                                  return__var__49, 'rab__',
                                                  <l__0__49, l__1__49, l__2__49, l__3__49, l__4__49, ~n.3, 
                                                   l__6__49>,
                                                  'rab__'
                                    ) ▶₀ #vr.13 )
                        next
                          case c_enc
                          by solve( !KU( ~n.2 ) @ #vk.4 )
                        qed
                      next
                        case Alice__merged_____11__1_0_____15__0_1__94_case_2
                        solve( !KU( enc(<~n, l__0__49>, ~n.2) ) @ #vk.2 )
                          case Alice__merged_____2__1_0_____9__122
                          by solve( !KU( ~n.2 ) @ #vk.3 )
                        next
                          case c_enc
                          by solve( !KU( ~n.2 ) @ #vk.5 )
                        qed
                      next
                        case Alice__merged_____11__1_0_____15__0_1__94_case_3
                        solve( !KU( enc(<~n, l__0__49>, ~n.2) ) @ #vk.2 )
                          case Alice__merged_____1_____9__131
                          by solve( State__Alice( <'rab_____15__0_1', 'rab__rab', %v__>,
                                                  return__var__49, 'rab__',
                                                  <l__0__49, l__1__49, l__2__49, l__3__49, l__4__49, ~n.3, 
                                                   l__6__49>,
                                                  'rab__'
                                    ) ▶₀ #vr.13 )
                        next
                          case c_enc
                          by solve( !KU( ~n.2 ) @ #vk.4 )
                        qed
                      next
                        case Alice__merged_____11__1_0_____15__0_1__94_case_4
                        solve( !KU( enc(<~n, l__0__49>, ~n.2) ) @ #vk.2 )
                          case Alice__merged_____2__1_0_____9__122
                          by solve( !KU( ~n.2 ) @ #vk.3 )
                        next
                          case c_enc
                          by solve( !KU( ~n.2 ) @ #vk.5 )
                        qed
                      next
                        case Alice__merged_____11__1_0_____15__0_1__94_case_5
                        solve( !KU( enc(<~n, l__0__49>, ~n.2) ) @ #vk.2 )
                          case Alice__merged_____1_____9__131
                          by solve( State__Alice( <'rab_____15__0_1', 'rab__rab', %v__>,
                                                  return__var__49, 'rab__',
                                                  <l__0__49, l__1__49, l__2__49, l__3__49, l__4__49, ~n.3, 
                                                   l__6__49>,
                                                  'rab__'
                                    ) ▶₀ #vr.13 )
                        next
                          case c_enc
                          by solve( !KU( ~n.2 ) @ #vk.4 )
                        qed
                      next
                        case Alice__merged_____11__1_0_____15__0_1__94_case_6
                        solve( !KU( enc(<~n, l__0__49>, ~n.2) ) @ #vk.2 )
                          case Alice__merged_____2__1_0_____9__122
                          by solve( !KU( ~n.2 ) @ #vk.3 )
                        next
                          case c_enc
                          by solve( !KU( ~n.2 ) @ #vk.5 )
                        qed
                      qed
                    next
                      case Alice__merged_____1_____9__131
                      solve( State__Alice( <'rab_____15__0_1', 'rab__rab', %v__>,
                                           return__var__49, 'rab__',
                                           <l__0__49, l__1__49, l__2__49, l__3__49, l__4__49, l__5__49, 
                                            l__6__49>,
                                           'rab__'
                             ) ▶₀ #vr.10 )
                        case Alice__merged_____11__1_0_____15__0_1__94_case_1
                        solve( !KU( enc(<~n, l__0__49>, ~n.2) ) @ #vk.2 )
                          case Alice__merged_____1_____9__131
                          by solve( State__Alice( <'rab_____15__0_1', 'rab__rab', %v__>,
                                                  return__var__49, 'rab__',
                                                  <l__0__49, l__1__49, l__2__49, l__3__49, l__4__49, ~n.3, 
                                                   l__6__49>,
                                                  'rab__'
                                    ) ▶₀ #vr.13 )
                        next
                          case c_enc
                          by solve( !KU( ~n.2 ) @ #vk.4 )
                        qed
                      next
                        case Alice__merged_____11__1_0_____15__0_1__94_case_2
                        solve( !KU( enc(<~n, l__0__49>, ~n.2) ) @ #vk.2 )
                          case Alice__merged_____1_____9__131
                          by solve( State__Alice( <'rab_____15__0_1', 'rab__rab', %v__>,
                                                  return__var__49, 'rab__',
                                                  <l__0__49, l__1__49, l__2__49, l__3__49, l__4__49, ~n.3, 
                                                   l__6__49>,
                                                  'rab__'
                                    ) ▶₀ #vr.13 )
                        next
                          case c_enc
                          by solve( !KU( ~n.2 ) @ #vk.4 )
                        qed
                      qed
                    next
                      case Alice__merged_____2__1_0_____9__122
                      solve( State__Alice( <'rab_____15__0_1', 'rab__rab', %v__>,
                                           return__var__49, 'rab__',
                                           <l__0__49, l__1__49, l__2__49, l__3__49, l__4__49, l__5__49, 
                                            l__6__49>,
                                           'rab__'
                             ) ▶₀ #vr.10 )
                        case Alice__merged_____11__1_0_____15__0_1__94_case_1
                        solve( !KU( enc(<~n, l__0__49>, ~n.2) ) @ #vk.3 )
                          case Alice__merged_____2__1_0_____9__122
                          by solve( !KU( ~n.2 ) @ #vk.3 )
                        next
                          case c_enc
                          by solve( !KU( ~n.2 ) @ #vk.5 )
                        qed
                      next
                        case Alice__merged_____11__1_0_____15__0_1__94_case_2
                        solve( !KU( enc(<~n, l__0__49>, ~n.2) ) @ #vk.3 )
                          case Alice__merged_____2__1_0_____9__122
                          by solve( !KU( ~n.2 ) @ #vk.3 )
                        next
                          case c_enc
                          by solve( !KU( ~n.2 ) @ #vk.5 )
                        qed
                      qed
                    next
                      case Bob__merged_____3__1_0_____9__75
                      by contradiction /* cyclic */
                    qed
                  next
                    case c_enc
                    solve( !KU( ~n.1 ) @ #vk.2 )
                      case Alice__merged_____15__0_1_____15__0_3__0_1__86
                      by solve( !KU( ~n.3 ) @ #vk.3 )
                    next
                      case Bob__merged_____3__1_0_____9__75_case_1
                      by solve( !KU( ~n.3 ) @ #vk.4 )
                    next
                      case Bob__merged_____3__1_0_____9__75_case_2
                      by solve( !KU( ~n.3 ) @ #vk.4 )
                    qed
                  qed
                qed
              qed
            qed
          qed
        qed
      qed
    next
      case Alice__merged_____1_____9__131
      solve( !ACP__( <'rab__Bob', 'rab__rab'>, 'rab__udp', 'rab__recv'
             ) ▶₃ #j )
        case Init__system__ACP__0
        solve( !Const__( 'rab__priv_key_bob', priv_key_bob__34 ) ▶₄ #j )
          case Const__priv_key_bob
          solve( !Const__( 'rab__nonce_b', nb ) ▶₅ #j )
            case Const__nonce_b
            solve( !Const__( 'rab__nonce_b', nonce_b__35 ) ▶₆ #j )
              case Const__nonce_b
              solve( !Eq__( z, ~n.1 ) ▶₇ #j )
                case Equality_gen
                solve( splitEqs(1) )
                  case split_case_1
                  solve( !KU( enc(~n.1, ~n.3) ) @ #vk )
                    case Alice__merged_____15__0_1_____15__0_3__0_1__86
                    solve( !KU( enc(<l__3__30, x>, ~n.3) ) @ #vk.1 )
                      case Alice__merged_____1_____9__131
                      solve( Store( 'rab__udp', n__0__9 ) ▶₁ #vr.1 )
                        case Alice__merged_____15__0_1_____15__0_3__0_1__86
                        solve( File__Alice( 'rab__rab', loc__0, ~n.3 ) ▶₁ #vr.10 )
                          case Alice__merged_____1_____9__131
                          by contradiction /* cyclic */
                        qed
                      next
                        case Bob__merged_____3__1_0_____9__75
                        by contradiction /* cyclic */
                      qed
                    next
                      case c_enc
                      by solve( !KU( ~n.3 ) @ #vk.3 )
                    qed
                  next
                    case c_enc
                    solve( !KU( ~n.1 ) @ #vk.2 )
                      case Alice__merged_____15__0_1_____15__0_3__0_1__86
                      by solve( !KU( ~n.3 ) @ #vk.3 )
                    next
                      case Bob__merged_____3__1_0_____9__75_case_1
                      by solve( !KU( ~n.3 ) @ #vk.4 )
                    next
                      case Bob__merged_____3__1_0_____9__75_case_2
                      by solve( !KU( ~n.3 ) @ #vk.4 )
                    qed
                  qed
                next
                  case split_case_2
                  solve( !KU( enc(~n.1, ~n.3) ) @ #vk )
                    case Alice__merged_____15__0_1_____15__0_3__0_1__86
                    solve( !KU( enc(x, ~n.3) ) @ #vk.1 )
                      case Alice__merged_____15__0_1_____15__0_3__0_1__86
                      solve( Store( 'rab__udp', n__0__9 ) ▶₁ #vr.1 )
                        case Alice__merged_____15__0_1_____15__0_3__0_1__86
                        solve( File__Alice( 'rab__rab', loc__0, n__0__20 ) ▶₁ #vr.10 )
                          case Alice__init_filesys_____0_____1__0
                          by solve( State__Alice( <'rab_____15__0_1', 'rab__rab', %v__>,
                                                  return__var__49, 'rab__',
                                                  <l__0__49, l__1__49, l__2__49, l__3__49, l__4__49, ~n.3, 
                                                   l__6__49>,
                                                  'rab__'
                                    ) ▶₀ #vr.15 )
                        next
                          case Alice__merged_____1_____9__131
                          by contradiction /* cyclic */
                        qed
                      next
                        case Bob__merged_____3__1_0_____9__75
                        by contradiction /* cyclic */
                      qed
                    next
                      case Alice__merged_____1_____9__131
                      by contradiction /* non-normal terms */
                    next
                      case c_enc
                      by solve( !KU( ~n.3 ) @ #vk.3 )
                    qed
                  next
                    case c_enc
                    solve( !KU( ~n.1 ) @ #vk.2 )
                      case Alice__merged_____15__0_1_____15__0_3__0_1__86
                      by solve( !KU( ~n.3 ) @ #vk.3 )
                    next
                      case Bob__merged_____3__1_0_____9__75_case_1
                      by solve( !KU( ~n.3 ) @ #vk.4 )
                    next
                      case Bob__merged_____3__1_0_____9__75_case_2
                      by solve( !KU( ~n.3 ) @ #vk.4 )
                    qed
                  qed
                next
                  case split_case_3
                  solve( !KU( enc(~n.1, ~n.3) ) @ #vk )
                    case Alice__merged_____15__0_1_____15__0_3__0_1__86
                    solve( Store( 'rab__udp', n__0__9 ) ▶₁ #vr.1 )
                      case Alice__merged_____15__0_1_____15__0_3__0_1__86
                      solve( File__Alice( 'rab__rab', loc__0, n__0__20 ) ▶₁ #vr.10 )
                        case Alice__init_filesys_____0_____1__0
                        by solve( State__Alice( <'rab_____15__0_1', 'rab__rab', %v__>,
                                                return__var__49, 'rab__',
                                                <l__0__49, l__1__49, l__2__49, l__3__49, l__4__49, ~n.3, 
                                                 l__6__49>,
                                                'rab__'
                                  ) ▶₀ #vr.15 )
                      next
                        case Alice__merged_____1_____9__131
                        by contradiction /* cyclic */
                      qed
                    next
                      case Bob__merged_____3__1_0_____9__75
                      by contradiction /* cyclic */
                    qed
                  next
                    case c_enc
                    solve( !KU( ~n.1 ) @ #vk.2 )
                      case Alice__merged_____15__0_1_____15__0_3__0_1__86
                      by solve( !KU( ~n.3 ) @ #vk.3 )
                    next
                      case Bob__merged_____3__1_0_____9__75_case_1
                      by solve( !KU( ~n.3 ) @ #vk.4 )
                    next
                      case Bob__merged_____3__1_0_____9__75_case_2
                      by solve( !KU( ~n.3 ) @ #vk.4 )
                    qed
                  qed
                qed
              qed
            qed
          qed
        qed
      qed
    next
      case Alice__merged_____2__1_0_____9__122
      solve( !ACP__( <'rab__Bob', 'rab__rab'>, 'rab__udp', 'rab__recv'
             ) ▶₃ #j )
        case Init__system__ACP__0
        solve( !Const__( 'rab__priv_key_bob', priv_key_bob__34 ) ▶₄ #j )
          case Const__priv_key_bob
          solve( !Const__( 'rab__nonce_b', nb ) ▶₅ #j )
            case Const__nonce_b
            solve( !Const__( 'rab__nonce_b', nonce_b__35 ) ▶₆ #j )
              case Const__nonce_b
              solve( !Eq__( z, ~n.1 ) ▶₇ #j )
                case Equality_gen
                solve( splitEqs(1) )
                  case split_case_1
                  solve( !KU( enc(~n.1, ~n.3) ) @ #vk )
                    case Alice__merged_____15__0_1_____15__0_3__0_1__86
                    solve( !KU( enc(<l__3__30, x>, ~n.3) ) @ #vk.1 )
                      case Alice__merged_____2__1_0_____9__122
                      by solve( !KU( ~n.3 ) @ #vk.2 )
                    next
                      case c_enc
                      by solve( !KU( ~n.3 ) @ #vk.4 )
                    qed
                  next
                    case c_enc
                    solve( !KU( ~n.1 ) @ #vk.3 )
                      case Alice__merged_____15__0_1_____15__0_3__0_1__86
                      by solve( !KU( ~n.3 ) @ #vk.4 )
                    next
                      case Bob__merged_____3__1_0_____9__75_case_1
                      by solve( !KU( ~n.3 ) @ #vk.5 )
                    next
                      case Bob__merged_____3__1_0_____9__75_case_2
                      by solve( !KU( ~n.3 ) @ #vk.5 )
                    qed
                  qed
                next
                  case split_case_2
                  solve( !KU( enc(~n.1, ~n.3) ) @ #vk )
                    case Alice__merged_____15__0_1_____15__0_3__0_1__86
                    solve( !KU( enc(x, ~n.3) ) @ #vk.1 )
                      case Alice__merged_____15__0_1_____15__0_3__0_1__86
                      solve( Store( 'rab__udp', n__0__9 ) ▶₁ #vr.1 )
                        case Alice__merged_____15__0_1_____15__0_3__0_1__86
                        solve( File__Alice( 'rab__rab', loc__0, n__0__11 ) ▶₁ #vr.10 )
                          case Alice__merged_____0_____2__1_0__133
                          solve( State__Alice( <'rab_____15__0_1', 'rab__rab', %v__>,
                                               return__var__49, 'rab__',
                                               <l__0__49, l__1__49, l__2__49, l__3__49, l__4__49, ~n.3, 
                                                l__6__49>,
                                               'rab__'
                                 ) ▶₀ #vr.15 )
                            case Alice__merged_____11__1_0_____15__0_1__94_case_1
                            by solve( !KU( ~n.3 ) @ #vk.1 )
                          next
                            case Alice__merged_____11__1_0_____15__0_1__94_case_2
                            by contradiction /* cyclic */
                          qed
                        next
                          case Alice__merged_____2__1_0_____9__122
                          by contradiction /* cyclic */
                        qed
                      next
                        case Bob__merged_____3__1_0_____9__75
                        by contradiction /* cyclic */
                      qed
                    next
                      case Alice__merged_____2__1_0_____9__122
                      by contradiction /* non-normal terms */
                    next
                      case c_enc
                      by solve( !KU( ~n.3 ) @ #vk.4 )
                    qed
                  next
                    case c_enc
                    solve( !KU( ~n.1 ) @ #vk.3 )
                      case Alice__merged_____15__0_1_____15__0_3__0_1__86
                      by solve( !KU( ~n.3 ) @ #vk.4 )
                    next
                      case Bob__merged_____3__1_0_____9__75_case_1
                      by solve( !KU( ~n.3 ) @ #vk.5 )
                    next
                      case Bob__merged_____3__1_0_____9__75_case_2
                      by solve( !KU( ~n.3 ) @ #vk.5 )
                    qed
                  qed
                next
                  case split_case_3
                  solve( !KU( enc(~n.1, ~n.3) ) @ #vk )
                    case Alice__merged_____15__0_1_____15__0_3__0_1__86
                    solve( Store( 'rab__udp', n__0__9 ) ▶₁ #vr.1 )
                      case Alice__merged_____15__0_1_____15__0_3__0_1__86
                      solve( File__Alice( 'rab__rab', loc__0, n__0__11 ) ▶₁ #vr.10 )
                        case Alice__merged_____0_____2__1_0__133
                        solve( State__Alice( <'rab_____15__0_1', 'rab__rab', %v__>,
                                             return__var__49, 'rab__',
                                             <l__0__49, l__1__49, l__2__49, l__3__49, l__4__49, ~n.3, l__6__49
                                             >,
                                             'rab__'
                               ) ▶₀ #vr.15 )
                          case Alice__merged_____11__1_0_____15__0_1__94_case_1
                          by solve( !KU( ~n.3 ) @ #vk.2 )
                        next
                          case Alice__merged_____11__1_0_____15__0_1__94_case_2
                          by solve( !KU( ~n.3 ) @ #vk.2 )
                        qed
                      next
                        case Alice__merged_____2__1_0_____9__122
                        by contradiction /* cyclic */
                      qed
                    next
                      case Bob__merged_____3__1_0_____9__75
                      by contradiction /* cyclic */
                    qed
                  next
                    case c_enc
                    solve( !KU( ~n.1 ) @ #vk.3 )
                      case Alice__merged_____15__0_1_____15__0_3__0_1__86
                      by solve( !KU( ~n.3 ) @ #vk.4 )
                    next
                      case Bob__merged_____3__1_0_____9__75_case_1
                      by solve( !KU( ~n.3 ) @ #vk.5 )
                    next
                      case Bob__merged_____3__1_0_____9__75_case_2
                      by solve( !KU( ~n.3 ) @ #vk.5 )
                    qed
                  qed
                qed
              qed
            qed
          qed
        qed
      qed
    next
      case Bob__merged_____3__1_0_____9__75
      solve( !ACP__( <'rab__Bob', 'rab__rab'>, 'rab__udp', 'rab__recv'
             ) ▶₃ #j )
        case Init__system__ACP__0
        solve( !Const__( 'rab__priv_key_bob', priv_key_bob__34 ) ▶₄ #j )
          case Const__priv_key_bob
          solve( !Const__( 'rab__nonce_b', nb ) ▶₅ #j )
            case Const__nonce_b
            solve( !Const__( 'rab__nonce_b', nonce_b__35 ) ▶₆ #j )
              case Const__nonce_b
              solve( !Eq__( z, ~n.1 ) ▶₇ #j )
                case Equality_gen
                solve( splitEqs(1) )
                  case split_case_1
                  solve( !KU( enc(~n.1, ~n.3) ) @ #vk )
                    case Alice__merged_____15__0_1_____15__0_3__0_1__86
                    solve( !KU( enc(<l__3__30, x>, ~n.3) ) @ #vk.1 )
                      case Alice__merged_____1_____9__131
                      solve( Store( 'rab__udp', n__0__9 ) ▶₁ #vr.1 )
                        case Alice__merged_____15__0_1_____15__0_3__0_1__86
                        solve( State__Alice( <'rab_____15__0_1', 'rab__rab', %v__>,
                                             return__var__49, 'rab__',
                                             <l__0__49, l__1__49, l__2__49, l__3__49, l__4__49, ~n.3, l__6__49
                                             >,
                                             'rab__'
                               ) ▶₀ #vr.11 )
                          case Alice__merged_____11__1_0_____15__0_1__94_case_1
                          solve( !KU( enc(<~n, l__0__49>, ~n.2) ) @ #vk.2 )
                            case c_enc
                            by solve( !KU( ~n.2 ) @ #vk.4 )
                          qed
                        next
                          case Alice__merged_____11__1_0_____15__0_1__94_case_2
                          solve( !KU( enc(<~n, l__0__49>, ~n.2) ) @ #vk.2 )
                            case c_enc
                            by solve( !KU( ~n.2 ) @ #vk.4 )
                          qed
                        qed
                      next
                        case Alice__merged_____1_____9__131
                        solve( State__Alice( <'rab_____15__0_1', 'rab__rab', %v__>,
                                             return__var__49, 'rab__',
                                             <l__0__49, l__1__49, l__2__49, l__3__49, l__4__49, ~n.3, l__6__49
                                             >,
                                             'rab__'
                               ) ▶₀ #vr.11 )
                          case Alice__merged_____11__1_0_____15__0_1__94
                          solve( !KU( enc(<~n, l__0__49>, ~n.2) ) @ #vk.2 )
                            case c_enc
                            by solve( !KU( ~n.2 ) @ #vk.4 )
                          qed
                        qed
                      qed
                    next
                      case Alice__merged_____2__1_0_____9__122
                      by solve( !KU( ~n.3 ) @ #vk.2 )
                    next
                      case c_enc
                      by solve( !KU( ~n.3 ) @ #vk.3 )
                    qed
                  next
                    case c_enc
                    solve( !KU( ~n.1 ) @ #vk.2 )
                      case Alice__merged_____15__0_1_____15__0_3__0_1__86
                      by solve( !KU( ~n.3 ) @ #vk.3 )
                    next
                      case Bob__merged_____3__1_0_____9__75_case_1
                      by solve( !KU( ~n.3 ) @ #vk.4 )
                    next
                      case Bob__merged_____3__1_0_____9__75_case_2
                      by solve( !KU( ~n.3 ) @ #vk.4 )
                    qed
                  qed
                next
                  case split_case_2
                  solve( !KU( enc(~n.1, ~n.3) ) @ #vk )
                    case Alice__merged_____15__0_1_____15__0_3__0_1__86
                    solve( !KU( enc(x, ~n.3) ) @ #vk.1 )
                      case Alice__merged_____15__0_1_____15__0_3__0_1__86
                      solve( Store( 'rab__udp', n__0__9 ) ▶₁ #vr.1 )
                        case Alice__merged_____15__0_1_____15__0_3__0_1__86
                        solve( State__Alice( <'rab_____15__0_1', 'rab__rab', %v__>,
                                             return__var__49, 'rab__',
                                             <l__0__49, l__1__49, l__2__49, l__3__49, l__4__49, ~n.3, l__6__49
                                             >,
                                             'rab__'
                               ) ▶₀ #vr.11 )
                          case Alice__merged_____11__1_0_____15__0_1__94_case_1
                          solve( !KU( enc(<~n, l__0__49>, ~n.2) ) @ #vk.1 )
                            case c_enc
                            by solve( !KU( ~n.2 ) @ #vk.3 )
                          qed
                        next
                          case Alice__merged_____11__1_0_____15__0_1__94_case_2
                          by solve( !KU( ~n.3 ) @ #vk.2 )
                        next
                          case Alice__merged_____11__1_0_____15__0_1__94_case_3
                          solve( !KU( enc(<~n, l__0__49>, ~n.2) ) @ #vk.1 )
                            case c_enc
                            by solve( !KU( ~n.2 ) @ #vk.3 )
                          qed
                        next
                          case Alice__merged_____11__1_0_____15__0_1__94_case_4
                          by solve( !KU( ~n.3 ) @ #vk.2 )
                        qed
                      next
                        case Alice__merged_____1_____9__131
                        solve( State__Alice( <'rab_____15__0_1', 'rab__rab', %v__>,
                                             return__var__49, 'rab__',
                                             <l__0__49, l__1__49, l__2__49, l__3__49, l__4__49, ~n.3, l__6__49
                                             >,
                                             'rab__'
                               ) ▶₀ #vr.11 )
                          case Alice__merged_____11__1_0_____15__0_1__94
                          solve( !KU( enc(<~n, l__0__49>, ~n.2) ) @ #vk.1 )
                            case c_enc
                            by solve( !KU( ~n.2 ) @ #vk.3 )
                          qed
                        qed
                      next
                        case Alice__merged_____2__1_0_____9__122
                        solve( State__Alice( <'rab_____15__0_1', 'rab__rab', %v__>,
                                             return__var__49, 'rab__',
                                             <l__0__49, l__1__49, l__2__49, l__3__49, l__4__49, ~n.3, l__6__49
                                             >,
                                             'rab__'
                               ) ▶₀ #vr.11 )
                          case Alice__merged_____11__1_0_____15__0_1__94
                          by solve( !KU( ~n.3 ) @ #vk.1 )
                        qed
                      qed
                    next
                      case Alice__merged_____1_____9__131
                      by contradiction /* non-normal terms */
                    next
                      case Alice__merged_____2__1_0_____9__122
                      by contradiction /* non-normal terms */
                    next
                      case c_enc
                      by solve( !KU( ~n.3 ) @ #vk.3 )
                    qed
                  next
                    case c_enc
                    solve( !KU( ~n.1 ) @ #vk.2 )
                      case Alice__merged_____15__0_1_____15__0_3__0_1__86
                      by solve( !KU( ~n.3 ) @ #vk.3 )
                    next
                      case Bob__merged_____3__1_0_____9__75_case_1
                      by solve( !KU( ~n.3 ) @ #vk.4 )
                    next
                      case Bob__merged_____3__1_0_____9__75_case_2
                      by solve( !KU( ~n.3 ) @ #vk.4 )
                    qed
                  qed
                next
                  case split_case_3
                  solve( !KU( enc(~n.1, ~n.3) ) @ #vk )
                    case Alice__merged_____15__0_1_____15__0_3__0_1__86
                    solve( Store( 'rab__udp', n__0__9 ) ▶₁ #vr.1 )
                      case Alice__merged_____15__0_1_____15__0_3__0_1__86
                      solve( State__Alice( <'rab_____15__0_1', 'rab__rab', %v__>,
                                           return__var__49, 'rab__',
                                           <l__0__49, l__1__49, l__2__49, l__3__49, l__4__49, ~n.3, l__6__49>,
                                           'rab__'
                             ) ▶₀ #vr.11 )
                        case Alice__merged_____11__1_0_____15__0_1__94_case_1
                        solve( !KU( enc(<~n, l__0__49>, ~n.2) ) @ #vk.2 )
                          case c_enc
                          by solve( !KU( ~n.2 ) @ #vk.4 )
                        qed
                      next
                        case Alice__merged_____11__1_0_____15__0_1__94_case_2
                        by solve( !KU( ~n.3 ) @ #vk.3 )
                      next
                        case Alice__merged_____11__1_0_____15__0_1__94_case_3
                        solve( !KU( enc(<~n, l__0__49>, ~n.2) ) @ #vk.2 )
                          case c_enc
                          by solve( !KU( ~n.2 ) @ #vk.4 )
                        qed
                      next
                        case Alice__merged_____11__1_0_____15__0_1__94_case_4
                        by solve( !KU( ~n.3 ) @ #vk.3 )
                      qed
                    next
                      case Alice__merged_____1_____9__131
                      solve( State__Alice( <'rab_____15__0_1', 'rab__rab', %v__>,
                                           return__var__49, 'rab__',
                                           <l__0__49, l__1__49, l__2__49, l__3__49, l__4__49, ~n.3, l__6__49>,
                                           'rab__'
                             ) ▶₀ #vr.11 )
                        case Alice__merged_____11__1_0_____15__0_1__94
                        solve( !KU( enc(<~n, l__0__49>, ~n.2) ) @ #vk.2 )
                          case c_enc
                          by solve( !KU( ~n.2 ) @ #vk.4 )
                        qed
                      qed
                    next
                      case Alice__merged_____2__1_0_____9__122
                      solve( State__Alice( <'rab_____15__0_1', 'rab__rab', %v__>,
                                           return__var__49, 'rab__',
                                           <l__0__49, l__1__49, l__2__49, l__3__49, l__4__49, ~n.3, l__6__49>,
                                           'rab__'
                             ) ▶₀ #vr.11 )
                        case Alice__merged_____11__1_0_____15__0_1__94
                        by solve( !KU( ~n.3 ) @ #vk.2 )
                      qed
                    qed
                  next
                    case c_enc
                    solve( !KU( ~n.1 ) @ #vk.2 )
                      case Alice__merged_____15__0_1_____15__0_3__0_1__86
                      by solve( !KU( ~n.3 ) @ #vk.3 )
                    next
                      case Bob__merged_____3__1_0_____9__75_case_1
                      by solve( !KU( ~n.3 ) @ #vk.4 )
                    next
                      case Bob__merged_____3__1_0_____9__75_case_2
                      by solve( !KU( ~n.3 ) @ #vk.4 )
                    qed
                  qed
                qed
              qed
            qed
          qed
        qed
      qed
    qed
  qed
qed

lemma SecrecyCanBeEstablishedB:
  exists-trace
  "∃ nonce_b #time__0 #label_time__0.
    (!Const__( 'rab__nonce_b', nonce_b ) @ #label_time__0) ∧
    (SecretNonceBob( nonce_b ) @ #time__0)"
/*
guarded formula characterizing all satisfying traces:
"∃ nonce_b #time__0 #label_time__0.
  (!Const__( 'rab__nonce_b', nonce_b ) @ #label_time__0) ∧
  (SecretNonceBob( nonce_b ) @ #time__0)"
*/
simplify
solve( !Const__( 'rab__nonce_b', nonce_b ) @ #label_time__0 )
  case Const__nonce_b
  solve( SecretNonceBob( ~n ) @ #time__0 )
    case Bob__merged_____11__0_0_____13__0_1__59
    solve( State__Bob( <'rab_____11__0_0', param, %v__>, return__var__25,
                       'rab__', <l__0__25, l__1__25, l__2__25, l__3__25, l__4__25>, t__0__25
           ) ▶₀ #time__0 )
      case Bob__merged_____9_____11__0_0__62_case_1
      solve( Store( 'rab__udp', n__0__25 ) ▶₁ #time__0 )
        case Alice__merged_____15__0_1_____15__0_3__0_1__86
        solve( !ACP__( <'rab__Bob', 'rab__rab'>, 'rab__udp', 'rab__recv'
               ) ▶₂ #time__0 )
          case Init__system__ACP__0
          solve( !Const__( 'rab__priv_key_bob', priv_key_bob__34 ) ▶₃ #time__0 )
            case Const__priv_key_bob
            solve( !Const__( 'rab__nonce_b', ~n ) ▶₄ #time__0 )
              case Const__nonce_b
              solve( !Const__( 'rab__nonce_b', nonce_b__35 ) ▶₅ #time__0 )
                case Const__nonce_b
                solve( !Eq__( z, ~n ) ▶₆ #time__0 )
                  case Equality_gen
                  solve( splitEqs(2) )
                    case split_case_1
                    solve( Store( 'rab__udp', l__4__25 ) ▶₁ #vr.1 )
                      case Alice__merged_____15__0_1_____15__0_3__0_1__86
                      solve( State__Alice( <'rab_____15__0_1', 'rab__rab', %v__>,
                                           return__var__49, 'rab__',
                                           <l__0__49, l__1__49, l__2__49, l__3__49, l__4__49, ~l__5__49.1, 
                                            l__6__49>,
                                           'rab__'
                             ) ▶₀ #vr.9 )
                        case Alice__merged_____11__1_0_____15__0_1__94_case_1
                        solve( !KU( enc(<~n.1, l__0__49>, ~n.2) ) @ #vk )
                          case c_enc
                          by solve( !KU( ~n.2 ) @ #vk.2 )
                        qed
                      next
                        case Alice__merged_____11__1_0_____15__0_1__94_case_2
                        by solve( !KU( ~l__5__49.1 ) @ #vk.1 )
                      next
                        case Alice__merged_____11__1_0_____15__0_1__94_case_3
                        solve( !KU( enc(<~n.1, l__0__49>, ~n.2) ) @ #vk )
                          case c_enc
                          by solve( !KU( ~n.2 ) @ #vk.2 )
                        qed
                      next
                        case Alice__merged_____11__1_0_____15__0_1__94_case_4
                        by solve( !KU( ~l__5__49.1 ) @ #vk.1 )
                      next
                        case Alice__merged_____11__1_0_____15__0_1__94_case_5
                        solve( !KU( enc(<~n.1, l__0__49>, ~n.2) ) @ #vk )
                          case c_enc
                          by solve( !KU( ~n.2 ) @ #vk.2 )
                        qed
                      next
                        case Alice__merged_____11__1_0_____15__0_1__94_case_6
                        by solve( !KU( ~l__5__49.1 ) @ #vk.1 )
                      qed
                    next
                      case Alice__merged_____1_____9__131
                      solve( State__Alice( <'rab_____15__0_1', 'rab__rab', %v__>,
                                           return__var__49, 'rab__',
                                           <l__0__49, l__1__49, l__2__49, l__3__49, l__4__49, ~l__5__49, 
                                            l__6__49>,
                                           'rab__'
                             ) ▶₀ #vr.9 )
                        case Alice__merged_____11__1_0_____15__0_1__94
                        by contradiction /* non-normal terms */
                      qed
                    next
                      case Alice__merged_____2__1_0_____9__122
                      solve( State__Alice( <'rab_____15__0_1', 'rab__rab', %v__>,
                                           return__var__49, 'rab__',
                                           <l__0__49, l__1__49, l__2__49, l__3__49, l__4__49, ~l__5__49, 
                                            l__6__49>,
                                           'rab__'
                             ) ▶₀ #vr.9 )
                        case Alice__merged_____11__1_0_____15__0_1__94
                        by contradiction /* non-normal terms */
                      qed
                    next
                      case Bob__merged_____3__0_0_____9__79
                      by contradiction /* cyclic */
                    qed
                  next
                    case split_case_2
                    solve( Store( 'rab__udp', enc(x, ~l__5__49) ) ▶₁ #vr.1 )
                      case Alice__merged_____15__0_1_____15__0_3__0_1__86
                      solve( State__Alice( <'rab_____15__0_1', 'rab__rab', %v__>,
                                           return__var__49, 'rab__',
                                           <l__0__49, l__1__49, l__2__49, l__3__49, l__4__49, ~l__5__49, 
                                            l__6__49>,
                                           'rab__'
                             ) ▶₀ #vr.9 )
                        case Alice__merged_____11__1_0_____15__0_1__94_case_1
                        solve( !KU( enc(<~n.1, l__0__49>, ~n.2) ) @ #vk )
                          case c_enc
                          by solve( !KU( ~n.2 ) @ #vk.2 )
                        qed
                      next
                        case Alice__merged_____11__1_0_____15__0_1__94_case_2
                        by solve( !KU( ~l__5__49 ) @ #vk.1 )
                      next
                        case Alice__merged_____11__1_0_____15__0_1__94_case_3
                        solve( !KU( enc(<~n.1, l__0__49>, ~n.2) ) @ #vk )
                          case c_enc
                          by solve( !KU( ~n.2 ) @ #vk.2 )
                        qed
                      next
                        case Alice__merged_____11__1_0_____15__0_1__94_case_4
                        by solve( !KU( ~l__5__49 ) @ #vk.1 )
                      next
                        case Alice__merged_____11__1_0_____15__0_1__94_case_5
                        solve( !KU( enc(<~n.1, l__0__49>, ~n.2) ) @ #vk )
                          case c_enc
                          by solve( !KU( ~n.2 ) @ #vk.2 )
                        qed
                      next
                        case Alice__merged_____11__1_0_____15__0_1__94_case_6
                        by solve( !KU( ~l__5__49 ) @ #vk.1 )
                      qed
                    next
                      case Alice__merged_____1_____9__131
                      by contradiction /* non-normal terms */
                    next
                      case Alice__merged_____2__1_0_____9__122
                      by contradiction /* non-normal terms */
                    qed
                  next
                    case split_case_3
                    solve( Store( 'rab__udp', enc(<l__3__25, x>, ~l__5__49) ) ▶₁ #vr.1 )
                      case Alice__merged_____1_____9__131
                      solve( State__Alice( <'rab_____15__0_1', 'rab__rab', %v__>,
                                           return__var__49, 'rab__',
                                           <l__0__49, l__1__49, l__2__49, l__3__49, l__4__49, ~l__5__49, 
                                            l__6__49>,
                                           'rab__'
                             ) ▶₀ #vr.9 )
                        case Alice__merged_____11__1_0_____15__0_1__94_case_1
                        solve( !KU( enc(<~n.1, l__0__49>, ~n.2) ) @ #vk )
                          case c_enc
                          by solve( !KU( ~n.2 ) @ #vk.2 )
                        qed
                      next
                        case Alice__merged_____11__1_0_____15__0_1__94_case_2
                        solve( !KU( enc(<~n.1, l__0__49>, ~n.2) ) @ #vk )
                          case c_enc
                          by solve( !KU( ~n.2 ) @ #vk.2 )
                        qed
                      qed
                    next
                      case Alice__merged_____2__1_0_____9__122
                      by solve( !KU( ~l__5__49 ) @ #vk )
                    qed
                  qed
                qed
              qed
            qed
          qed
        qed
      next
        case Alice__merged_____1_____9__131
        solve( !ACP__( <'rab__Bob', 'rab__rab'>, 'rab__udp', 'rab__recv'
               ) ▶₂ #time__0 )
          case Init__system__ACP__0
          solve( !Const__( 'rab__priv_key_bob', priv_key_bob__34 ) ▶₃ #time__0 )
            case Const__priv_key_bob
            solve( !Const__( 'rab__nonce_b', ~n ) ▶₄ #time__0 )
              case Const__nonce_b
              solve( !Const__( 'rab__nonce_b', nonce_b__35 ) ▶₅ #time__0 )
                case Const__nonce_b
                by solve( !Eq__( z, ~n ) ▶₆ #time__0 )
              qed
            qed
          qed
        qed
      next
        case Alice__merged_____2__1_0_____9__122
        solve( !ACP__( <'rab__Bob', 'rab__rab'>, 'rab__udp', 'rab__recv'
               ) ▶₂ #time__0 )
          case Init__system__ACP__0
          solve( !Const__( 'rab__priv_key_bob', priv_key_bob__34 ) ▶₃ #time__0 )
            case Const__priv_key_bob
            solve( !Const__( 'rab__nonce_b', ~n ) ▶₄ #time__0 )
              case Const__nonce_b
              solve( !Const__( 'rab__nonce_b', nonce_b__35 ) ▶₅ #time__0 )
                case Const__nonce_b
                by solve( !Eq__( z, ~n ) ▶₆ #time__0 )
              qed
            qed
          qed
        qed
      next
        case Bob__merged_____3__0_0_____9__79
        solve( !ACP__( <'rab__Bob', 'rab__rab'>, 'rab__udp', 'rab__recv'
               ) ▶₂ #time__0 )
          case Init__system__ACP__0
          solve( !Const__( 'rab__priv_key_bob', priv_key_bob__34 ) ▶₃ #time__0 )
            case Const__priv_key_bob
            solve( !Const__( 'rab__nonce_b', ~n ) ▶₄ #time__0 )
              case Const__nonce_b
              solve( !Const__( 'rab__nonce_b', nonce_b__35 ) ▶₅ #time__0 )
                case Const__nonce_b
                by solve( !Eq__( dec(enc(<~n.1, ~n>, pk(~n.2)), ~n.3), ~n ) ▶₆ #time__0 )
              qed
            qed
          qed
        qed
      qed
    next
      case Bob__merged_____9_____11__0_0__62_case_2
      solve( Store( 'rab__udp', n__0__25 ) ▶₁ #time__0 )
        case Alice__merged_____15__0_1_____15__0_3__0_1__86
        solve( !ACP__( <'rab__Bob', 'rab__rab'>, 'rab__udp', 'rab__recv'
               ) ▶₂ #time__0 )
          case Init__system__ACP__0
          solve( !Const__( 'rab__priv_key_bob', priv_key_bob__34 ) ▶₃ #time__0 )
            case Const__priv_key_bob
            solve( !Const__( 'rab__nonce_b', ~n ) ▶₄ #time__0 )
              case Const__nonce_b
              solve( !Const__( 'rab__nonce_b', nonce_b__35 ) ▶₅ #time__0 )
                case Const__nonce_b
                solve( !Eq__( z, ~n ) ▶₆ #time__0 )
                  case Equality_gen
                  solve( splitEqs(2) )
                    case split_case_1
                    solve( Store( 'rab__udp', n__0__9 ) ▶₁ #vr.1 )
                      case Alice__merged_____15__0_1_____15__0_3__0_1__86
                      solve( State__Alice( <'rab_____15__0_1', 'rab__rab', %v__>,
                                           return__var__49, 'rab__',
                                           <l__0__49, l__1__49, l__2__49, l__3__49, l__4__49, ~l__5__49, 
                                            l__6__49>,
                                           'rab__'
                             ) ▶₀ #vr.9 )
                        case Alice__merged_____11__1_0_____15__0_1__94_case_1
                        solve( !KU( enc(<~n.1, l__0__49>, ~n.2) ) @ #vk.1 )
                          case c_enc
                          by solve( !KU( ~n.2 ) @ #vk.3 )
                        qed
                      next
                        case Alice__merged_____11__1_0_____15__0_1__94_case_2
                        by solve( !KU( ~l__5__49 ) @ #vk.2 )
                      next
                        case Alice__merged_____11__1_0_____15__0_1__94_case_3
                        solve( !KU( enc(<~n.1, l__0__49>, ~n.2) ) @ #vk.1 )
                          case c_enc
                          by solve( !KU( ~n.2 ) @ #vk.3 )
                        qed
                      next
                        case Alice__merged_____11__1_0_____15__0_1__94_case_4
                        by solve( !KU( ~l__5__49 ) @ #vk.2 )
                      next
                        case Alice__merged_____11__1_0_____15__0_1__94_case_5
                        solve( !KU( enc(<~n.1, l__0__49>, ~n.2) ) @ #vk.1 )
                          case c_enc
                          by solve( !KU( ~n.2 ) @ #vk.3 )
                        qed
                      next
                        case Alice__merged_____11__1_0_____15__0_1__94_case_6
                        by solve( !KU( ~l__5__49 ) @ #vk.2 )
                      qed
                    next
                      case Alice__merged_____1_____9__131
                      solve( State__Alice( <'rab_____15__0_1', 'rab__rab', %v__>,
                                           return__var__49, 'rab__',
                                           <l__0__49, l__1__49, l__2__49, l__3__49, l__4__49, ~l__5__49, 
                                            l__6__49>,
                                           'rab__'
                             ) ▶₀ #vr.9 )
                        case Alice__merged_____11__1_0_____15__0_1__94_case_1
                        solve( !KU( enc(<~n.1, l__0__49>, ~n.2) ) @ #vk.1 )
                          case c_enc
                          by solve( !KU( ~n.2 ) @ #vk.3 )
                        qed
                      next
                        case Alice__merged_____11__1_0_____15__0_1__94_case_2
                        solve( !KU( enc(<~n.1, l__0__49>, ~n.2) ) @ #vk.1 )
                          case c_enc
                          by solve( !KU( ~n.2 ) @ #vk.3 )
                        qed
                      qed
                    next
                      case Alice__merged_____2__1_0_____9__122
                      solve( State__Alice( <'rab_____15__0_1', 'rab__rab', %v__>,
                                           return__var__49, 'rab__',
                                           <l__0__49, l__1__49, l__2__49, l__3__49, l__4__49, ~l__5__49, 
                                            l__6__49>,
                                           'rab__'
                             ) ▶₀ #vr.9 )
                        case Alice__merged_____11__1_0_____15__0_1__94_case_1
                        by solve( !KU( ~l__5__49 ) @ #vk.1 )
                      next
                        case Alice__merged_____11__1_0_____15__0_1__94_case_2
                        by solve( !KU( ~l__5__49 ) @ #vk.1 )
                      qed
                    next
                      case Bob__merged_____3__1_0_____9__75
                      by contradiction /* cyclic */
                    qed
                  next
                    case split_case_2
                    solve( !KU( enc(x, ~l__5__49) ) @ #vk )
                      case Alice__merged_____15__0_1_____15__0_3__0_1__86
                      solve( Store( 'rab__udp', n__0__9 ) ▶₁ #vr.1 )
                        case Alice__merged_____15__0_1_____15__0_3__0_1__86
                        solve( State__Alice( <'rab_____15__0_1', 'rab__rab', %v__>,
                                             return__var__49, 'rab__',
                                             <l__0__49, l__1__49, l__2__49, l__3__49, l__4__49, ~l__5__49, 
                                              l__6__49>,
                                             'rab__'
                               ) ▶₀ #vr.9 )
                          case Alice__merged_____11__1_0_____15__0_1__94_case_1
                          solve( !KU( enc(<~n.1, l__0__49>, ~n.2) ) @ #vk.1 )
                            case c_enc
                            by solve( !KU( ~n.2 ) @ #vk.3 )
                          qed
                        next
                          case Alice__merged_____11__1_0_____15__0_1__94_case_2
                          by solve( !KU( ~l__5__49 ) @ #vk.2 )
                        next
                          case Alice__merged_____11__1_0_____15__0_1__94_case_3
                          solve( !KU( enc(<~n.1, l__0__49>, ~n.2) ) @ #vk.1 )
                            case c_enc
                            by solve( !KU( ~n.2 ) @ #vk.3 )
                          qed
                        next
                          case Alice__merged_____11__1_0_____15__0_1__94_case_4
                          by solve( !KU( ~l__5__49 ) @ #vk.2 )
                        next
                          case Alice__merged_____11__1_0_____15__0_1__94_case_5
                          solve( !KU( enc(<~n.1, l__0__49>, ~n.2) ) @ #vk.1 )
                            case c_enc
                            by solve( !KU( ~n.2 ) @ #vk.3 )
                          qed
                        next
                          case Alice__merged_____11__1_0_____15__0_1__94_case_6
                          by solve( !KU( ~l__5__49 ) @ #vk.2 )
                        qed
                      next
                        case Alice__merged_____1_____9__131
                        solve( State__Alice( <'rab_____15__0_1', 'rab__rab', %v__>,
                                             return__var__49, 'rab__',
                                             <l__0__49, l__1__49, l__2__49, l__3__49, l__4__49, ~l__5__49, 
                                              l__6__49>,
                                             'rab__'
                               ) ▶₀ #vr.9 )
                          case Alice__merged_____11__1_0_____15__0_1__94_case_1
                          solve( !KU( enc(<~n.1, l__0__49>, ~n.2) ) @ #vk.1 )
                            case c_enc
                            by solve( !KU( ~n.2 ) @ #vk.3 )
                          qed
                        next
                          case Alice__merged_____11__1_0_____15__0_1__94_case_2
                          solve( !KU( enc(<~n.1, l__0__49>, ~n.2) ) @ #vk.1 )
                            case c_enc
                            by solve( !KU( ~n.2 ) @ #vk.3 )
                          qed
                        qed
                      next
                        case Alice__merged_____2__1_0_____9__122
                        solve( State__Alice( <'rab_____15__0_1', 'rab__rab', %v__>,
                                             return__var__49, 'rab__',
                                             <l__0__49, l__1__49, l__2__49, l__3__49, l__4__49, ~l__5__49, 
                                              l__6__49>,
                                             'rab__'
                               ) ▶₀ #vr.9 )
                          case Alice__merged_____11__1_0_____15__0_1__94_case_1
                          by solve( !KU( ~l__5__49 ) @ #vk.1 )
                        next
                          case Alice__merged_____11__1_0_____15__0_1__94_case_2
                          by solve( !KU( ~l__5__49 ) @ #vk.1 )
                        qed
                      next
                        case Bob__merged_____3__1_0_____9__75
                        by contradiction /* cyclic */
                      qed
                    next
                      case Alice__merged_____1_____9__131
                      by contradiction /* non-normal terms */
                    next
                      case Alice__merged_____2__1_0_____9__122
                      by contradiction /* non-normal terms */
                    next
                      case c_enc
                      by solve( !KU( ~l__5__49 ) @ #vk.2 )
                    qed
                  next
                    case split_case_3
                    solve( !KU( enc(<l__3__25, x>, ~l__5__49) ) @ #vk )
                      case Alice__merged_____1_____9__131
                      solve( Store( 'rab__udp', n__0__9 ) ▶₁ #vr.1 )
                        case Alice__merged_____15__0_1_____15__0_3__0_1__86
                        solve( State__Alice( <'rab_____15__0_1', 'rab__rab', %v__>,
                                             return__var__49, 'rab__',
                                             <l__0__49, l__1__49, l__2__49, l__3__49, l__4__49, ~l__5__49, 
                                              l__6__49>,
                                             'rab__'
                               ) ▶₀ #vr.9 )
                          case Alice__merged_____11__1_0_____15__0_1__94_case_1
                          solve( !KU( enc(<~n.1, l__0__49>, ~n.2) ) @ #vk.1 )
                            case c_enc
                            by solve( !KU( ~n.2 ) @ #vk.3 )
                          qed
                        next
                          case Alice__merged_____11__1_0_____15__0_1__94_case_2
                          solve( !KU( enc(<~n.1, l__0__49>, ~n.2) ) @ #vk.1 )
                            case c_enc
                            by solve( !KU( ~n.2 ) @ #vk.3 )
                          qed
                        next
                          case Alice__merged_____11__1_0_____15__0_1__94_case_3
                          solve( !KU( enc(<~n.1, l__0__49>, ~n.2) ) @ #vk.1 )
                            case c_enc
                            by solve( !KU( ~n.2 ) @ #vk.3 )
                          qed
                        qed
                      next
                        case Alice__merged_____1_____9__131
                        solve( State__Alice( <'rab_____15__0_1', 'rab__rab', %v__>,
                                             return__var__49, 'rab__',
                                             <l__0__49, l__1__49, l__2__49, l__3__49, l__4__49, ~l__5__49, 
                                              l__6__49>,
                                             'rab__'
                               ) ▶₀ #vr.9 )
                          case Alice__merged_____11__1_0_____15__0_1__94_case_1
                          solve( !KU( enc(<~n.1, l__0__49>, ~n.2) ) @ #vk.1 )
                            case c_enc
                            by solve( !KU( ~n.2 ) @ #vk.3 )
                          qed
                        next
                          case Alice__merged_____11__1_0_____15__0_1__94_case_2
                          solve( !KU( enc(<~n.1, l__0__49>, ~n.2) ) @ #vk.1 )
                            case c_enc
                            by solve( !KU( ~n.2 ) @ #vk.3 )
                          qed
                        qed
                      next
                        case Bob__merged_____3__1_0_____9__75
                        by contradiction /* cyclic */
                      qed
                    next
                      case Alice__merged_____2__1_0_____9__122
                      by solve( !KU( ~l__5__49 ) @ #vk.1 )
                    next
                      case c_enc
                      by solve( !KU( ~l__5__49 ) @ #vk.2 )
                    qed
                  qed
                qed
              qed
            qed
          qed
        qed
      next
        case Alice__merged_____1_____9__131
        solve( !ACP__( <'rab__Bob', 'rab__rab'>, 'rab__udp', 'rab__recv'
               ) ▶₂ #time__0 )
          case Init__system__ACP__0
          solve( !Const__( 'rab__priv_key_bob', priv_key_bob__34 ) ▶₃ #time__0 )
            case Const__priv_key_bob
            solve( !Const__( 'rab__nonce_b', ~n ) ▶₄ #time__0 )
              case Const__nonce_b
              solve( !Const__( 'rab__nonce_b', nonce_b__35 ) ▶₅ #time__0 )
                case Const__nonce_b
                by solve( !Eq__( z, ~n ) ▶₆ #time__0 )
              qed
            qed
          qed
        qed
      next
        case Alice__merged_____2__1_0_____9__122
        solve( !ACP__( <'rab__Bob', 'rab__rab'>, 'rab__udp', 'rab__recv'
               ) ▶₂ #time__0 )
          case Init__system__ACP__0
          solve( !Const__( 'rab__priv_key_bob', priv_key_bob__34 ) ▶₃ #time__0 )
            case Const__priv_key_bob
            solve( !Const__( 'rab__nonce_b', ~n ) ▶₄ #time__0 )
              case Const__nonce_b
              solve( !Const__( 'rab__nonce_b', nonce_b__35 ) ▶₅ #time__0 )
                case Const__nonce_b
                by solve( !Eq__( z, ~n ) ▶₆ #time__0 )
              qed
            qed
          qed
        qed
      next
        case Bob__merged_____3__1_0_____9__75
        solve( !ACP__( <'rab__Bob', 'rab__rab'>, 'rab__udp', 'rab__recv'
               ) ▶₂ #time__0 )
          case Init__system__ACP__0
          solve( !Const__( 'rab__priv_key_bob', priv_key_bob__34 ) ▶₃ #time__0 )
            case Const__priv_key_bob
            solve( !Const__( 'rab__nonce_b', ~n ) ▶₄ #time__0 )
              case Const__nonce_b
              solve( !Const__( 'rab__nonce_b', nonce_b__35 ) ▶₅ #time__0 )
                case Const__nonce_b
                by solve( !Eq__( dec(enc(<~n.1, ~n>, pk(~n.2)), ~n.3), ~n ) ▶₆ #time__0 )
              qed
            qed
          qed
        qed
      qed
    qed
  next
    case Bob__merged_____11__1_0_____13__0_1__55
    solve( State__Bob( <'rab_____11__1_0', param, %v__>, return__var__30,
                       'rab__', <l__0__30, l__1__30, l__2__30, l__3__30, l__4__30>, t__0__30
           ) ▶₀ #time__0 )
      case Bob__merged_____9_____11__1_0__63_case_1
      solve( Store( 'rab__udp', n__0__30 ) ▶₁ #time__0 )
        case Alice__merged_____15__0_1_____15__0_3__0_1__86
        solve( !ACP__( <'rab__Bob', 'rab__rab'>, 'rab__udp', 'rab__recv'
               ) ▶₃ #time__0 )
          case Init__system__ACP__0
          solve( !Const__( 'rab__priv_key_bob', priv_key_bob__34 ) ▶₄ #time__0 )
            case Const__priv_key_bob
            solve( !Const__( 'rab__nonce_b', ~n ) ▶₅ #time__0 )
              case Const__nonce_b
              solve( !Const__( 'rab__nonce_b', nonce_b__35 ) ▶₆ #time__0 )
                case Const__nonce_b
                solve( !Eq__( z, ~n ) ▶₇ #time__0 )
                  case Equality_gen
                  solve( splitEqs(2) )
                    case split_case_1
                    solve( !KU( enc(~n, ~n.3) ) @ #vk )
                      case Alice__merged_____15__0_1_____15__0_3__0_1__86
                      solve( Store( 'rab__udp', enc(<l__3__30, x>, ~n.3) ) ▶₁ #vr.1 )
                        case Alice__merged_____1_____9__131
                        solve( State__Alice( <'rab_____15__0_1', 'rab__rab', %v__>,
                                             return__var__49, 'rab__',
                                             <l__0__49, l__1__49, l__2__49, l__3__49, l__4__49, l__5__49, 
                                              l__6__49>,
                                             'rab__'
                               ) ▶₀ #vr.9 )
                          case Alice__merged_____11__1_0_____15__0_1__94_case_1
                          solve( !KU( enc(<~n.1, l__0__49>, ~n.2) ) @ #vk.1 )
                            case c_enc
                            by solve( !KU( ~n.2 ) @ #vk.3 )
                          qed
                        next
                          case Alice__merged_____11__1_0_____15__0_1__94_case_2
                          solve( !KU( enc(<~n.1, l__0__49>, ~n.2) ) @ #vk.1 )
                            case c_enc
                            by solve( !KU( ~n.2 ) @ #vk.3 )
                          qed
                        qed
                      next
                        case Alice__merged_____2__1_0_____9__122
                        by solve( !KU( ~n.3 ) @ #vk.1 )
                      qed
                    next
                      case c_enc
                      solve( !KU( ~n ) @ #vk.1 )
                        case Alice__merged_____15__0_1_____15__0_3__0_1__86
                        by solve( !KU( ~n.3 ) @ #vk.2 )
                      next
                        case Bob__merged_____3__0_0_____9__79_case_1
                        by solve( !KU( ~n.3 ) @ #vk.3 )
                      next
                        case Bob__merged_____3__0_0_____9__79_case_2
                        by solve( !KU( ~n.3 ) @ #vk.3 )
                      qed
                    qed
                  next
                    case split_case_2
                    solve( !KU( enc(~n, ~n.3) ) @ #vk )
                      case Alice__merged_____15__0_1_____15__0_3__0_1__86
                      solve( Store( 'rab__udp', enc(x, ~n.3) ) ▶₁ #vr.1 )
                        case Alice__merged_____15__0_1_____15__0_3__0_1__86
                        solve( State__Alice( <'rab_____15__0_1', 'rab__rab', %v__>,
                                             return__var__49, 'rab__',
                                             <l__0__49, l__1__49, l__2__49, l__3__49, l__4__49, l__5__49, 
                                              l__6__49>,
                                             'rab__'
                               ) ▶₀ #vr.9 )
                          case Alice__merged_____11__0_0_____15__0_1__98_case_1
                          by solve( State__Alice( <'rab_____15__0_1', 'rab__rab', %v__>,
                                                  return__var__49, 'rab__',
                                                  <l__0__49, l__1__49, l__2__49, l__3__49, l__4__49, ~n.3, 
                                                   l__6__49>,
                                                  'rab__'
                                    ) ▶₀ #vr.12 )
                        next
                          case Alice__merged_____11__0_0_____15__0_1__98_case_2
                          by solve( !KU( ~n.2 ) @ #vk.1 )
                        next
                          case Alice__merged_____11__1_0_____15__0_1__94_case_1
                          solve( !KU( enc(<~n.1, l__0__49>, ~n.2) ) @ #vk.1 )
                            case Alice__merged_____1_____9__131
                            by solve( State__Alice( <'rab_____15__0_1', 'rab__rab', %v__>,
                                                    return__var__49, 'rab__',
                                                    <l__0__49, l__1__49, l__2__49, l__3__49, l__4__49, ~n.3, 
                                                     l__6__49>,
                                                    'rab__'
                                      ) ▶₀ #vr.12 )
                          next
                            case c_enc
                            by solve( !KU( ~n.2 ) @ #vk.3 )
                          qed
                        next
                          case Alice__merged_____11__1_0_____15__0_1__94_case_2
                          solve( !KU( enc(<~n.1, l__0__49>, ~n.2) ) @ #vk.1 )
                            case Alice__merged_____2__1_0_____9__122
                            by solve( !KU( ~n.2 ) @ #vk.2 )
                          next
                            case c_enc
                            by solve( !KU( ~n.2 ) @ #vk.4 )
                          qed
                        next
                          case Alice__merged_____11__1_0_____15__0_1__94_case_3
                          solve( !KU( enc(<~n.1, l__0__49>, ~n.2) ) @ #vk.1 )
                            case Alice__merged_____1_____9__131
                            by solve( State__Alice( <'rab_____15__0_1', 'rab__rab', %v__>,
                                                    return__var__49, 'rab__',
                                                    <l__0__49, l__1__49, l__2__49, l__3__49, l__4__49, ~n.3, 
                                                     l__6__49>,
                                                    'rab__'
                                      ) ▶₀ #vr.12 )
                          next
                            case c_enc
                            by solve( !KU( ~n.2 ) @ #vk.3 )
                          qed
                        next
                          case Alice__merged_____11__1_0_____15__0_1__94_case_4
                          solve( !KU( enc(<~n.1, l__0__49>, ~n.2) ) @ #vk.1 )
                            case Alice__merged_____2__1_0_____9__122
                            by solve( !KU( ~n.2 ) @ #vk.2 )
                          next
                            case c_enc
                            by solve( !KU( ~n.2 ) @ #vk.4 )
                          qed
                        next
                          case Alice__merged_____11__1_0_____15__0_1__94_case_5
                          solve( !KU( enc(<~n.1, l__0__49>, ~n.2) ) @ #vk.1 )
                            case Alice__merged_____1_____9__131
                            by solve( State__Alice( <'rab_____15__0_1', 'rab__rab', %v__>,
                                                    return__var__49, 'rab__',
                                                    <l__0__49, l__1__49, l__2__49, l__3__49, l__4__49, ~n.3, 
                                                     l__6__49>,
                                                    'rab__'
                                      ) ▶₀ #vr.12 )
                          next
                            case c_enc
                            by solve( !KU( ~n.2 ) @ #vk.3 )
                          qed
                        next
                          case Alice__merged_____11__1_0_____15__0_1__94_case_6
                          solve( !KU( enc(<~n.1, l__0__49>, ~n.2) ) @ #vk.1 )
                            case Alice__merged_____2__1_0_____9__122
                            by solve( !KU( ~n.2 ) @ #vk.2 )
                          next
                            case c_enc
                            by solve( !KU( ~n.2 ) @ #vk.4 )
                          qed
                        qed
                      next
                        case Alice__merged_____1_____9__131
                        by contradiction /* non-normal terms */
                      next
                        case Alice__merged_____2__1_0_____9__122
                        by contradiction /* non-normal terms */
                      qed
                    next
                      case c_enc
                      solve( !KU( ~n ) @ #vk.1 )
                        case Alice__merged_____15__0_1_____15__0_3__0_1__86
                        by solve( !KU( ~n.3 ) @ #vk.2 )
                      next
                        case Bob__merged_____3__0_0_____9__79_case_1
                        by solve( !KU( ~n.3 ) @ #vk.3 )
                      next
                        case Bob__merged_____3__0_0_____9__79_case_2
                        by solve( !KU( ~n.3 ) @ #vk.3 )
                      qed
                    qed
                  next
                    case split_case_3
                    solve( !KU( enc(~n, ~n.3) ) @ #vk )
                      case Alice__merged_____15__0_1_____15__0_3__0_1__86
                      solve( Store( 'rab__udp', l__4__30 ) ▶₁ #vr.1 )
                        case Alice__merged_____15__0_1_____15__0_3__0_1__86
                        solve( State__Alice( <'rab_____15__0_1', 'rab__rab', %v__>,
                                             return__var__49, 'rab__',
                                             <l__0__49, l__1__49, l__2__49, l__3__49, l__4__49, l__5__49.1, 
                                              l__6__49>,
                                             'rab__'
                               ) ▶₀ #vr.9 )
                          case Alice__merged_____11__0_0_____15__0_1__98_case_1
                          by solve( State__Alice( <'rab_____15__0_1', 'rab__rab', %v__>,
                                                  return__var__49, 'rab__',
                                                  <l__0__49, l__1__49, l__2__49, l__3__49, l__4__49, ~n.3, 
                                                   l__6__49>,
                                                  'rab__'
                                    ) ▶₀ #vr.12 )
                        next
                          case Alice__merged_____11__0_0_____15__0_1__98_case_2
                          by solve( !KU( ~n.2 ) @ #vk.1 )
                        next
                          case Alice__merged_____11__1_0_____15__0_1__94_case_1
                          solve( !KU( enc(<~n.1, l__0__49>, ~n.2) ) @ #vk.1 )
                            case Alice__merged_____1_____9__131
                            by solve( State__Alice( <'rab_____15__0_1', 'rab__rab', %v__>,
                                                    return__var__49, 'rab__',
                                                    <l__0__49, l__1__49, l__2__49, l__3__49, l__4__49, ~n.3, 
                                                     l__6__49>,
                                                    'rab__'
                                      ) ▶₀ #vr.12 )
                          next
                            case c_enc
                            by solve( !KU( ~n.2 ) @ #vk.3 )
                          qed
                        next
                          case Alice__merged_____11__1_0_____15__0_1__94_case_2
                          solve( !KU( enc(<~n.1, l__0__49>, ~n.2) ) @ #vk.1 )
                            case Alice__merged_____2__1_0_____9__122
                            by solve( !KU( ~n.2 ) @ #vk.2 )
                          next
                            case c_enc
                            by solve( !KU( ~n.2 ) @ #vk.4 )
                          qed
                        next
                          case Alice__merged_____11__1_0_____15__0_1__94_case_3
                          solve( !KU( enc(<~n.1, l__0__49>, ~n.2) ) @ #vk.1 )
                            case Alice__merged_____1_____9__131
                            by solve( State__Alice( <'rab_____15__0_1', 'rab__rab', %v__>,
                                                    return__var__49, 'rab__',
                                                    <l__0__49, l__1__49, l__2__49, l__3__49, l__4__49, ~n.3, 
                                                     l__6__49>,
                                                    'rab__'
                                      ) ▶₀ #vr.12 )
                          next
                            case c_enc
                            by solve( !KU( ~n.2 ) @ #vk.3 )
                          qed
                        next
                          case Alice__merged_____11__1_0_____15__0_1__94_case_4
                          solve( !KU( enc(<~n.1, l__0__49>, ~n.2) ) @ #vk.1 )
                            case Alice__merged_____2__1_0_____9__122
                            by solve( !KU( ~n.2 ) @ #vk.2 )
                          next
                            case c_enc
                            by solve( !KU( ~n.2 ) @ #vk.4 )
                          qed
                        next
                          case Alice__merged_____11__1_0_____15__0_1__94_case_5
                          solve( !KU( enc(<~n.1, l__0__49>, ~n.2) ) @ #vk.1 )
                            case Alice__merged_____1_____9__131
                            by solve( State__Alice( <'rab_____15__0_1', 'rab__rab', %v__>,
                                                    return__var__49, 'rab__',
                                                    <l__0__49, l__1__49, l__2__49, l__3__49, l__4__49, ~n.3, 
                                                     l__6__49>,
                                                    'rab__'
                                      ) ▶₀ #vr.12 )
                          next
                            case c_enc
                            by solve( !KU( ~n.2 ) @ #vk.3 )
                          qed
                        next
                          case Alice__merged_____11__1_0_____15__0_1__94_case_6
                          solve( !KU( enc(<~n.1, l__0__49>, ~n.2) ) @ #vk.1 )
                            case Alice__merged_____2__1_0_____9__122
                            by solve( !KU( ~n.2 ) @ #vk.2 )
                          next
                            case c_enc
                            by solve( !KU( ~n.2 ) @ #vk.4 )
                          qed
                        qed
                      next
                        case Alice__merged_____1_____9__131
                        solve( State__Alice( <'rab_____15__0_1', 'rab__rab', %v__>,
                                             return__var__49, 'rab__',
                                             <l__0__49, l__1__49, l__2__49, l__3__49, l__4__49, l__5__49, 
                                              l__6__49>,
                                             'rab__'
                               ) ▶₀ #vr.9 )
                          case Alice__merged_____11__1_0_____15__0_1__94_case_1
                          solve( !KU( enc(<~n.1, l__0__49>, ~n.2) ) @ #vk.1 )
                            case Alice__merged_____1_____9__131
                            by solve( State__Alice( <'rab_____15__0_1', 'rab__rab', %v__>,
                                                    return__var__49, 'rab__',
                                                    <l__0__49, l__1__49, l__2__49, l__3__49, l__4__49, ~n.3, 
                                                     l__6__49>,
                                                    'rab__'
                                      ) ▶₀ #vr.12 )
                          next
                            case c_enc
                            by solve( !KU( ~n.2 ) @ #vk.3 )
                          qed
                        next
                          case Alice__merged_____11__1_0_____15__0_1__94_case_2
                          solve( !KU( enc(<~n.1, l__0__49>, ~n.2) ) @ #vk.1 )
                            case Alice__merged_____1_____9__131
                            by solve( State__Alice( <'rab_____15__0_1', 'rab__rab', %v__>,
                                                    return__var__49, 'rab__',
                                                    <l__0__49, l__1__49, l__2__49, l__3__49, l__4__49, ~n.3, 
                                                     l__6__49>,
                                                    'rab__'
                                      ) ▶₀ #vr.12 )
                          next
                            case c_enc
                            by solve( !KU( ~n.2 ) @ #vk.3 )
                          qed
                        qed
                      next
                        case Alice__merged_____2__1_0_____9__122
                        solve( State__Alice( <'rab_____15__0_1', 'rab__rab', %v__>,
                                             return__var__49, 'rab__',
                                             <l__0__49, l__1__49, l__2__49, l__3__49, l__4__49, l__5__49, 
                                              l__6__49>,
                                             'rab__'
                               ) ▶₀ #vr.9 )
                          case Alice__merged_____11__1_0_____15__0_1__94_case_1
                          solve( !KU( enc(<~n.1, l__0__49>, ~n.2) ) @ #vk.2 )
                            case Alice__merged_____2__1_0_____9__122
                            by solve( !KU( ~n.2 ) @ #vk.2 )
                          next
                            case c_enc
                            by solve( !KU( ~n.2 ) @ #vk.4 )
                          qed
                        next
                          case Alice__merged_____11__1_0_____15__0_1__94_case_2
                          solve( !KU( enc(<~n.1, l__0__49>, ~n.2) ) @ #vk.2 )
                            case Alice__merged_____2__1_0_____9__122
                            by solve( !KU( ~n.2 ) @ #vk.2 )
                          next
                            case c_enc
                            by solve( !KU( ~n.2 ) @ #vk.4 )
                          qed
                        qed
                      next
                        case Bob__merged_____3__0_0_____9__79
                        by contradiction /* cyclic */
                      qed
                    next
                      case c_enc
                      solve( !KU( ~n ) @ #vk.1 )
                        case Alice__merged_____15__0_1_____15__0_3__0_1__86
                        by solve( !KU( ~n.3 ) @ #vk.2 )
                      next
                        case Bob__merged_____3__0_0_____9__79_case_1
                        by solve( !KU( ~n.3 ) @ #vk.3 )
                      next
                        case Bob__merged_____3__0_0_____9__79_case_2
                        by solve( !KU( ~n.3 ) @ #vk.3 )
                      qed
                    qed
                  qed
                qed
              qed
            qed
          qed
        qed
      next
        case Alice__merged_____1_____9__131
        solve( !ACP__( <'rab__Bob', 'rab__rab'>, 'rab__udp', 'rab__recv'
               ) ▶₃ #time__0 )
          case Init__system__ACP__0
          solve( !Const__( 'rab__priv_key_bob', priv_key_bob__34 ) ▶₄ #time__0 )
            case Const__priv_key_bob
            solve( !Const__( 'rab__nonce_b', ~n ) ▶₅ #time__0 )
              case Const__nonce_b
              solve( !Const__( 'rab__nonce_b', nonce_b__35 ) ▶₆ #time__0 )
                case Const__nonce_b
                solve( !Eq__( z, ~n ) ▶₇ #time__0 )
                  case Equality_gen
                  solve( splitEqs(2) )
                    case split_case_1
                    solve( !KU( enc(~n, ~n.3) ) @ #vk )
                      case Alice__merged_____15__0_1_____15__0_3__0_1__86
                      by solve( Store( 'rab__udp', enc(<l__3__30, x>, ~n.3) ) ▶₁ #vr.1 )
                    next
                      case c_enc
                      solve( !KU( ~n ) @ #vk.1 )
                        case Alice__merged_____15__0_1_____15__0_3__0_1__86
                        by solve( !KU( ~n.3 ) @ #vk.2 )
                      next
                        case Bob__merged_____3__0_0_____9__79_case_1
                        by solve( !KU( ~n.3 ) @ #vk.3 )
                      next
                        case Bob__merged_____3__0_0_____9__79_case_2
                        by solve( !KU( ~n.3 ) @ #vk.3 )
                      qed
                    qed
                  next
                    case split_case_2
                    solve( !KU( enc(~n, ~n.3) ) @ #vk )
                      case Alice__merged_____15__0_1_____15__0_3__0_1__86
                      solve( Store( 'rab__udp', enc(x, ~n.3) ) ▶₁ #vr.1 )
                        case Alice__merged_____15__0_1_____15__0_3__0_1__86
                        solve( File__Alice( 'rab__rab', loc__0, n__0__20 ) ▶₁ #vr.9 )
                          case Alice__init_filesys_____0_____1__0
                          by solve( State__Alice( <'rab_____15__0_1', 'rab__rab', %v__>,
                                                  return__var__49, 'rab__',
                                                  <l__0__49, l__1__49, l__2__49, l__3__49, l__4__49, ~n.3, 
                                                   l__6__49>,
                                                  'rab__'
                                    ) ▶₀ #vr.14 )
                        next
                          case Alice__merged_____1_____9__131
                          by contradiction /* cyclic */
                        qed
                      qed
                    next
                      case c_enc
                      solve( !KU( ~n ) @ #vk.1 )
                        case Alice__merged_____15__0_1_____15__0_3__0_1__86
                        by solve( !KU( ~n.3 ) @ #vk.2 )
                      next
                        case Bob__merged_____3__0_0_____9__79_case_1
                        by solve( !KU( ~n.3 ) @ #vk.3 )
                      next
                        case Bob__merged_____3__0_0_____9__79_case_2
                        by solve( !KU( ~n.3 ) @ #vk.3 )
                      qed
                    qed
                  next
                    case split_case_3
                    solve( !KU( enc(~n, ~n.3) ) @ #vk )
                      case Alice__merged_____15__0_1_____15__0_3__0_1__86
                      solve( Store( 'rab__udp', l__4__30 ) ▶₁ #vr.1 )
                        case Alice__merged_____15__0_1_____15__0_3__0_1__86
                        solve( File__Alice( 'rab__rab', loc__0, n__0__20 ) ▶₁ #vr.9 )
                          case Alice__init_filesys_____0_____1__0
                          by solve( State__Alice( <'rab_____15__0_1', 'rab__rab', %v__>,
                                                  return__var__49, 'rab__',
                                                  <l__0__49, l__1__49, l__2__49, l__3__49, l__4__49, ~n.3, 
                                                   l__6__49>,
                                                  'rab__'
                                    ) ▶₀ #vr.14 )
                        next
                          case Alice__merged_____1_____9__131
                          by contradiction /* cyclic */
                        qed
                      next
                        case Bob__merged_____3__0_0_____9__79
                        by contradiction /* cyclic */
                      qed
                    next
                      case c_enc
                      solve( !KU( ~n ) @ #vk.1 )
                        case Alice__merged_____15__0_1_____15__0_3__0_1__86
                        by solve( !KU( ~n.3 ) @ #vk.2 )
                      next
                        case Bob__merged_____3__0_0_____9__79_case_1
                        by solve( !KU( ~n.3 ) @ #vk.3 )
                      next
                        case Bob__merged_____3__0_0_____9__79_case_2
                        by solve( !KU( ~n.3 ) @ #vk.3 )
                      qed
                    qed
                  qed
                qed
              qed
            qed
          qed
        qed
      next
        case Alice__merged_____2__1_0_____9__122
        solve( !ACP__( <'rab__Bob', 'rab__rab'>, 'rab__udp', 'rab__recv'
               ) ▶₃ #time__0 )
          case Init__system__ACP__0
          solve( !Const__( 'rab__priv_key_bob', priv_key_bob__34 ) ▶₄ #time__0 )
            case Const__priv_key_bob
            solve( !Const__( 'rab__nonce_b', ~n ) ▶₅ #time__0 )
              case Const__nonce_b
              solve( !Const__( 'rab__nonce_b', nonce_b__35 ) ▶₆ #time__0 )
                case Const__nonce_b
                solve( !Eq__( z, ~n ) ▶₇ #time__0 )
                  case Equality_gen
                  solve( splitEqs(2) )
                    case split_case_1
                    solve( !KU( enc(~n, ~n.3) ) @ #vk )
                      case Alice__merged_____15__0_1_____15__0_3__0_1__86
                      by solve( Store( 'rab__udp', enc(<l__3__30, x>, ~n.3) ) ▶₁ #vr.1 )
                    next
                      case c_enc
                      solve( !KU( ~n ) @ #vk.2 )
                        case Alice__merged_____15__0_1_____15__0_3__0_1__86
                        by solve( !KU( ~n.3 ) @ #vk.3 )
                      next
                        case Bob__merged_____3__0_0_____9__79_case_1
                        by solve( !KU( ~n.3 ) @ #vk.4 )
                      next
                        case Bob__merged_____3__0_0_____9__79_case_2
                        by solve( !KU( ~n.3 ) @ #vk.4 )
                      qed
                    qed
                  next
                    case split_case_2
                    solve( !KU( enc(~n, ~n.3) ) @ #vk )
                      case Alice__merged_____15__0_1_____15__0_3__0_1__86
                      solve( Store( 'rab__udp', enc(x, ~n.3) ) ▶₁ #vr.1 )
                        case Alice__merged_____15__0_1_____15__0_3__0_1__86
                        solve( File__Alice( 'rab__rab', loc__0, n__0__11 ) ▶₁ #vr.9 )
                          case Alice__merged_____0_____2__1_0__133
                          solve( State__Alice( <'rab_____15__0_1', 'rab__rab', %v__>,
                                               return__var__49, 'rab__',
                                               <l__0__49, l__1__49, l__2__49, l__3__49, l__4__49, ~n.3, 
                                                l__6__49>,
                                               'rab__'
                                 ) ▶₀ #vr.14 )
                            case Alice__merged_____11__1_0_____15__0_1__94_case_1
                            by solve( !KU( ~n.3 ) @ #vk.1 )
                          next
                            case Alice__merged_____11__1_0_____15__0_1__94_case_2
                            by solve( !KU( ~n.3 ) @ #vk.1 )
                          qed
                        next
                          case Alice__merged_____2__1_0_____9__122
                          by contradiction /* cyclic */
                        qed
                      qed
                    next
                      case c_enc
                      solve( !KU( ~n ) @ #vk.2 )
                        case Alice__merged_____15__0_1_____15__0_3__0_1__86
                        by solve( !KU( ~n.3 ) @ #vk.3 )
                      next
                        case Bob__merged_____3__0_0_____9__79_case_1
                        by solve( !KU( ~n.3 ) @ #vk.4 )
                      next
                        case Bob__merged_____3__0_0_____9__79_case_2
                        by solve( !KU( ~n.3 ) @ #vk.4 )
                      qed
                    qed
                  next
                    case split_case_3
                    solve( !KU( enc(~n, ~n.3) ) @ #vk )
                      case Alice__merged_____15__0_1_____15__0_3__0_1__86
                      solve( Store( 'rab__udp', l__4__30 ) ▶₁ #vr.1 )
                        case Alice__merged_____15__0_1_____15__0_3__0_1__86
                        solve( File__Alice( 'rab__rab', loc__0, n__0__11 ) ▶₁ #vr.9 )
                          case Alice__merged_____0_____2__1_0__133
                          solve( State__Alice( <'rab_____15__0_1', 'rab__rab', %v__>,
                                               return__var__49, 'rab__',
                                               <l__0__49, l__1__49, l__2__49, l__3__49, l__4__49, ~n.3, 
                                                l__6__49>,
                                               'rab__'
                                 ) ▶₀ #vr.14 )
                            case Alice__merged_____11__1_0_____15__0_1__94_case_1
                            by solve( !KU( ~n.3 ) @ #vk.1 )
                          next
                            case Alice__merged_____11__1_0_____15__0_1__94_case_2
                            by solve( !KU( ~n.3 ) @ #vk.1 )
                          qed
                        next
                          case Alice__merged_____2__1_0_____9__122
                          by contradiction /* cyclic */
                        qed
                      next
                        case Bob__merged_____3__0_0_____9__79
                        by contradiction /* cyclic */
                      qed
                    next
                      case c_enc
                      solve( !KU( ~n ) @ #vk.2 )
                        case Alice__merged_____15__0_1_____15__0_3__0_1__86
                        by solve( !KU( ~n.3 ) @ #vk.3 )
                      next
                        case Bob__merged_____3__0_0_____9__79_case_1
                        by solve( !KU( ~n.3 ) @ #vk.4 )
                      next
                        case Bob__merged_____3__0_0_____9__79_case_2
                        by solve( !KU( ~n.3 ) @ #vk.4 )
                      qed
                    qed
                  qed
                qed
              qed
            qed
          qed
        qed
      next
        case Bob__merged_____3__0_0_____9__79
        solve( !ACP__( <'rab__Bob', 'rab__rab'>, 'rab__udp', 'rab__recv'
               ) ▶₃ #time__0 )
          case Init__system__ACP__0
          solve( !Const__( 'rab__priv_key_bob', priv_key_bob__34 ) ▶₄ #time__0 )
            case Const__priv_key_bob
            solve( !Const__( 'rab__nonce_b', ~n ) ▶₅ #time__0 )
              case Const__nonce_b
              solve( !Const__( 'rab__nonce_b', nonce_b__35 ) ▶₆ #time__0 )
                case Const__nonce_b
                solve( !Eq__( z, ~n ) ▶₇ #time__0 )
                  case Equality_gen
                  solve( splitEqs(2) )
                    case split_case_1
                    solve( !KU( enc(~n, ~n.3) ) @ #vk )
                      case Alice__merged_____15__0_1_____15__0_3__0_1__86
                      solve( Store( 'rab__udp', enc(<l__3__30, x>, ~n.3) ) ▶₁ #vr.1 )
                        case Alice__merged_____1_____9__131
                        solve( State__Alice( <'rab_____15__0_1', 'rab__rab', %v__>,
                                             return__var__49, 'rab__',
                                             <l__0__49, l__1__49, l__2__49, l__3__49, l__4__49, ~n.3, l__6__49
                                             >,
                                             'rab__'
                               ) ▶₀ #vr.10 )
                          case Alice__merged_____11__1_0_____15__0_1__94
                          solve( !KU( enc(<~n.1, l__0__49>, ~n.2) ) @ #vk.1 )
                            case c_enc
                            by solve( !KU( ~n.2 ) @ #vk.3 )
                          qed
                        qed
                      next
                        case Alice__merged_____2__1_0_____9__122
                        by solve( !KU( ~n.3 ) @ #vk.1 )
                      qed
                    next
                      case c_enc
                      solve( !KU( ~n ) @ #vk.1 )
                        case Alice__merged_____15__0_1_____15__0_3__0_1__86
                        by solve( !KU( ~n.3 ) @ #vk.2 )
                      next
                        case Bob__merged_____3__0_0_____9__79_case_1
                        by solve( !KU( ~n.3 ) @ #vk.3 )
                      next
                        case Bob__merged_____3__0_0_____9__79_case_2
                        by solve( !KU( ~n.3 ) @ #vk.3 )
                      qed
                    qed
                  next
                    case split_case_2
                    solve( !KU( enc(~n, ~n.3) ) @ #vk )
                      case Alice__merged_____15__0_1_____15__0_3__0_1__86
                      solve( Store( 'rab__udp', enc(x, ~n.3) ) ▶₁ #vr.1 )
                        case Alice__merged_____15__0_1_____15__0_3__0_1__86
                        solve( State__Alice( <'rab_____15__0_1', 'rab__rab', %v__>,
                                             return__var__49, 'rab__',
                                             <l__0__49, l__1__49, l__2__49, l__3__49, l__4__49, ~n.3, l__6__49
                                             >,
                                             'rab__'
                               ) ▶₀ #vr.10 )
                          case Alice__merged_____11__1_0_____15__0_1__94_case_1
                          solve( !KU( enc(<~n.1, l__0__49>, ~n.2) ) @ #vk.1 )
                            case c_enc
                            by solve( !KU( ~n.2 ) @ #vk.3 )
                          qed
                        next
                          case Alice__merged_____11__1_0_____15__0_1__94_case_2
                          by solve( !KU( ~n.3 ) @ #vk.2 )
                        next
                          case Alice__merged_____11__1_0_____15__0_1__94_case_3
                          solve( !KU( enc(<~n.1, l__0__49>, ~n.2) ) @ #vk.1 )
                            case c_enc
                            by solve( !KU( ~n.2 ) @ #vk.3 )
                          qed
                        next
                          case Alice__merged_____11__1_0_____15__0_1__94_case_4
                          by solve( !KU( ~n.3 ) @ #vk.2 )
                        qed
                      next
                        case Alice__merged_____1_____9__131
                        by contradiction /* non-normal terms */
                      next
                        case Alice__merged_____2__1_0_____9__122
                        by contradiction /* non-normal terms */
                      qed
                    next
                      case c_enc
                      solve( !KU( ~n ) @ #vk.1 )
                        case Alice__merged_____15__0_1_____15__0_3__0_1__86
                        by solve( !KU( ~n.3 ) @ #vk.2 )
                      next
                        case Bob__merged_____3__0_0_____9__79_case_1
                        by solve( !KU( ~n.3 ) @ #vk.3 )
                      next
                        case Bob__merged_____3__0_0_____9__79_case_2
                        by solve( !KU( ~n.3 ) @ #vk.3 )
                      qed
                    qed
                  next
                    case split_case_3
                    solve( !KU( enc(~n, ~n.3) ) @ #vk )
                      case Alice__merged_____15__0_1_____15__0_3__0_1__86
                      solve( Store( 'rab__udp', l__4__30 ) ▶₁ #vr.1 )
                        case Alice__merged_____15__0_1_____15__0_3__0_1__86
                        solve( State__Alice( <'rab_____15__0_1', 'rab__rab', %v__>,
                                             return__var__49, 'rab__',
                                             <l__0__49, l__1__49, l__2__49, l__3__49, l__4__49, ~n.3, l__6__49
                                             >,
                                             'rab__'
                               ) ▶₀ #vr.10 )
                          case Alice__merged_____11__1_0_____15__0_1__94_case_1
                          solve( !KU( enc(<~n.1, l__0__49>, ~n.2) ) @ #vk.1 )
                            case c_enc
                            by solve( !KU( ~n.2 ) @ #vk.3 )
                          qed
                        next
                          case Alice__merged_____11__1_0_____15__0_1__94_case_2
                          by solve( !KU( ~n.3 ) @ #vk.2 )
                        next
                          case Alice__merged_____11__1_0_____15__0_1__94_case_3
                          solve( !KU( enc(<~n.1, l__0__49>, ~n.2) ) @ #vk.1 )
                            case c_enc
                            by solve( !KU( ~n.2 ) @ #vk.3 )
                          qed
                        next
                          case Alice__merged_____11__1_0_____15__0_1__94_case_4
                          by solve( !KU( ~n.3 ) @ #vk.2 )
                        qed
                      next
                        case Alice__merged_____1_____9__131
                        solve( State__Alice( <'rab_____15__0_1', 'rab__rab', %v__>,
                                             return__var__49, 'rab__',
                                             <l__0__49, l__1__49, l__2__49, l__3__49, l__4__49, ~n.3, l__6__49
                                             >,
                                             'rab__'
                               ) ▶₀ #vr.10 )
                          case Alice__merged_____11__1_0_____15__0_1__94
                          by contradiction /* non-normal terms */
                        qed
                      next
                        case Alice__merged_____2__1_0_____9__122
                        solve( State__Alice( <'rab_____15__0_1', 'rab__rab', %v__>,
                                             return__var__49, 'rab__',
                                             <l__0__49, l__1__49, l__2__49, l__3__49, l__4__49, ~n.3, l__6__49
                                             >,
                                             'rab__'
                               ) ▶₀ #vr.10 )
                          case Alice__merged_____11__1_0_____15__0_1__94
                          by contradiction /* non-normal terms */
                        qed
                      qed
                    next
                      case c_enc
                      solve( !KU( ~n ) @ #vk.1 )
                        case Alice__merged_____15__0_1_____15__0_3__0_1__86
                        by solve( !KU( ~n.3 ) @ #vk.2 )
                      next
                        case Bob__merged_____3__0_0_____9__79_case_1
                        by solve( !KU( ~n.3 ) @ #vk.3 )
                      next
                        case Bob__merged_____3__0_0_____9__79_case_2
                        by solve( !KU( ~n.3 ) @ #vk.3 )
                      qed
                    qed
                  qed
                qed
              qed
            qed
          qed
        qed
      qed
    next
      case Bob__merged_____9_____11__1_0__63_case_2
      solve( Store( 'rab__udp', n__0__30 ) ▶₁ #time__0 )
        case Alice__merged_____15__0_1_____15__0_3__0_1__86
        solve( !ACP__( <'rab__Bob', 'rab__rab'>, 'rab__udp', 'rab__recv'
               ) ▶₃ #time__0 )
          case Init__system__ACP__0
          solve( !Const__( 'rab__priv_key_bob', priv_key_bob__34 ) ▶₄ #time__0 )
            case Const__priv_key_bob
            solve( !Const__( 'rab__nonce_b', ~n ) ▶₅ #time__0 )
              case Const__nonce_b
              solve( !Const__( 'rab__nonce_b', nonce_b__35 ) ▶₆ #time__0 )
                case Const__nonce_b
                solve( !Eq__( z, ~n ) ▶₇ #time__0 )
                  case Equality_gen
                  solve( splitEqs(2) )
                    case split_case_1
                    solve( !KU( enc(~n, ~n.3) ) @ #vk )
                      case Alice__merged_____15__0_1_____15__0_3__0_1__86
                      solve( !KU( enc(<l__3__30, x>, ~n.3) ) @ #vk.1 )
                        case Alice__merged_____1_____9__131
                        solve( Store( 'rab__udp', n__0__9 ) ▶₁ #vr.1 )
                          case Alice__merged_____15__0_1_____15__0_3__0_1__86
                          solve( State__Alice( <'rab_____15__0_1', 'rab__rab', %v__>,
                                               return__var__49, 'rab__',
                                               <l__0__49, l__1__49, l__2__49, l__3__49, l__4__49, l__5__49, 
                                                l__6__49>,
                                               'rab__'
                                 ) ▶₀ #vr.9 )
                            case Alice__merged_____11__1_0_____15__0_1__94_case_1
                            solve( !KU( enc(<~n.1, l__0__49>, ~n.2) ) @ #vk.2 )
                              case c_enc
                              by solve( !KU( ~n.2 ) @ #vk.4 )
                            qed
                          next
                            case Alice__merged_____11__1_0_____15__0_1__94_case_2
                            solve( !KU( enc(<~n.1, l__0__49>, ~n.2) ) @ #vk.2 )
                              case c_enc
                              by solve( !KU( ~n.2 ) @ #vk.4 )
                            qed
                          next
                            case Alice__merged_____11__1_0_____15__0_1__94_case_3
                            solve( !KU( enc(<~n.1, l__0__49>, ~n.2) ) @ #vk.2 )
                              case c_enc
                              by solve( !KU( ~n.2 ) @ #vk.4 )
                            qed
                          qed
                        next
                          case Alice__merged_____1_____9__131
                          solve( State__Alice( <'rab_____15__0_1', 'rab__rab', %v__>,
                                               return__var__49, 'rab__',
                                               <l__0__49, l__1__49, l__2__49, l__3__49, l__4__49, l__5__49, 
                                                l__6__49>,
                                               'rab__'
                                 ) ▶₀ #vr.9 )
                            case Alice__merged_____11__1_0_____15__0_1__94_case_1
                            solve( !KU( enc(<~n.1, l__0__49>, ~n.2) ) @ #vk.2 )
                              case c_enc
                              by solve( !KU( ~n.2 ) @ #vk.4 )
                            qed
                          next
                            case Alice__merged_____11__1_0_____15__0_1__94_case_2
                            solve( !KU( enc(<~n.1, l__0__49>, ~n.2) ) @ #vk.2 )
                              case c_enc
                              by solve( !KU( ~n.2 ) @ #vk.4 )
                            qed
                          qed
                        next
                          case Bob__merged_____3__1_0_____9__75
                          by contradiction /* cyclic */
                        qed
                      next
                        case Alice__merged_____2__1_0_____9__122
                        by solve( !KU( ~n.3 ) @ #vk.2 )
                      next
                        case c_enc
                        by solve( !KU( ~n.3 ) @ #vk.3 )
                      qed
                    next
                      case c_enc
                      solve( !KU( ~n ) @ #vk.2 )
                        case Alice__merged_____15__0_1_____15__0_3__0_1__86
                        by solve( !KU( ~n.3 ) @ #vk.3 )
                      next
                        case Bob__merged_____3__1_0_____9__75_case_1
                        by solve( !KU( ~n.3 ) @ #vk.4 )
                      next
                        case Bob__merged_____3__1_0_____9__75_case_2
                        by solve( !KU( ~n.3 ) @ #vk.4 )
                      qed
                    qed
                  next
                    case split_case_2
                    solve( !KU( enc(~n, ~n.3) ) @ #vk )
                      case Alice__merged_____15__0_1_____15__0_3__0_1__86
                      solve( !KU( enc(x, ~n.3) ) @ #vk.1 )
                        case Alice__merged_____15__0_1_____15__0_3__0_1__86
                        solve( Store( 'rab__udp', n__0__9 ) ▶₁ #vr.1 )
                          case Alice__merged_____15__0_1_____15__0_3__0_1__86
                          solve( State__Alice( <'rab_____15__0_1', 'rab__rab', %v__>,
                                               return__var__49, 'rab__',
                                               <l__0__49, l__1__49, l__2__49, l__3__49, l__4__49, l__5__49, 
                                                l__6__49>,
                                               'rab__'
                                 ) ▶₀ #vr.9 )
                            case Alice__merged_____11__0_0_____15__0_1__98_case_1
                            by solve( State__Alice( <'rab_____15__0_1', 'rab__rab', %v__>,
                                                    return__var__49, 'rab__',
                                                    <l__0__49, l__1__49, l__2__49, l__3__49, l__4__49, ~n.3, 
                                                     l__6__49>,
                                                    'rab__'
                                      ) ▶₀ #vr.12 )
                          next
                            case Alice__merged_____11__0_0_____15__0_1__98_case_2
                            by solve( !KU( ~n.2 ) @ #vk.1 )
                          next
                            case Alice__merged_____11__1_0_____15__0_1__94_case_1
                            solve( !KU( enc(<~n.1, l__0__49>, ~n.2) ) @ #vk.1 )
                              case Alice__merged_____1_____9__131
                              by solve( State__Alice( <'rab_____15__0_1', 'rab__rab', %v__>,
                                                      return__var__49, 'rab__',
                                                      <l__0__49, l__1__49, l__2__49, l__3__49, l__4__49, 
                                                       ~n.3, l__6__49>,
                                                      'rab__'
                                        ) ▶₀ #vr.12 )
                            next
                              case c_enc
                              by solve( !KU( ~n.2 ) @ #vk.3 )
                            qed
                          next
                            case Alice__merged_____11__1_0_____15__0_1__94_case_2
                            solve( !KU( enc(<~n.1, l__0__49>, ~n.2) ) @ #vk.1 )
                              case Alice__merged_____2__1_0_____9__122
                              by solve( !KU( ~n.2 ) @ #vk.2 )
                            next
                              case c_enc
                              by solve( !KU( ~n.2 ) @ #vk.4 )
                            qed
                          next
                            case Alice__merged_____11__1_0_____15__0_1__94_case_3
                            solve( !KU( enc(<~n.1, l__0__49>, ~n.2) ) @ #vk.1 )
                              case Alice__merged_____1_____9__131
                              by solve( State__Alice( <'rab_____15__0_1', 'rab__rab', %v__>,
                                                      return__var__49, 'rab__',
                                                      <l__0__49, l__1__49, l__2__49, l__3__49, l__4__49, 
                                                       ~n.3, l__6__49>,
                                                      'rab__'
                                        ) ▶₀ #vr.12 )
                            next
                              case c_enc
                              by solve( !KU( ~n.2 ) @ #vk.3 )
                            qed
                          next
                            case Alice__merged_____11__1_0_____15__0_1__94_case_4
                            solve( !KU( enc(<~n.1, l__0__49>, ~n.2) ) @ #vk.1 )
                              case Alice__merged_____2__1_0_____9__122
                              by solve( !KU( ~n.2 ) @ #vk.2 )
                            next
                              case c_enc
                              by solve( !KU( ~n.2 ) @ #vk.4 )
                            qed
                          next
                            case Alice__merged_____11__1_0_____15__0_1__94_case_5
                            solve( !KU( enc(<~n.1, l__0__49>, ~n.2) ) @ #vk.1 )
                              case Alice__merged_____1_____9__131
                              by solve( State__Alice( <'rab_____15__0_1', 'rab__rab', %v__>,
                                                      return__var__49, 'rab__',
                                                      <l__0__49, l__1__49, l__2__49, l__3__49, l__4__49, 
                                                       ~n.3, l__6__49>,
                                                      'rab__'
                                        ) ▶₀ #vr.12 )
                            next
                              case c_enc
                              by solve( !KU( ~n.2 ) @ #vk.3 )
                            qed
                          next
                            case Alice__merged_____11__1_0_____15__0_1__94_case_6
                            solve( !KU( enc(<~n.1, l__0__49>, ~n.2) ) @ #vk.1 )
                              case Alice__merged_____2__1_0_____9__122
                              by solve( !KU( ~n.2 ) @ #vk.2 )
                            next
                              case c_enc
                              by solve( !KU( ~n.2 ) @ #vk.4 )
                            qed
                          qed
                        next
                          case Alice__merged_____1_____9__131
                          solve( State__Alice( <'rab_____15__0_1', 'rab__rab', %v__>,
                                               return__var__49, 'rab__',
                                               <l__0__49, l__1__49, l__2__49, l__3__49, l__4__49, l__5__49, 
                                                l__6__49>,
                                               'rab__'
                                 ) ▶₀ #vr.9 )
                            case Alice__merged_____11__1_0_____15__0_1__94_case_1
                            solve( !KU( enc(<~n.1, l__0__49>, ~n.2) ) @ #vk.1 )
                              case Alice__merged_____1_____9__131
                              by solve( State__Alice( <'rab_____15__0_1', 'rab__rab', %v__>,
                                                      return__var__49, 'rab__',
                                                      <l__0__49, l__1__49, l__2__49, l__3__49, l__4__49, 
                                                       ~n.3, l__6__49>,
                                                      'rab__'
                                        ) ▶₀ #vr.12 )
                            next
                              case c_enc
                              by solve( !KU( ~n.2 ) @ #vk.3 )
                            qed
                          next
                            case Alice__merged_____11__1_0_____15__0_1__94_case_2
                            solve( !KU( enc(<~n.1, l__0__49>, ~n.2) ) @ #vk.1 )
                              case Alice__merged_____1_____9__131
                              by solve( State__Alice( <'rab_____15__0_1', 'rab__rab', %v__>,
                                                      return__var__49, 'rab__',
                                                      <l__0__49, l__1__49, l__2__49, l__3__49, l__4__49, 
                                                       ~n.3, l__6__49>,
                                                      'rab__'
                                        ) ▶₀ #vr.12 )
                            next
                              case c_enc
                              by solve( !KU( ~n.2 ) @ #vk.3 )
                            qed
                          qed
                        next
                          case Alice__merged_____2__1_0_____9__122
                          solve( State__Alice( <'rab_____15__0_1', 'rab__rab', %v__>,
                                               return__var__49, 'rab__',
                                               <l__0__49, l__1__49, l__2__49, l__3__49, l__4__49, l__5__49, 
                                                l__6__49>,
                                               'rab__'
                                 ) ▶₀ #vr.9 )
                            case Alice__merged_____11__1_0_____15__0_1__94_case_1
                            solve( !KU( enc(<~n.1, l__0__49>, ~n.2) ) @ #vk.2 )
                              case Alice__merged_____2__1_0_____9__122
                              by solve( !KU( ~n.2 ) @ #vk.2 )
                            next
                              case c_enc
                              by solve( !KU( ~n.2 ) @ #vk.4 )
                            qed
                          next
                            case Alice__merged_____11__1_0_____15__0_1__94_case_2
                            solve( !KU( enc(<~n.1, l__0__49>, ~n.2) ) @ #vk.2 )
                              case Alice__merged_____2__1_0_____9__122
                              by solve( !KU( ~n.2 ) @ #vk.2 )
                            next
                              case c_enc
                              by solve( !KU( ~n.2 ) @ #vk.4 )
                            qed
                          qed
                        next
                          case Bob__merged_____3__1_0_____9__75
                          by contradiction /* cyclic */
                        qed
                      next
                        case Alice__merged_____1_____9__131
                        by contradiction /* non-normal terms */
                      next
                        case Alice__merged_____2__1_0_____9__122
                        by contradiction /* non-normal terms */
                      next
                        case c_enc
                        by solve( !KU( ~n.3 ) @ #vk.3 )
                      qed
                    next
                      case c_enc
                      solve( !KU( ~n ) @ #vk.2 )
                        case Alice__merged_____15__0_1_____15__0_3__0_1__86
                        by solve( !KU( ~n.3 ) @ #vk.3 )
                      next
                        case Bob__merged_____3__1_0_____9__75_case_1
                        by solve( !KU( ~n.3 ) @ #vk.4 )
                      next
                        case Bob__merged_____3__1_0_____9__75_case_2
                        by solve( !KU( ~n.3 ) @ #vk.4 )
                      qed
                    qed
                  next
                    case split_case_3
                    solve( !KU( enc(~n, ~n.3) ) @ #vk )
                      case Alice__merged_____15__0_1_____15__0_3__0_1__86
                      solve( Store( 'rab__udp', n__0__9 ) ▶₁ #vr.1 )
                        case Alice__merged_____15__0_1_____15__0_3__0_1__86
                        solve( State__Alice( <'rab_____15__0_1', 'rab__rab', %v__>,
                                             return__var__49, 'rab__',
                                             <l__0__49, l__1__49, l__2__49, l__3__49, l__4__49, l__5__49, 
                                              l__6__49>,
                                             'rab__'
                               ) ▶₀ #vr.9 )
                          case Alice__merged_____11__0_0_____15__0_1__98_case_1
                          by solve( State__Alice( <'rab_____15__0_1', 'rab__rab', %v__>,
                                                  return__var__49, 'rab__',
                                                  <l__0__49, l__1__49, l__2__49, l__3__49, l__4__49, ~n.3, 
                                                   l__6__49>,
                                                  'rab__'
                                    ) ▶₀ #vr.12 )
                        next
                          case Alice__merged_____11__0_0_____15__0_1__98_case_2
                          by solve( !KU( ~n.2 ) @ #vk.2 )
                        next
                          case Alice__merged_____11__1_0_____15__0_1__94_case_1
                          solve( !KU( enc(<~n.1, l__0__49>, ~n.2) ) @ #vk.2 )
                            case Alice__merged_____1_____9__131
                            by solve( State__Alice( <'rab_____15__0_1', 'rab__rab', %v__>,
                                                    return__var__49, 'rab__',
                                                    <l__0__49, l__1__49, l__2__49, l__3__49, l__4__49, ~n.3, 
                                                     l__6__49>,
                                                    'rab__'
                                      ) ▶₀ #vr.12 )
                          next
                            case c_enc
                            by solve( !KU( ~n.2 ) @ #vk.4 )
                          qed
                        next
                          case Alice__merged_____11__1_0_____15__0_1__94_case_2
                          solve( !KU( enc(<~n.1, l__0__49>, ~n.2) ) @ #vk.2 )
                            case Alice__merged_____2__1_0_____9__122
                            by solve( !KU( ~n.2 ) @ #vk.3 )
                          next
                            case c_enc
                            by solve( !KU( ~n.2 ) @ #vk.5 )
                          qed
                        next
                          case Alice__merged_____11__1_0_____15__0_1__94_case_3
                          solve( !KU( enc(<~n.1, l__0__49>, ~n.2) ) @ #vk.2 )
                            case Alice__merged_____1_____9__131
                            by solve( State__Alice( <'rab_____15__0_1', 'rab__rab', %v__>,
                                                    return__var__49, 'rab__',
                                                    <l__0__49, l__1__49, l__2__49, l__3__49, l__4__49, ~n.3, 
                                                     l__6__49>,
                                                    'rab__'
                                      ) ▶₀ #vr.12 )
                          next
                            case c_enc
                            by solve( !KU( ~n.2 ) @ #vk.4 )
                          qed
                        next
                          case Alice__merged_____11__1_0_____15__0_1__94_case_4
                          solve( !KU( enc(<~n.1, l__0__49>, ~n.2) ) @ #vk.2 )
                            case Alice__merged_____2__1_0_____9__122
                            by solve( !KU( ~n.2 ) @ #vk.3 )
                          next
                            case c_enc
                            by solve( !KU( ~n.2 ) @ #vk.5 )
                          qed
                        next
                          case Alice__merged_____11__1_0_____15__0_1__94_case_5
                          solve( !KU( enc(<~n.1, l__0__49>, ~n.2) ) @ #vk.2 )
                            case Alice__merged_____1_____9__131
                            by solve( State__Alice( <'rab_____15__0_1', 'rab__rab', %v__>,
                                                    return__var__49, 'rab__',
                                                    <l__0__49, l__1__49, l__2__49, l__3__49, l__4__49, ~n.3, 
                                                     l__6__49>,
                                                    'rab__'
                                      ) ▶₀ #vr.12 )
                          next
                            case c_enc
                            by solve( !KU( ~n.2 ) @ #vk.4 )
                          qed
                        next
                          case Alice__merged_____11__1_0_____15__0_1__94_case_6
                          solve( !KU( enc(<~n.1, l__0__49>, ~n.2) ) @ #vk.2 )
                            case Alice__merged_____2__1_0_____9__122
                            by solve( !KU( ~n.2 ) @ #vk.3 )
                          next
                            case c_enc
                            by solve( !KU( ~n.2 ) @ #vk.5 )
                          qed
                        qed
                      next
                        case Alice__merged_____1_____9__131
                        solve( State__Alice( <'rab_____15__0_1', 'rab__rab', %v__>,
                                             return__var__49, 'rab__',
                                             <l__0__49, l__1__49, l__2__49, l__3__49, l__4__49, l__5__49, 
                                              l__6__49>,
                                             'rab__'
                               ) ▶₀ #vr.9 )
                          case Alice__merged_____11__1_0_____15__0_1__94_case_1
                          solve( !KU( enc(<~n.1, l__0__49>, ~n.2) ) @ #vk.2 )
                            case Alice__merged_____1_____9__131
                            by solve( State__Alice( <'rab_____15__0_1', 'rab__rab', %v__>,
                                                    return__var__49, 'rab__',
                                                    <l__0__49, l__1__49, l__2__49, l__3__49, l__4__49, ~n.3, 
                                                     l__6__49>,
                                                    'rab__'
                                      ) ▶₀ #vr.12 )
                          next
                            case c_enc
                            by solve( !KU( ~n.2 ) @ #vk.4 )
                          qed
                        next
                          case Alice__merged_____11__1_0_____15__0_1__94_case_2
                          solve( !KU( enc(<~n.1, l__0__49>, ~n.2) ) @ #vk.2 )
                            case Alice__merged_____1_____9__131
                            by solve( State__Alice( <'rab_____15__0_1', 'rab__rab', %v__>,
                                                    return__var__49, 'rab__',
                                                    <l__0__49, l__1__49, l__2__49, l__3__49, l__4__49, ~n.3, 
                                                     l__6__49>,
                                                    'rab__'
                                      ) ▶₀ #vr.12 )
                          next
                            case c_enc
                            by solve( !KU( ~n.2 ) @ #vk.4 )
                          qed
                        qed
                      next
                        case Alice__merged_____2__1_0_____9__122
                        solve( State__Alice( <'rab_____15__0_1', 'rab__rab', %v__>,
                                             return__var__49, 'rab__',
                                             <l__0__49, l__1__49, l__2__49, l__3__49, l__4__49, l__5__49, 
                                              l__6__49>,
                                             'rab__'
                               ) ▶₀ #vr.9 )
                          case Alice__merged_____11__1_0_____15__0_1__94_case_1
                          solve( !KU( enc(<~n.1, l__0__49>, ~n.2) ) @ #vk.3 )
                            case Alice__merged_____2__1_0_____9__122
                            by solve( !KU( ~n.2 ) @ #vk.3 )
                          next
                            case c_enc
                            by solve( !KU( ~n.2 ) @ #vk.5 )
                          qed
                        next
                          case Alice__merged_____11__1_0_____15__0_1__94_case_2
                          solve( !KU( enc(<~n.1, l__0__49>, ~n.2) ) @ #vk.3 )
                            case Alice__merged_____2__1_0_____9__122
                            by solve( !KU( ~n.2 ) @ #vk.3 )
                          next
                            case c_enc
                            by solve( !KU( ~n.2 ) @ #vk.5 )
                          qed
                        qed
                      next
                        case Bob__merged_____3__1_0_____9__75
                        by contradiction /* cyclic */
                      qed
                    next
                      case c_enc
                      solve( !KU( ~n ) @ #vk.2 )
                        case Alice__merged_____15__0_1_____15__0_3__0_1__86
                        by solve( !KU( ~n.3 ) @ #vk.3 )
                      next
                        case Bob__merged_____3__1_0_____9__75_case_1
                        by solve( !KU( ~n.3 ) @ #vk.4 )
                      next
                        case Bob__merged_____3__1_0_____9__75_case_2
                        by solve( !KU( ~n.3 ) @ #vk.4 )
                      qed
                    qed
                  qed
                qed
              qed
            qed
          qed
        qed
      next
        case Alice__merged_____1_____9__131
        solve( !ACP__( <'rab__Bob', 'rab__rab'>, 'rab__udp', 'rab__recv'
               ) ▶₃ #time__0 )
          case Init__system__ACP__0
          solve( !Const__( 'rab__priv_key_bob', priv_key_bob__34 ) ▶₄ #time__0 )
            case Const__priv_key_bob
            solve( !Const__( 'rab__nonce_b', ~n ) ▶₅ #time__0 )
              case Const__nonce_b
              solve( !Const__( 'rab__nonce_b', nonce_b__35 ) ▶₆ #time__0 )
                case Const__nonce_b
                solve( !Eq__( z, ~n ) ▶₇ #time__0 )
                  case Equality_gen
                  solve( splitEqs(2) )
                    case split_case_1
                    solve( !KU( enc(~n, ~n.3) ) @ #vk )
                      case Alice__merged_____15__0_1_____15__0_3__0_1__86
                      solve( !KU( enc(<l__3__30, x>, ~n.3) ) @ #vk.1 )
                        case Alice__merged_____1_____9__131
                        solve( Store( 'rab__udp', n__0__9 ) ▶₁ #vr.1 )
                          case Alice__merged_____15__0_1_____15__0_3__0_1__86
                          solve( File__Alice( 'rab__rab', loc__0, ~n.3 ) ▶₁ #vr.9 )
                            case Alice__merged_____1_____9__131
                            by contradiction /* cyclic */
                          qed
                        next
                          case Bob__merged_____3__1_0_____9__75
                          by contradiction /* cyclic */
                        qed
                      next
                        case c_enc
                        by solve( !KU( ~n.3 ) @ #vk.3 )
                      qed
                    next
                      case c_enc
                      solve( !KU( ~n ) @ #vk.2 )
                        case Alice__merged_____15__0_1_____15__0_3__0_1__86
                        by solve( !KU( ~n.3 ) @ #vk.3 )
                      next
                        case Bob__merged_____3__1_0_____9__75_case_1
                        by solve( !KU( ~n.3 ) @ #vk.4 )
                      next
                        case Bob__merged_____3__1_0_____9__75_case_2
                        by solve( !KU( ~n.3 ) @ #vk.4 )
                      qed
                    qed
                  next
                    case split_case_2
                    solve( !KU( enc(~n, ~n.3) ) @ #vk )
                      case Alice__merged_____15__0_1_____15__0_3__0_1__86
                      solve( !KU( enc(x, ~n.3) ) @ #vk.1 )
                        case Alice__merged_____15__0_1_____15__0_3__0_1__86
                        solve( Store( 'rab__udp', n__0__9 ) ▶₁ #vr.1 )
                          case Alice__merged_____15__0_1_____15__0_3__0_1__86
                          solve( File__Alice( 'rab__rab', loc__0, n__0__20 ) ▶₁ #vr.9 )
                            case Alice__init_filesys_____0_____1__0
                            by solve( State__Alice( <'rab_____15__0_1', 'rab__rab', %v__>,
                                                    return__var__49, 'rab__',
                                                    <l__0__49, l__1__49, l__2__49, l__3__49, l__4__49, ~n.3, 
                                                     l__6__49>,
                                                    'rab__'
                                      ) ▶₀ #vr.14 )
                          next
                            case Alice__merged_____1_____9__131
                            by contradiction /* cyclic */
                          qed
                        next
                          case Bob__merged_____3__1_0_____9__75
                          by contradiction /* cyclic */
                        qed
                      next
                        case Alice__merged_____1_____9__131
                        by contradiction /* non-normal terms */
                      next
                        case c_enc
                        by solve( !KU( ~n.3 ) @ #vk.3 )
                      qed
                    next
                      case c_enc
                      solve( !KU( ~n ) @ #vk.2 )
                        case Alice__merged_____15__0_1_____15__0_3__0_1__86
                        by solve( !KU( ~n.3 ) @ #vk.3 )
                      next
                        case Bob__merged_____3__1_0_____9__75_case_1
                        by solve( !KU( ~n.3 ) @ #vk.4 )
                      next
                        case Bob__merged_____3__1_0_____9__75_case_2
                        by solve( !KU( ~n.3 ) @ #vk.4 )
                      qed
                    qed
                  next
                    case split_case_3
                    solve( !KU( enc(~n, ~n.3) ) @ #vk )
                      case Alice__merged_____15__0_1_____15__0_3__0_1__86
                      solve( Store( 'rab__udp', n__0__9 ) ▶₁ #vr.1 )
                        case Alice__merged_____15__0_1_____15__0_3__0_1__86
                        solve( File__Alice( 'rab__rab', loc__0, n__0__20 ) ▶₁ #vr.9 )
                          case Alice__init_filesys_____0_____1__0
                          by solve( State__Alice( <'rab_____15__0_1', 'rab__rab', %v__>,
                                                  return__var__49, 'rab__',
                                                  <l__0__49, l__1__49, l__2__49, l__3__49, l__4__49, ~n.3, 
                                                   l__6__49>,
                                                  'rab__'
                                    ) ▶₀ #vr.14 )
                        next
                          case Alice__merged_____1_____9__131
                          by contradiction /* cyclic */
                        qed
                      next
                        case Bob__merged_____3__1_0_____9__75
                        by contradiction /* cyclic */
                      qed
                    next
                      case c_enc
                      solve( !KU( ~n ) @ #vk.2 )
                        case Alice__merged_____15__0_1_____15__0_3__0_1__86
                        by solve( !KU( ~n.3 ) @ #vk.3 )
                      next
                        case Bob__merged_____3__1_0_____9__75_case_1
                        by solve( !KU( ~n.3 ) @ #vk.4 )
                      next
                        case Bob__merged_____3__1_0_____9__75_case_2
                        by solve( !KU( ~n.3 ) @ #vk.4 )
                      qed
                    qed
                  qed
                qed
              qed
            qed
          qed
        qed
      next
        case Alice__merged_____2__1_0_____9__122
        solve( !ACP__( <'rab__Bob', 'rab__rab'>, 'rab__udp', 'rab__recv'
               ) ▶₃ #time__0 )
          case Init__system__ACP__0
          solve( !Const__( 'rab__priv_key_bob', priv_key_bob__34 ) ▶₄ #time__0 )
            case Const__priv_key_bob
            solve( !Const__( 'rab__nonce_b', ~n ) ▶₅ #time__0 )
              case Const__nonce_b
              solve( !Const__( 'rab__nonce_b', nonce_b__35 ) ▶₆ #time__0 )
                case Const__nonce_b
                solve( !Eq__( z, ~n ) ▶₇ #time__0 )
                  case Equality_gen
                  solve( splitEqs(2) )
                    case split_case_1
                    solve( !KU( enc(~n, ~n.3) ) @ #vk )
                      case Alice__merged_____15__0_1_____15__0_3__0_1__86
                      solve( !KU( enc(<l__3__30, x>, ~n.3) ) @ #vk.1 )
                        case Alice__merged_____2__1_0_____9__122
                        by solve( !KU( ~n.3 ) @ #vk.2 )
                      next
                        case c_enc
                        by solve( !KU( ~n.3 ) @ #vk.4 )
                      qed
                    next
                      case c_enc
                      solve( !KU( ~n ) @ #vk.3 )
                        case Alice__merged_____15__0_1_____15__0_3__0_1__86
                        by solve( !KU( ~n.3 ) @ #vk.4 )
                      next
                        case Bob__merged_____3__1_0_____9__75_case_1
                        by solve( !KU( ~n.3 ) @ #vk.5 )
                      next
                        case Bob__merged_____3__1_0_____9__75_case_2
                        by solve( !KU( ~n.3 ) @ #vk.5 )
                      qed
                    qed
                  next
                    case split_case_2
                    solve( !KU( enc(~n, ~n.3) ) @ #vk )
                      case Alice__merged_____15__0_1_____15__0_3__0_1__86
                      solve( !KU( enc(x, ~n.3) ) @ #vk.1 )
                        case Alice__merged_____15__0_1_____15__0_3__0_1__86
                        solve( Store( 'rab__udp', n__0__9 ) ▶₁ #vr.1 )
                          case Alice__merged_____15__0_1_____15__0_3__0_1__86
                          solve( File__Alice( 'rab__rab', loc__0, n__0__11 ) ▶₁ #vr.9 )
                            case Alice__merged_____0_____2__1_0__133
                            solve( State__Alice( <'rab_____15__0_1', 'rab__rab', %v__>,
                                                 return__var__49, 'rab__',
                                                 <l__0__49, l__1__49, l__2__49, l__3__49, l__4__49, ~n.3, 
                                                  l__6__49>,
                                                 'rab__'
                                   ) ▶₀ #vr.14 )
                              case Alice__merged_____11__1_0_____15__0_1__94_case_1
                              by solve( !KU( ~n.3 ) @ #vk.1 )
                            next
                              case Alice__merged_____11__1_0_____15__0_1__94_case_2
                              by contradiction /* cyclic */
                            qed
                          next
                            case Alice__merged_____2__1_0_____9__122
                            by contradiction /* cyclic */
                          qed
                        next
                          case Bob__merged_____3__1_0_____9__75
                          by contradiction /* cyclic */
                        qed
                      next
                        case Alice__merged_____2__1_0_____9__122
                        by contradiction /* non-normal terms */
                      next
                        case c_enc
                        by solve( !KU( ~n.3 ) @ #vk.4 )
                      qed
                    next
                      case c_enc
                      solve( !KU( ~n ) @ #vk.3 )
                        case Alice__merged_____15__0_1_____15__0_3__0_1__86
                        by solve( !KU( ~n.3 ) @ #vk.4 )
                      next
                        case Bob__merged_____3__1_0_____9__75_case_1
                        by solve( !KU( ~n.3 ) @ #vk.5 )
                      next
                        case Bob__merged_____3__1_0_____9__75_case_2
                        by solve( !KU( ~n.3 ) @ #vk.5 )
                      qed
                    qed
                  next
                    case split_case_3
                    solve( !KU( enc(~n, ~n.3) ) @ #vk )
                      case Alice__merged_____15__0_1_____15__0_3__0_1__86
                      solve( Store( 'rab__udp', n__0__9 ) ▶₁ #vr.1 )
                        case Alice__merged_____15__0_1_____15__0_3__0_1__86
                        solve( File__Alice( 'rab__rab', loc__0, n__0__11 ) ▶₁ #vr.9 )
                          case Alice__merged_____0_____2__1_0__133
                          solve( State__Alice( <'rab_____15__0_1', 'rab__rab', %v__>,
                                               return__var__49, 'rab__',
                                               <l__0__49, l__1__49, l__2__49, l__3__49, l__4__49, ~n.3, 
                                                l__6__49>,
                                               'rab__'
                                 ) ▶₀ #vr.14 )
                            case Alice__merged_____11__1_0_____15__0_1__94_case_1
                            by solve( !KU( ~n.3 ) @ #vk.2 )
                          next
                            case Alice__merged_____11__1_0_____15__0_1__94_case_2
                            by solve( !KU( ~n.3 ) @ #vk.2 )
                          qed
                        next
                          case Alice__merged_____2__1_0_____9__122
                          by contradiction /* cyclic */
                        qed
                      next
                        case Bob__merged_____3__1_0_____9__75
                        by contradiction /* cyclic */
                      qed
                    next
                      case c_enc
                      solve( !KU( ~n ) @ #vk.3 )
                        case Alice__merged_____15__0_1_____15__0_3__0_1__86
                        by solve( !KU( ~n.3 ) @ #vk.4 )
                      next
                        case Bob__merged_____3__1_0_____9__75_case_1
                        by solve( !KU( ~n.3 ) @ #vk.5 )
                      next
                        case Bob__merged_____3__1_0_____9__75_case_2
                        by solve( !KU( ~n.3 ) @ #vk.5 )
                      qed
                    qed
                  qed
                qed
              qed
            qed
          qed
        qed
      next
        case Bob__merged_____3__1_0_____9__75
        solve( !ACP__( <'rab__Bob', 'rab__rab'>, 'rab__udp', 'rab__recv'
               ) ▶₃ #time__0 )
          case Init__system__ACP__0
          solve( !Const__( 'rab__priv_key_bob', priv_key_bob__34 ) ▶₄ #time__0 )
            case Const__priv_key_bob
            solve( !Const__( 'rab__nonce_b', ~n ) ▶₅ #time__0 )
              case Const__nonce_b
              solve( !Const__( 'rab__nonce_b', nonce_b__35 ) ▶₆ #time__0 )
                case Const__nonce_b
                solve( !Eq__( z, ~n ) ▶₇ #time__0 )
                  case Equality_gen
                  solve( splitEqs(2) )
                    case split_case_1
                    solve( !KU( enc(~n, ~n.3) ) @ #vk )
                      case Alice__merged_____15__0_1_____15__0_3__0_1__86
                      solve( !KU( enc(<l__3__30, x>, ~n.3) ) @ #vk.1 )
                        case Alice__merged_____1_____9__131
                        solve( Store( 'rab__udp', n__0__9 ) ▶₁ #vr.1 )
                          case Alice__merged_____15__0_1_____15__0_3__0_1__86
                          solve( State__Alice( <'rab_____15__0_1', 'rab__rab', %v__>,
                                               return__var__49, 'rab__',
                                               <l__0__49, l__1__49, l__2__49, l__3__49, l__4__49, ~n.3, 
                                                l__6__49>,
                                               'rab__'
                                 ) ▶₀ #vr.10 )
                            case Alice__merged_____11__1_0_____15__0_1__94_case_1
                            solve( !KU( enc(<~n.1, l__0__49>, ~n.2) ) @ #vk.2 )
                              case c_enc
                              by solve( !KU( ~n.2 ) @ #vk.4 )
                            qed
                          next
                            case Alice__merged_____11__1_0_____15__0_1__94_case_2
                            solve( !KU( enc(<~n.1, l__0__49>, ~n.2) ) @ #vk.2 )
                              case c_enc
                              by solve( !KU( ~n.2 ) @ #vk.4 )
                            qed
                          qed
                        next
                          case Alice__merged_____1_____9__131
                          solve( State__Alice( <'rab_____15__0_1', 'rab__rab', %v__>,
                                               return__var__49, 'rab__',
                                               <l__0__49, l__1__49, l__2__49, l__3__49, l__4__49, ~n.3, 
                                                l__6__49>,
                                               'rab__'
                                 ) ▶₀ #vr.10 )
                            case Alice__merged_____11__1_0_____15__0_1__94
                            solve( !KU( enc(<~n.1, l__0__49>, ~n.2) ) @ #vk.2 )
                              case c_enc
                              by solve( !KU( ~n.2 ) @ #vk.4 )
                            qed
                          qed
                        qed
                      next
                        case Alice__merged_____2__1_0_____9__122
                        by solve( !KU( ~n.3 ) @ #vk.2 )
                      next
                        case c_enc
                        by solve( !KU( ~n.3 ) @ #vk.3 )
                      qed
                    next
                      case c_enc
                      solve( !KU( ~n ) @ #vk.2 )
                        case Alice__merged_____15__0_1_____15__0_3__0_1__86
                        by solve( !KU( ~n.3 ) @ #vk.3 )
                      next
                        case Bob__merged_____3__1_0_____9__75_case_1
                        by solve( !KU( ~n.3 ) @ #vk.4 )
                      next
                        case Bob__merged_____3__1_0_____9__75_case_2
                        by solve( !KU( ~n.3 ) @ #vk.4 )
                      qed
                    qed
                  next
                    case split_case_2
                    solve( !KU( enc(~n, ~n.3) ) @ #vk )
                      case Alice__merged_____15__0_1_____15__0_3__0_1__86
                      solve( !KU( enc(x, ~n.3) ) @ #vk.1 )
                        case Alice__merged_____15__0_1_____15__0_3__0_1__86
                        solve( Store( 'rab__udp', n__0__9 ) ▶₁ #vr.1 )
                          case Alice__merged_____15__0_1_____15__0_3__0_1__86
                          solve( State__Alice( <'rab_____15__0_1', 'rab__rab', %v__>,
                                               return__var__49, 'rab__',
                                               <l__0__49, l__1__49, l__2__49, l__3__49, l__4__49, ~n.3, 
                                                l__6__49>,
                                               'rab__'
                                 ) ▶₀ #vr.10 )
                            case Alice__merged_____11__1_0_____15__0_1__94_case_1
                            solve( !KU( enc(<~n.1, l__0__49>, ~n.2) ) @ #vk.1 )
                              case c_enc
                              by solve( !KU( ~n.2 ) @ #vk.3 )
                            qed
                          next
                            case Alice__merged_____11__1_0_____15__0_1__94_case_2
                            by solve( !KU( ~n.3 ) @ #vk.2 )
                          next
                            case Alice__merged_____11__1_0_____15__0_1__94_case_3
                            solve( !KU( enc(<~n.1, l__0__49>, ~n.2) ) @ #vk.1 )
                              case c_enc
                              by solve( !KU( ~n.2 ) @ #vk.3 )
                            qed
                          next
                            case Alice__merged_____11__1_0_____15__0_1__94_case_4
                            by solve( !KU( ~n.3 ) @ #vk.2 )
                          qed
                        next
                          case Alice__merged_____1_____9__131
                          solve( State__Alice( <'rab_____15__0_1', 'rab__rab', %v__>,
                                               return__var__49, 'rab__',
                                               <l__0__49, l__1__49, l__2__49, l__3__49, l__4__49, ~n.3, 
                                                l__6__49>,
                                               'rab__'
                                 ) ▶₀ #vr.10 )
                            case Alice__merged_____11__1_0_____15__0_1__94
                            solve( !KU( enc(<~n.1, l__0__49>, ~n.2) ) @ #vk.1 )
                              case c_enc
                              by solve( !KU( ~n.2 ) @ #vk.3 )
                            qed
                          qed
                        next
                          case Alice__merged_____2__1_0_____9__122
                          solve( State__Alice( <'rab_____15__0_1', 'rab__rab', %v__>,
                                               return__var__49, 'rab__',
                                               <l__0__49, l__1__49, l__2__49, l__3__49, l__4__49, ~n.3, 
                                                l__6__49>,
                                               'rab__'
                                 ) ▶₀ #vr.10 )
                            case Alice__merged_____11__1_0_____15__0_1__94
                            by solve( !KU( ~n.3 ) @ #vk.1 )
                          qed
                        qed
                      next
                        case Alice__merged_____1_____9__131
                        by contradiction /* non-normal terms */
                      next
                        case Alice__merged_____2__1_0_____9__122
                        by contradiction /* non-normal terms */
                      next
                        case c_enc
                        by solve( !KU( ~n.3 ) @ #vk.3 )
                      qed
                    next
                      case c_enc
                      solve( !KU( ~n ) @ #vk.2 )
                        case Alice__merged_____15__0_1_____15__0_3__0_1__86
                        by solve( !KU( ~n.3 ) @ #vk.3 )
                      next
                        case Bob__merged_____3__1_0_____9__75_case_1
                        by solve( !KU( ~n.3 ) @ #vk.4 )
                      next
                        case Bob__merged_____3__1_0_____9__75_case_2
                        by solve( !KU( ~n.3 ) @ #vk.4 )
                      qed
                    qed
                  next
                    case split_case_3
                    solve( !KU( enc(~n, ~n.3) ) @ #vk )
                      case Alice__merged_____15__0_1_____15__0_3__0_1__86
                      solve( Store( 'rab__udp', n__0__9 ) ▶₁ #vr.1 )
                        case Alice__merged_____15__0_1_____15__0_3__0_1__86
                        solve( State__Alice( <'rab_____15__0_1', 'rab__rab', %v__>,
                                             return__var__49, 'rab__',
                                             <l__0__49, l__1__49, l__2__49, l__3__49, l__4__49, ~n.3, l__6__49
                                             >,
                                             'rab__'
                               ) ▶₀ #vr.10 )
                          case Alice__merged_____11__1_0_____15__0_1__94_case_1
                          solve( !KU( enc(<~n.1, l__0__49>, ~n.2) ) @ #vk.2 )
                            case c_enc
                            by solve( !KU( ~n.2 ) @ #vk.4 )
                          qed
                        next
                          case Alice__merged_____11__1_0_____15__0_1__94_case_2
                          by solve( !KU( ~n.3 ) @ #vk.3 )
                        next
                          case Alice__merged_____11__1_0_____15__0_1__94_case_3
                          solve( !KU( enc(<~n.1, l__0__49>, ~n.2) ) @ #vk.2 )
                            case c_enc
                            by solve( !KU( ~n.2 ) @ #vk.4 )
                          qed
                        next
                          case Alice__merged_____11__1_0_____15__0_1__94_case_4
                          by solve( !KU( ~n.3 ) @ #vk.3 )
                        qed
                      next
                        case Alice__merged_____1_____9__131
                        solve( State__Alice( <'rab_____15__0_1', 'rab__rab', %v__>,
                                             return__var__49, 'rab__',
                                             <l__0__49, l__1__49, l__2__49, l__3__49, l__4__49, ~n.3, l__6__49
                                             >,
                                             'rab__'
                               ) ▶₀ #vr.10 )
                          case Alice__merged_____11__1_0_____15__0_1__94
                          solve( !KU( enc(<~n.1, l__0__49>, ~n.2) ) @ #vk.2 )
                            case c_enc
                            by solve( !KU( ~n.2 ) @ #vk.4 )
                          qed
                        qed
                      next
                        case Alice__merged_____2__1_0_____9__122
                        solve( State__Alice( <'rab_____15__0_1', 'rab__rab', %v__>,
                                             return__var__49, 'rab__',
                                             <l__0__49, l__1__49, l__2__49, l__3__49, l__4__49, ~n.3, l__6__49
                                             >,
                                             'rab__'
                               ) ▶₀ #vr.10 )
                          case Alice__merged_____11__1_0_____15__0_1__94
                          by solve( !KU( ~n.3 ) @ #vk.2 )
                        qed
                      qed
                    next
                      case c_enc
                      solve( !KU( ~n ) @ #vk.2 )
                        case Alice__merged_____15__0_1_____15__0_3__0_1__86
                        by solve( !KU( ~n.3 ) @ #vk.3 )
                      next
                        case Bob__merged_____3__1_0_____9__75_case_1
                        by solve( !KU( ~n.3 ) @ #vk.4 )
                      next
                        case Bob__merged_____3__1_0_____9__75_case_2
                        by solve( !KU( ~n.3 ) @ #vk.4 )
                      qed
                    qed
                  qed
                qed
              qed
            qed
          qed
        qed
      qed
    qed
  qed
qed

lemma SecrecyCanBeEstablishedA_tmrn:
  exists-trace "∃ na #i. SecretNonceAlice( na ) @ #i"
/*
guarded formula characterizing all satisfying traces:
"∃ na #i. (SecretNonceAlice( na ) @ #i)"
*/
simplify
solve( SecretNonceAlice( na ) @ #i )
  case Alice__merged_____11__0_0_____15__0_1__98
  solve( State__Alice( <'rab_____11__0_0', param, %v__>, return__var__35,
                       'rab__', <l__0__35, l__1__35, l__2__35, l__3__35, l__4__35>, 'rab__'
         ) ▶₀ #i )
    case Alice__merged_____9_____11__0_0__101_case_1
    solve( Store( 'rab__udp', n__0__35 ) ▶₁ #i )
      case Alice__merged_____15__0_1_____15__0_3__0_1__86
      solve( !ACP__( <'rab__Alice', 'rab__rab'>, 'rab__udp', 'rab__recv'
             ) ▶₂ #i )
        case Init__system__ACP__2
        solve( !Const__( 'rab__priv_key_alice', priv_key_alice__44 ) ▶₃ #i )
          case Const__priv_key_alice
          solve( !Const__( 'rab__nonce_a', na ) ▶₄ #i )
            case Const__nonce_a
            solve( !Const__( 'rab__nonce_a', nonce_a__47 ) ▶₅ #i )
              case Const__nonce_a
              by solve( !Eq__( fst(z), ~n ) ▶₆ #i )
            qed
          qed
        qed
      qed
    next
      case Alice__merged_____1_____9__131
      solve( !ACP__( <'rab__Alice', 'rab__rab'>, 'rab__udp', 'rab__recv'
             ) ▶₂ #i )
        case Init__system__ACP__2
        solve( !Const__( 'rab__priv_key_alice', priv_key_alice__44 ) ▶₃ #i )
          case Const__priv_key_alice
          solve( !Const__( 'rab__nonce_a', na ) ▶₄ #i )
            case Const__nonce_a
            solve( !Const__( 'rab__nonce_a', nonce_a__47 ) ▶₅ #i )
              case Const__nonce_a
              solve( !Eq__( z, ~n ) ▶₆ #i )
                case Equality_gen
                solve( File__Alice( 'rab__rab', loc__0, ~l__3__35 ) ▶₁ #vr.1 )
                  case Alice__merged_____1_____9__131
                  by contradiction /* cyclic */
                qed
              qed
            qed
          qed
        qed
      qed
    next
      case Bob__merged_____3__0_0_____9__79
      solve( !ACP__( <'rab__Alice', 'rab__rab'>, 'rab__udp', 'rab__recv'
             ) ▶₂ #i )
        case Init__system__ACP__2
        solve( !Const__( 'rab__priv_key_alice', priv_key_alice__44 ) ▶₃ #i )
          case Const__priv_key_alice
          solve( !Const__( 'rab__nonce_a', na ) ▶₄ #i )
            case Const__nonce_a
            solve( !Const__( 'rab__nonce_a', nonce_a__47 ) ▶₅ #i )
              case Const__nonce_a
              by solve( !Eq__( fst(dec(enc(<~n, ~n.2>, pk(~n.3)), ~n.3)), ~n ) ▶₆ #i )
            qed
          qed
        qed
      qed
    next
      case Bob__merged_____3__1_0_____9__75
      solve( !ACP__( <'rab__Alice', 'rab__rab'>, 'rab__udp', 'rab__recv'
             ) ▶₂ #i )
        case Init__system__ACP__2
        solve( !Const__( 'rab__priv_key_alice', priv_key_alice__44 ) ▶₃ #i )
          case Const__priv_key_alice
          solve( !Const__( 'rab__nonce_a', na ) ▶₄ #i )
            case Const__nonce_a
            solve( !Const__( 'rab__nonce_a', nonce_a__47 ) ▶₅ #i )
              case Const__nonce_a
              by solve( !Eq__( fst(dec(enc(<~n, ~n.2>, pk(~n.3)), ~n.3)), ~n ) ▶₆ #i )
            qed
          qed
        qed
      qed
    qed
  next
    case Alice__merged_____9_____11__0_0__101_case_2
    solve( Store( 'rab__udp', n__0__35 ) ▶₁ #i )
      case Alice__merged_____15__0_1_____15__0_3__0_1__86
      solve( !ACP__( <'rab__Alice', 'rab__rab'>, 'rab__udp', 'rab__recv'
             ) ▶₂ #i )
        case Init__system__ACP__2
        solve( !Const__( 'rab__priv_key_alice', priv_key_alice__44 ) ▶₃ #i )
          case Const__priv_key_alice
          solve( !Const__( 'rab__nonce_a', na ) ▶₄ #i )
            case Const__nonce_a
            solve( !Const__( 'rab__nonce_a', nonce_a__47 ) ▶₅ #i )
              case Const__nonce_a
              by solve( !Eq__( fst(z), ~n ) ▶₆ #i )
            qed
          qed
        qed
      qed
    next
      case Alice__merged_____2__1_0_____9__122
      solve( !ACP__( <'rab__Alice', 'rab__rab'>, 'rab__udp', 'rab__recv'
             ) ▶₂ #i )
        case Init__system__ACP__2
        solve( !Const__( 'rab__priv_key_alice', priv_key_alice__44 ) ▶₃ #i )
          case Const__priv_key_alice
          solve( !Const__( 'rab__nonce_a', na ) ▶₄ #i )
            case Const__nonce_a
            solve( !Const__( 'rab__nonce_a', nonce_a__47 ) ▶₅ #i )
              case Const__nonce_a
              solve( !Eq__( z, ~n ) ▶₆ #i )
                case Equality_gen
                by solve( !KU( ~l__3__35 ) @ #vk )
              qed
            qed
          qed
        qed
      qed
    next
      case Bob__merged_____3__0_0_____9__79
      solve( !ACP__( <'rab__Alice', 'rab__rab'>, 'rab__udp', 'rab__recv'
             ) ▶₂ #i )
        case Init__system__ACP__2
        solve( !Const__( 'rab__priv_key_alice', priv_key_alice__44 ) ▶₃ #i )
          case Const__priv_key_alice
          solve( !Const__( 'rab__nonce_a', na ) ▶₄ #i )
            case Const__nonce_a
            solve( !Const__( 'rab__nonce_a', nonce_a__47 ) ▶₅ #i )
              case Const__nonce_a
              by solve( !Eq__( fst(dec(enc(<~n, ~n.2>, pk(~n.3)), ~n.3)), ~n ) ▶₆ #i )
            qed
          qed
        qed
      qed
    next
      case Bob__merged_____3__1_0_____9__75
      solve( !ACP__( <'rab__Alice', 'rab__rab'>, 'rab__udp', 'rab__recv'
             ) ▶₂ #i )
        case Init__system__ACP__2
        solve( !Const__( 'rab__priv_key_alice', priv_key_alice__44 ) ▶₃ #i )
          case Const__priv_key_alice
          solve( !Const__( 'rab__nonce_a', na ) ▶₄ #i )
            case Const__nonce_a
            solve( !Const__( 'rab__nonce_a', nonce_a__47 ) ▶₅ #i )
              case Const__nonce_a
              by solve( !Eq__( fst(dec(enc(<~n, ~n.2>, pk(~n.3)), ~n.3)), ~n ) ▶₆ #i )
            qed
          qed
        qed
      qed
    qed
  qed
next
  case Alice__merged_____11__1_0_____15__0_1__94
  solve( State__Alice( <'rab_____11__1_0', param, %v__>, return__var__40,
                       'rab__', <l__0__40, l__1__40, l__2__40, l__3__40, l__4__40>, 'rab__'
         ) ▶₀ #i )
    case Alice__merged_____9_____11__1_0__102_case_1
    solve( Store( 'rab__udp', n__0__40 ) ▶₁ #i )
      case Alice__merged_____15__0_1_____15__0_3__0_1__86
      solve( !ACP__( <'rab__Alice', 'rab__rab'>, 'rab__udp', 'rab__recv'
             ) ▶₃ #i )
        case Init__system__ACP__2
        solve( !Const__( 'rab__priv_key_alice', priv_key_alice__44 ) ▶₄ #i )
          case Const__priv_key_alice
          solve( !Const__( 'rab__nonce_a', na ) ▶₅ #i )
            case Const__nonce_a
            solve( !Const__( 'rab__nonce_a', nonce_a__47 ) ▶₆ #i )
              case Const__nonce_a
              solve( !Eq__( z, ~n ) ▶₇ #i )
                case Equality_gen
                solve( !KU( enc(<~n, z>, ~n.3) ) @ #vk )
                  case Alice__merged_____1_____9__131
                  solve( File__Alice( 'rab__rab', loc__0, ~n.1 ) ▶₁ #vr.1 )
                    case Alice__merged_____1_____9__131
                    by contradiction /* cyclic */
                  qed
                next
                  case c_enc
                  by solve( !KU( ~n.3 ) @ #vk.2 )
                qed
              qed
            qed
          qed
        qed
      qed
    next
      case Alice__merged_____1_____9__131
      solve( !ACP__( <'rab__Alice', 'rab__rab'>, 'rab__udp', 'rab__recv'
             ) ▶₃ #i )
        case Init__system__ACP__2
        solve( !Const__( 'rab__priv_key_alice', priv_key_alice__44 ) ▶₄ #i )
          case Const__priv_key_alice
          solve( !Const__( 'rab__nonce_a', na ) ▶₅ #i )
            case Const__nonce_a
            solve( !Const__( 'rab__nonce_a', nonce_a__47 ) ▶₆ #i )
              case Const__nonce_a
              solve( !Eq__( z, ~n ) ▶₇ #i )
                case Equality_gen
                solve( !KU( enc(<~n, z>, ~n.2) ) @ #vk )
                  case Alice__merged_____1_____9__131
                  solve( File__Alice( 'rab__rab', loc__0, ~n.1 ) ▶₁ #vr.1 )
                    case Alice__merged_____1_____9__131
                    by contradiction /* cyclic */
                  qed
                next
                  case c_enc
                  by solve( !KU( ~n.2 ) @ #vk.2 )
                qed
              qed
            qed
          qed
        qed
      qed
    next
      case Bob__merged_____3__0_0_____9__79
      solve( !ACP__( <'rab__Alice', 'rab__rab'>, 'rab__udp', 'rab__recv'
             ) ▶₃ #i )
        case Init__system__ACP__2
        solve( !Const__( 'rab__priv_key_alice', priv_key_alice__44 ) ▶₄ #i )
          case Const__priv_key_alice
          solve( !Const__( 'rab__nonce_a', na ) ▶₅ #i )
            case Const__nonce_a
            solve( !Const__( 'rab__nonce_a', nonce_a__47 ) ▶₆ #i )
              case Const__nonce_a
              solve( !Eq__( z, ~n ) ▶₇ #i )
                case Equality_gen
                solve( splitEqs(1) )
                  case split_case_1
                  solve( !KU( enc(<~n, z>, ~n.3) ) @ #vk )
                    case Alice__merged_____1_____9__131
                    solve( File__Alice( 'rab__rab', loc__0, ~n.1 ) ▶₁ #vr.1 )
                      case Alice__merged_____1_____9__131
                      by contradiction /* cyclic */
                    qed
                  next
                    case c_enc
                    by solve( !KU( ~n.3 ) @ #vk.2 )
                  qed
                next
                  case split_case_2
                  solve( !KU( enc(<~n, z>, ~n.3) ) @ #vk )
                    case Alice__merged_____1_____9__131
                    solve( File__Alice( 'rab__rab', loc__0, ~n.1 ) ▶₁ #vr.1 )
                      case Alice__merged_____1_____9__131
                      by contradiction /* cyclic */
                    qed
                  next
                    case c_enc
                    by solve( !KU( ~n.3 ) @ #vk.2 )
                  qed
                next
                  case split_case_3
                  solve( !KU( enc(<~n, z>, ~n.3) ) @ #vk )
                    case Alice__merged_____1_____9__131
                    solve( File__Alice( 'rab__rab', loc__0, ~n.1 ) ▶₁ #vr.1 )
                      case Alice__merged_____1_____9__131
                      by contradiction /* cyclic */
                    qed
                  next
                    case c_enc
                    by solve( !KU( ~n.3 ) @ #vk.2 )
                  qed
                qed
              qed
            qed
          qed
        qed
      qed
    next
      case Bob__merged_____3__1_0_____9__75
      solve( !ACP__( <'rab__Alice', 'rab__rab'>, 'rab__udp', 'rab__recv'
             ) ▶₃ #i )
        case Init__system__ACP__2
        solve( !Const__( 'rab__priv_key_alice', priv_key_alice__44 ) ▶₄ #i )
          case Const__priv_key_alice
          solve( !Const__( 'rab__nonce_a', na ) ▶₅ #i )
            case Const__nonce_a
            solve( !Const__( 'rab__nonce_a', nonce_a__47 ) ▶₆ #i )
              case Const__nonce_a
              solve( !Eq__( z, ~n ) ▶₇ #i )
                case Equality_gen
                solve( splitEqs(1) )
                  case split_case_1
                  solve( !KU( enc(<~n, z>, ~n.3) ) @ #vk )
                    case Alice__merged_____1_____9__131
                    solve( File__Alice( 'rab__rab', loc__0, ~n.1 ) ▶₁ #vr.1 )
                      case Alice__merged_____1_____9__131
                      by contradiction /* cyclic */
                    qed
                  next
                    case c_enc
                    by solve( !KU( ~n.3 ) @ #vk.3 )
                  qed
                next
                  case split_case_2
                  solve( !KU( enc(<~n, z>, ~n.3) ) @ #vk )
                    case Alice__merged_____1_____9__131
                    solve( !KU( enc(x, ~n.4) ) @ #vk.1 )
                      case Alice__merged_____15__0_1_____15__0_3__0_1__86
                      solve( File__Alice( 'rab__rab', loc__0, ~n.1 ) ▶₁ #vr.1 )
                        case Alice__merged_____1_____9__131
                        by contradiction /* cyclic */
                      qed
                    next
                      case c_enc
                      by solve( !KU( ~n.4 ) @ #vk.3 )
                    qed
                  next
                    case c_enc
                    by solve( !KU( ~n.3 ) @ #vk.3 )
                  qed
                next
                  case split_case_3
                  solve( !KU( enc(<~n, z>, ~n.3) ) @ #vk )
                    case Alice__merged_____1_____9__131
                    solve( !KU( enc(<z, x>, ~n.4) ) @ #vk.1 )
                      case c_enc
                      by solve( !KU( ~n.4 ) @ #vk.3 )
                    qed
                  next
                    case c_enc
                    by solve( !KU( ~n.3 ) @ #vk.3 )
                  qed
                qed
              qed
            qed
          qed
        qed
      qed
    qed
  next
    case Alice__merged_____9_____11__1_0__102_case_2
    solve( Store( 'rab__udp', n__0__40 ) ▶₁ #i )
      case Alice__merged_____15__0_1_____15__0_3__0_1__86
      solve( !ACP__( <'rab__Alice', 'rab__rab'>, 'rab__udp', 'rab__recv'
             ) ▶₃ #i )
        case Init__system__ACP__2
        solve( !Const__( 'rab__priv_key_alice', priv_key_alice__44 ) ▶₄ #i )
          case Const__priv_key_alice
          solve( !Const__( 'rab__nonce_a', na ) ▶₅ #i )
            case Const__nonce_a
            solve( !Const__( 'rab__nonce_a', nonce_a__47 ) ▶₆ #i )
              case Const__nonce_a
              solve( !Eq__( z, ~n ) ▶₇ #i )
                case Equality_gen
                solve( !KU( enc(<~n, z>, ~n.3) ) @ #vk )
                  case Alice__merged_____2__1_0_____9__122
                  by solve( !KU( ~n.1 ) @ #vk.1 )
                next
                  case c_enc
                  by solve( !KU( ~n.3 ) @ #vk.3 )
                qed
              qed
            qed
          qed
        qed
      qed
    next
      case Alice__merged_____2__1_0_____9__122
      solve( !ACP__( <'rab__Alice', 'rab__rab'>, 'rab__udp', 'rab__recv'
             ) ▶₃ #i )
        case Init__system__ACP__2
        solve( !Const__( 'rab__priv_key_alice', priv_key_alice__44 ) ▶₄ #i )
          case Const__priv_key_alice
          solve( !Const__( 'rab__nonce_a', na ) ▶₅ #i )
            case Const__nonce_a
            solve( !Const__( 'rab__nonce_a', nonce_a__47 ) ▶₆ #i )
              case Const__nonce_a
              solve( !Eq__( z, ~n ) ▶₇ #i )
                case Equality_gen
                solve( !KU( enc(<~n, z>, ~n.2) ) @ #vk )
                  case Alice__merged_____2__1_0_____9__122
                  by solve( !KU( ~n.1 ) @ #vk.1 )
                next
                  case c_enc
                  by solve( !KU( ~n.2 ) @ #vk.3 )
                qed
              qed
            qed
          qed
        qed
      qed
    next
      case Bob__merged_____3__0_0_____9__79
      solve( !ACP__( <'rab__Alice', 'rab__rab'>, 'rab__udp', 'rab__recv'
             ) ▶₃ #i )
        case Init__system__ACP__2
        solve( !Const__( 'rab__priv_key_alice', priv_key_alice__44 ) ▶₄ #i )
          case Const__priv_key_alice
          solve( !Const__( 'rab__nonce_a', na ) ▶₅ #i )
            case Const__nonce_a
            solve( !Const__( 'rab__nonce_a', nonce_a__47 ) ▶₆ #i )
              case Const__nonce_a
              solve( !Eq__( z, ~n ) ▶₇ #i )
                case Equality_gen
                solve( splitEqs(1) )
                  case split_case_1
                  solve( !KU( enc(<~n, z>, ~n.3) ) @ #vk )
                    case Alice__merged_____2__1_0_____9__122
                    by solve( !KU( ~n.1 ) @ #vk.1 )
                  next
                    case c_enc
                    by solve( !KU( ~n.3 ) @ #vk.3 )
                  qed
                next
                  case split_case_2
                  solve( !KU( enc(<~n, z>, ~n.3) ) @ #vk )
                    case Alice__merged_____2__1_0_____9__122
                    by solve( !KU( ~n.1 ) @ #vk.1 )
                  next
                    case c_enc
                    by solve( !KU( ~n.3 ) @ #vk.3 )
                  qed
                next
                  case split_case_3
                  solve( !KU( enc(<~n, z>, ~n.3) ) @ #vk )
                    case Alice__merged_____2__1_0_____9__122
                    by solve( !KU( ~n.1 ) @ #vk.1 )
                  next
                    case c_enc
                    by solve( !KU( ~n.3 ) @ #vk.3 )
                  qed
                qed
              qed
            qed
          qed
        qed
      qed
    next
      case Bob__merged_____3__1_0_____9__75
      solve( !ACP__( <'rab__Alice', 'rab__rab'>, 'rab__udp', 'rab__recv'
             ) ▶₃ #i )
        case Init__system__ACP__2
        solve( !Const__( 'rab__priv_key_alice', priv_key_alice__44 ) ▶₄ #i )
          case Const__priv_key_alice
          solve( !Const__( 'rab__nonce_a', na ) ▶₅ #i )
            case Const__nonce_a
            solve( !Const__( 'rab__nonce_a', nonce_a__47 ) ▶₆ #i )
              case Const__nonce_a
              solve( !Eq__( z, ~n ) ▶₇ #i )
                case Equality_gen
                solve( splitEqs(1) )
                  case split_case_1
                  solve( !KU( enc(<~n, z>, ~n.3) ) @ #vk )
                    case Alice__merged_____2__1_0_____9__122
                    by solve( !KU( ~n.1 ) @ #vk.1 )
                  next
                    case c_enc
                    by solve( !KU( ~n.3 ) @ #vk.4 )
                  qed
                next
                  case split_case_2
                  solve( !KU( enc(<~n, z>, ~n.3) ) @ #vk )
                    case Alice__merged_____2__1_0_____9__122
                    by solve( !KU( ~n.1 ) @ #vk.1 )
                  next
                    case c_enc
                    by solve( !KU( ~n.3 ) @ #vk.4 )
                  qed
                next
                  case split_case_3
                  solve( !KU( enc(<~n, z>, ~n.3) ) @ #vk )
                    case Alice__merged_____2__1_0_____9__122
                    by solve( !KU( ~n.1 ) @ #vk.1 )
                  next
                    case c_enc
                    by solve( !KU( ~n.3 ) @ #vk.4 )
                  qed
                qed
              qed
            qed
          qed
        qed
      qed
    qed
  qed
qed

lemma SecrecyCanBeEstablishedA:
  exists-trace
  "∃ nonce_a #time__0 #label_time__0.
    (!Const__( 'rab__nonce_a', nonce_a ) @ #label_time__0) ∧
    (SecretNonceAlice( nonce_a ) @ #time__0)"
/*
guarded formula characterizing all satisfying traces:
"∃ nonce_a #time__0 #label_time__0.
  (!Const__( 'rab__nonce_a', nonce_a ) @ #label_time__0) ∧
  (SecretNonceAlice( nonce_a ) @ #time__0)"
*/
simplify
solve( !Const__( 'rab__nonce_a', nonce_a ) @ #label_time__0 )
  case Const__nonce_a
  solve( SecretNonceAlice( ~n ) @ #time__0 )
    case Alice__merged_____11__0_0_____15__0_1__98
    solve( State__Alice( <'rab_____11__0_0', param, %v__>, return__var__35,
                         'rab__', <l__0__35, l__1__35, l__2__35, l__3__35, l__4__35>, 'rab__'
           ) ▶₀ #time__0 )
      case Alice__merged_____9_____11__0_0__101_case_1
      solve( Store( 'rab__udp', n__0__35 ) ▶₁ #time__0 )
        case Alice__merged_____15__0_1_____15__0_3__0_1__86
        solve( !ACP__( <'rab__Alice', 'rab__rab'>, 'rab__udp', 'rab__recv'
               ) ▶₂ #time__0 )
          case Init__system__ACP__2
          solve( !Const__( 'rab__priv_key_alice', priv_key_alice__44
                 ) ▶₃ #time__0 )
            case Const__priv_key_alice
            solve( !Const__( 'rab__nonce_a', ~n ) ▶₄ #time__0 )
              case Const__nonce_a
              solve( !Const__( 'rab__nonce_a', nonce_a__47 ) ▶₅ #time__0 )
                case Const__nonce_a
                by solve( !Eq__( fst(z), ~n ) ▶₆ #time__0 )
              qed
            qed
          qed
        qed
      next
        case Alice__merged_____1_____9__131
        solve( !ACP__( <'rab__Alice', 'rab__rab'>, 'rab__udp', 'rab__recv'
               ) ▶₂ #time__0 )
          case Init__system__ACP__2
          solve( !Const__( 'rab__priv_key_alice', priv_key_alice__44
                 ) ▶₃ #time__0 )
            case Const__priv_key_alice
            solve( !Const__( 'rab__nonce_a', ~n ) ▶₄ #time__0 )
              case Const__nonce_a
              solve( !Const__( 'rab__nonce_a', nonce_a__47 ) ▶₅ #time__0 )
                case Const__nonce_a
                solve( !Eq__( z, ~n ) ▶₆ #time__0 )
                  case Equality_gen
                  solve( File__Alice( 'rab__rab', loc__0, ~l__3__35 ) ▶₁ #vr.1 )
                    case Alice__merged_____1_____9__131
                    by contradiction /* cyclic */
                  qed
                qed
              qed
            qed
          qed
        qed
      next
        case Bob__merged_____3__0_0_____9__79
        solve( !ACP__( <'rab__Alice', 'rab__rab'>, 'rab__udp', 'rab__recv'
               ) ▶₂ #time__0 )
          case Init__system__ACP__2
          solve( !Const__( 'rab__priv_key_alice', priv_key_alice__44
                 ) ▶₃ #time__0 )
            case Const__priv_key_alice
            solve( !Const__( 'rab__nonce_a', ~n ) ▶₄ #time__0 )
              case Const__nonce_a
              solve( !Const__( 'rab__nonce_a', nonce_a__47 ) ▶₅ #time__0 )
                case Const__nonce_a
                by solve( !Eq__( fst(dec(enc(<~n, ~n.2>, pk(~n.3)), ~n.3)), ~n
                          ) ▶₆ #time__0 )
              qed
            qed
          qed
        qed
      next
        case Bob__merged_____3__1_0_____9__75
        solve( !ACP__( <'rab__Alice', 'rab__rab'>, 'rab__udp', 'rab__recv'
               ) ▶₂ #time__0 )
          case Init__system__ACP__2
          solve( !Const__( 'rab__priv_key_alice', priv_key_alice__44
                 ) ▶₃ #time__0 )
            case Const__priv_key_alice
            solve( !Const__( 'rab__nonce_a', ~n ) ▶₄ #time__0 )
              case Const__nonce_a
              solve( !Const__( 'rab__nonce_a', nonce_a__47 ) ▶₅ #time__0 )
                case Const__nonce_a
                by solve( !Eq__( fst(dec(enc(<~n, ~n.2>, pk(~n.3)), ~n.3)), ~n
                          ) ▶₆ #time__0 )
              qed
            qed
          qed
        qed
      qed
    next
      case Alice__merged_____9_____11__0_0__101_case_2
      solve( Store( 'rab__udp', n__0__35 ) ▶₁ #time__0 )
        case Alice__merged_____15__0_1_____15__0_3__0_1__86
        solve( !ACP__( <'rab__Alice', 'rab__rab'>, 'rab__udp', 'rab__recv'
               ) ▶₂ #time__0 )
          case Init__system__ACP__2
          solve( !Const__( 'rab__priv_key_alice', priv_key_alice__44
                 ) ▶₃ #time__0 )
            case Const__priv_key_alice
            solve( !Const__( 'rab__nonce_a', ~n ) ▶₄ #time__0 )
              case Const__nonce_a
              solve( !Const__( 'rab__nonce_a', nonce_a__47 ) ▶₅ #time__0 )
                case Const__nonce_a
                by solve( !Eq__( fst(z), ~n ) ▶₆ #time__0 )
              qed
            qed
          qed
        qed
      next
        case Alice__merged_____2__1_0_____9__122
        solve( !ACP__( <'rab__Alice', 'rab__rab'>, 'rab__udp', 'rab__recv'
               ) ▶₂ #time__0 )
          case Init__system__ACP__2
          solve( !Const__( 'rab__priv_key_alice', priv_key_alice__44
                 ) ▶₃ #time__0 )
            case Const__priv_key_alice
            solve( !Const__( 'rab__nonce_a', ~n ) ▶₄ #time__0 )
              case Const__nonce_a
              solve( !Const__( 'rab__nonce_a', nonce_a__47 ) ▶₅ #time__0 )
                case Const__nonce_a
                solve( !Eq__( z, ~n ) ▶₆ #time__0 )
                  case Equality_gen
                  by solve( !KU( ~l__3__35 ) @ #vk )
                qed
              qed
            qed
          qed
        qed
      next
        case Bob__merged_____3__0_0_____9__79
        solve( !ACP__( <'rab__Alice', 'rab__rab'>, 'rab__udp', 'rab__recv'
               ) ▶₂ #time__0 )
          case Init__system__ACP__2
          solve( !Const__( 'rab__priv_key_alice', priv_key_alice__44
                 ) ▶₃ #time__0 )
            case Const__priv_key_alice
            solve( !Const__( 'rab__nonce_a', ~n ) ▶₄ #time__0 )
              case Const__nonce_a
              solve( !Const__( 'rab__nonce_a', nonce_a__47 ) ▶₅ #time__0 )
                case Const__nonce_a
                by solve( !Eq__( fst(dec(enc(<~n, ~n.2>, pk(~n.3)), ~n.3)), ~n
                          ) ▶₆ #time__0 )
              qed
            qed
          qed
        qed
      next
        case Bob__merged_____3__1_0_____9__75
        solve( !ACP__( <'rab__Alice', 'rab__rab'>, 'rab__udp', 'rab__recv'
               ) ▶₂ #time__0 )
          case Init__system__ACP__2
          solve( !Const__( 'rab__priv_key_alice', priv_key_alice__44
                 ) ▶₃ #time__0 )
            case Const__priv_key_alice
            solve( !Const__( 'rab__nonce_a', ~n ) ▶₄ #time__0 )
              case Const__nonce_a
              solve( !Const__( 'rab__nonce_a', nonce_a__47 ) ▶₅ #time__0 )
                case Const__nonce_a
                by solve( !Eq__( fst(dec(enc(<~n, ~n.2>, pk(~n.3)), ~n.3)), ~n
                          ) ▶₆ #time__0 )
              qed
            qed
          qed
        qed
      qed
    qed
  next
    case Alice__merged_____11__1_0_____15__0_1__94
    solve( State__Alice( <'rab_____11__1_0', param, %v__>, return__var__40,
                         'rab__', <l__0__40, l__1__40, l__2__40, l__3__40, l__4__40>, 'rab__'
           ) ▶₀ #time__0 )
      case Alice__merged_____9_____11__1_0__102_case_1
      solve( Store( 'rab__udp', n__0__40 ) ▶₁ #time__0 )
        case Alice__merged_____15__0_1_____15__0_3__0_1__86
        solve( !ACP__( <'rab__Alice', 'rab__rab'>, 'rab__udp', 'rab__recv'
               ) ▶₃ #time__0 )
          case Init__system__ACP__2
          solve( !Const__( 'rab__priv_key_alice', priv_key_alice__44
                 ) ▶₄ #time__0 )
            case Const__priv_key_alice
            solve( !Const__( 'rab__nonce_a', ~n ) ▶₅ #time__0 )
              case Const__nonce_a
              solve( !Const__( 'rab__nonce_a', nonce_a__47 ) ▶₆ #time__0 )
                case Const__nonce_a
                solve( !Eq__( z, ~n ) ▶₇ #time__0 )
                  case Equality_gen
                  solve( !KU( enc(<~n, z>, ~n.3) ) @ #vk )
                    case Alice__merged_____1_____9__131
                    solve( File__Alice( 'rab__rab', loc__0, ~n.1 ) ▶₁ #vr.1 )
                      case Alice__merged_____1_____9__131
                      by contradiction /* cyclic */
                    qed
                  next
                    case c_enc
                    by solve( !KU( ~n.3 ) @ #vk.2 )
                  qed
                qed
              qed
            qed
          qed
        qed
      next
        case Alice__merged_____1_____9__131
        solve( !ACP__( <'rab__Alice', 'rab__rab'>, 'rab__udp', 'rab__recv'
               ) ▶₃ #time__0 )
          case Init__system__ACP__2
          solve( !Const__( 'rab__priv_key_alice', priv_key_alice__44
                 ) ▶₄ #time__0 )
            case Const__priv_key_alice
            solve( !Const__( 'rab__nonce_a', ~n ) ▶₅ #time__0 )
              case Const__nonce_a
              solve( !Const__( 'rab__nonce_a', nonce_a__47 ) ▶₆ #time__0 )
                case Const__nonce_a
                solve( !Eq__( z, ~n ) ▶₇ #time__0 )
                  case Equality_gen
                  solve( !KU( enc(<~n, z>, ~n.2) ) @ #vk )
                    case Alice__merged_____1_____9__131
                    solve( File__Alice( 'rab__rab', loc__0, ~n.1 ) ▶₁ #vr.1 )
                      case Alice__merged_____1_____9__131
                      by contradiction /* cyclic */
                    qed
                  next
                    case c_enc
                    by solve( !KU( ~n.2 ) @ #vk.2 )
                  qed
                qed
              qed
            qed
          qed
        qed
      next
        case Bob__merged_____3__0_0_____9__79
        solve( !ACP__( <'rab__Alice', 'rab__rab'>, 'rab__udp', 'rab__recv'
               ) ▶₃ #time__0 )
          case Init__system__ACP__2
          solve( !Const__( 'rab__priv_key_alice', priv_key_alice__44
                 ) ▶₄ #time__0 )
            case Const__priv_key_alice
            solve( !Const__( 'rab__nonce_a', ~n ) ▶₅ #time__0 )
              case Const__nonce_a
              solve( !Const__( 'rab__nonce_a', nonce_a__47 ) ▶₆ #time__0 )
                case Const__nonce_a
                solve( !Eq__( z, ~n ) ▶₇ #time__0 )
                  case Equality_gen
                  solve( splitEqs(2) )
                    case split_case_1
                    solve( !KU( enc(<~n, z>, ~n.3) ) @ #vk )
                      case Alice__merged_____1_____9__131
                      solve( File__Alice( 'rab__rab', loc__0, ~n.1 ) ▶₁ #vr.1 )
                        case Alice__merged_____1_____9__131
                        by contradiction /* cyclic */
                      qed
                    next
                      case c_enc
                      by solve( !KU( ~n.3 ) @ #vk.2 )
                    qed
                  next
                    case split_case_2
                    solve( !KU( enc(<~n, z>, ~n.3) ) @ #vk )
                      case Alice__merged_____1_____9__131
                      solve( File__Alice( 'rab__rab', loc__0, ~n.1 ) ▶₁ #vr.1 )
                        case Alice__merged_____1_____9__131
                        by contradiction /* cyclic */
                      qed
                    next
                      case c_enc
                      by solve( !KU( ~n.3 ) @ #vk.2 )
                    qed
                  next
                    case split_case_3
                    solve( !KU( enc(<~n, z>, ~n.3) ) @ #vk )
                      case Alice__merged_____1_____9__131
                      solve( File__Alice( 'rab__rab', loc__0, ~n.1 ) ▶₁ #vr.1 )
                        case Alice__merged_____1_____9__131
                        by contradiction /* cyclic */
                      qed
                    next
                      case c_enc
                      by solve( !KU( ~n.3 ) @ #vk.2 )
                    qed
                  qed
                qed
              qed
            qed
          qed
        qed
      next
        case Bob__merged_____3__1_0_____9__75
        solve( !ACP__( <'rab__Alice', 'rab__rab'>, 'rab__udp', 'rab__recv'
               ) ▶₃ #time__0 )
          case Init__system__ACP__2
          solve( !Const__( 'rab__priv_key_alice', priv_key_alice__44
                 ) ▶₄ #time__0 )
            case Const__priv_key_alice
            solve( !Const__( 'rab__nonce_a', ~n ) ▶₅ #time__0 )
              case Const__nonce_a
              solve( !Const__( 'rab__nonce_a', nonce_a__47 ) ▶₆ #time__0 )
                case Const__nonce_a
                solve( !Eq__( z, ~n ) ▶₇ #time__0 )
                  case Equality_gen
                  solve( splitEqs(2) )
                    case split_case_1
                    solve( !KU( enc(<~n, z>, ~n.3) ) @ #vk )
                      case Alice__merged_____1_____9__131
                      solve( File__Alice( 'rab__rab', loc__0, ~n.1 ) ▶₁ #vr.1 )
                        case Alice__merged_____1_____9__131
                        by contradiction /* cyclic */
                      qed
                    next
                      case c_enc
                      by solve( !KU( ~n.3 ) @ #vk.3 )
                    qed
                  next
                    case split_case_2
                    solve( !KU( enc(<~n, z>, ~n.3) ) @ #vk )
                      case Alice__merged_____1_____9__131
                      solve( !KU( enc(x, ~n.4) ) @ #vk.1 )
                        case Alice__merged_____15__0_1_____15__0_3__0_1__86
                        solve( File__Alice( 'rab__rab', loc__0, ~n.1 ) ▶₁ #vr.1 )
                          case Alice__merged_____1_____9__131
                          by contradiction /* cyclic */
                        qed
                      next
                        case c_enc
                        by solve( !KU( ~n.4 ) @ #vk.3 )
                      qed
                    next
                      case c_enc
                      by solve( !KU( ~n.3 ) @ #vk.3 )
                    qed
                  next
                    case split_case_3
                    solve( !KU( enc(<~n, z>, ~n.3) ) @ #vk )
                      case Alice__merged_____1_____9__131
                      solve( !KU( enc(<z, x>, ~n.4) ) @ #vk.1 )
                        case c_enc
                        by solve( !KU( ~n.4 ) @ #vk.3 )
                      qed
                    next
                      case c_enc
                      by solve( !KU( ~n.3 ) @ #vk.3 )
                    qed
                  qed
                qed
              qed
            qed
          qed
        qed
      qed
    next
      case Alice__merged_____9_____11__1_0__102_case_2
      solve( Store( 'rab__udp', n__0__40 ) ▶₁ #time__0 )
        case Alice__merged_____15__0_1_____15__0_3__0_1__86
        solve( !ACP__( <'rab__Alice', 'rab__rab'>, 'rab__udp', 'rab__recv'
               ) ▶₃ #time__0 )
          case Init__system__ACP__2
          solve( !Const__( 'rab__priv_key_alice', priv_key_alice__44
                 ) ▶₄ #time__0 )
            case Const__priv_key_alice
            solve( !Const__( 'rab__nonce_a', ~n ) ▶₅ #time__0 )
              case Const__nonce_a
              solve( !Const__( 'rab__nonce_a', nonce_a__47 ) ▶₆ #time__0 )
                case Const__nonce_a
                solve( !Eq__( z, ~n ) ▶₇ #time__0 )
                  case Equality_gen
                  solve( !KU( enc(<~n, z>, ~n.3) ) @ #vk )
                    case Alice__merged_____2__1_0_____9__122
                    by solve( !KU( ~n.1 ) @ #vk.1 )
                  next
                    case c_enc
                    by solve( !KU( ~n.3 ) @ #vk.3 )
                  qed
                qed
              qed
            qed
          qed
        qed
      next
        case Alice__merged_____2__1_0_____9__122
        solve( !ACP__( <'rab__Alice', 'rab__rab'>, 'rab__udp', 'rab__recv'
               ) ▶₃ #time__0 )
          case Init__system__ACP__2
          solve( !Const__( 'rab__priv_key_alice', priv_key_alice__44
                 ) ▶₄ #time__0 )
            case Const__priv_key_alice
            solve( !Const__( 'rab__nonce_a', ~n ) ▶₅ #time__0 )
              case Const__nonce_a
              solve( !Const__( 'rab__nonce_a', nonce_a__47 ) ▶₆ #time__0 )
                case Const__nonce_a
                solve( !Eq__( z, ~n ) ▶₇ #time__0 )
                  case Equality_gen
                  solve( !KU( enc(<~n, z>, ~n.2) ) @ #vk )
                    case Alice__merged_____2__1_0_____9__122
                    by solve( !KU( ~n.1 ) @ #vk.1 )
                  next
                    case c_enc
                    by solve( !KU( ~n.2 ) @ #vk.3 )
                  qed
                qed
              qed
            qed
          qed
        qed
      next
        case Bob__merged_____3__0_0_____9__79
        solve( !ACP__( <'rab__Alice', 'rab__rab'>, 'rab__udp', 'rab__recv'
               ) ▶₃ #time__0 )
          case Init__system__ACP__2
          solve( !Const__( 'rab__priv_key_alice', priv_key_alice__44
                 ) ▶₄ #time__0 )
            case Const__priv_key_alice
            solve( !Const__( 'rab__nonce_a', ~n ) ▶₅ #time__0 )
              case Const__nonce_a
              solve( !Const__( 'rab__nonce_a', nonce_a__47 ) ▶₆ #time__0 )
                case Const__nonce_a
                solve( !Eq__( z, ~n ) ▶₇ #time__0 )
                  case Equality_gen
                  solve( splitEqs(2) )
                    case split_case_1
                    solve( !KU( enc(<~n, z>, ~n.3) ) @ #vk )
                      case Alice__merged_____2__1_0_____9__122
                      by solve( !KU( ~n.1 ) @ #vk.1 )
                    next
                      case c_enc
                      by solve( !KU( ~n.3 ) @ #vk.3 )
                    qed
                  next
                    case split_case_2
                    solve( !KU( enc(<~n, z>, ~n.3) ) @ #vk )
                      case Alice__merged_____2__1_0_____9__122
                      by solve( !KU( ~n.1 ) @ #vk.1 )
                    next
                      case c_enc
                      by solve( !KU( ~n.3 ) @ #vk.3 )
                    qed
                  next
                    case split_case_3
                    solve( !KU( enc(<~n, z>, ~n.3) ) @ #vk )
                      case Alice__merged_____2__1_0_____9__122
                      by solve( !KU( ~n.1 ) @ #vk.1 )
                    next
                      case c_enc
                      by solve( !KU( ~n.3 ) @ #vk.3 )
                    qed
                  qed
                qed
              qed
            qed
          qed
        qed
      next
        case Bob__merged_____3__1_0_____9__75
        solve( !ACP__( <'rab__Alice', 'rab__rab'>, 'rab__udp', 'rab__recv'
               ) ▶₃ #time__0 )
          case Init__system__ACP__2
          solve( !Const__( 'rab__priv_key_alice', priv_key_alice__44
                 ) ▶₄ #time__0 )
            case Const__priv_key_alice
            solve( !Const__( 'rab__nonce_a', ~n ) ▶₅ #time__0 )
              case Const__nonce_a
              solve( !Const__( 'rab__nonce_a', nonce_a__47 ) ▶₆ #time__0 )
                case Const__nonce_a
                solve( !Eq__( z, ~n ) ▶₇ #time__0 )
                  case Equality_gen
                  solve( splitEqs(2) )
                    case split_case_1
                    solve( !KU( enc(<~n, z>, ~n.3) ) @ #vk )
                      case Alice__merged_____2__1_0_____9__122
                      by solve( !KU( ~n.1 ) @ #vk.1 )
                    next
                      case c_enc
                      by solve( !KU( ~n.3 ) @ #vk.4 )
                    qed
                  next
                    case split_case_2
                    solve( !KU( enc(<~n, z>, ~n.3) ) @ #vk )
                      case Alice__merged_____2__1_0_____9__122
                      by solve( !KU( ~n.1 ) @ #vk.1 )
                    next
                      case c_enc
                      by solve( !KU( ~n.3 ) @ #vk.4 )
                    qed
                  next
                    case split_case_3
                    solve( !KU( enc(<~n, z>, ~n.3) ) @ #vk )
                      case Alice__merged_____2__1_0_____9__122
                      by solve( !KU( ~n.1 ) @ #vk.1 )
                    next
                      case c_enc
                      by solve( !KU( ~n.3 ) @ #vk.4 )
                    qed
                  qed
                qed
              qed
            qed
          qed
        qed
      qed
    qed
  qed
qed

lemma NonceBIsSent_tmrn:
  exists-trace "∃ nb #j. BobSendNonceBTag( nb ) @ #j"
/*
guarded formula characterizing all satisfying traces:
"∃ nb #j. (BobSendNonceBTag( nb ) @ #j)"
*/
simplify
solve( BobSendNonceBTag( nb ) @ #j )
  case Bob__merged_____9_____11__0_0__62
  solve( State__Bob( <'rab_____9', param, %v__>, return__var__22, 'rab__',
                     <l__0__22, l__1__22, l__2__22>, t__0__22
         ) ▶₀ #j )
    case Bob__merged_____3__0_0_____9__79
    solve( !Const__( 'rab__nonce_b', nb ) ▶₁ #j )
      case Const__nonce_b
      solve( splitEqs(1) )
        case split_case_3
        solve( Store( 'rab__udp', l__2__22 ) ▶₁ #vr )
          case Alice__merged_____1_____9__131
          solve( File__Alice( 'rab__rab', loc__0, n__0__20 ) ▶₁ #vr.9 )
            case Alice__init_filesys_____0_____1__0
            SOLVED // trace found
          qed
        qed
      qed
    qed
  qed
qed

lemma NonceBIsSent:
  exists-trace
  "∃ nonce_b #time__0 #label_time__0.
    (!Const__( 'rab__nonce_b', nonce_b ) @ #label_time__0) ∧
    (BobSendNonceBTag( nonce_b ) @ #time__0)"
/*
guarded formula characterizing all satisfying traces:
"∃ nonce_b #time__0 #label_time__0.
  (!Const__( 'rab__nonce_b', nonce_b ) @ #label_time__0) ∧
  (BobSendNonceBTag( nonce_b ) @ #time__0)"
*/
simplify
solve( !Const__( 'rab__nonce_b', nonce_b ) @ #label_time__0 )
  case Const__nonce_b
  solve( BobSendNonceBTag( ~n ) @ #time__0 )
    case Bob__merged_____9_____11__0_0__62
    solve( State__Bob( <'rab_____9', param, %v__>, return__var__22, 'rab__',
                       <l__0__22, l__1__22, l__2__22>, t__0__22
           ) ▶₀ #time__0 )
      case Bob__merged_____3__0_0_____9__79
      solve( !Const__( 'rab__nonce_b', ~n ) ▶₁ #time__0 )
        case Const__nonce_b
        solve( splitEqs(2) )
          case split_case_3
          solve( Store( 'rab__udp', l__2__22 ) ▶₁ #vr )
            case Alice__merged_____1_____9__131
            solve( File__Alice( 'rab__rab', loc__0, n__0__20 ) ▶₁ #vr.8 )
              case Alice__init_filesys_____0_____1__0
              SOLVED // trace found
            qed
          qed
        qed
      qed
    qed
  qed
qed

lemma NonceAIsSent_tmrn:
  exists-trace "∃ na #i. AliceSendNonceATag( na ) @ #i"
/*
guarded formula characterizing all satisfying traces:
"∃ na #i. (AliceSendNonceATag( na ) @ #i)"
*/
simplify
solve( AliceSendNonceATag( na ) @ #i )
  case Alice__merged_____9_____11__0_0__101
  solve( State__Alice( <'rab_____9', param, %v__>, return__var__32,
                       'rab__', <l__0__32, l__1__32, l__2__32>, 'rab__'
         ) ▶₀ #i )
    case Alice__merged_____1_____9__131
    solve( !Const__( 'rab__nonce_a', na ) ▶₁ #i )
      case Const__nonce_a
      solve( File__Alice( 'rab__rab', loc__0, l__1__32 ) ▶₁ #vr )
        case Alice__init_filesys_____0_____1__0
        SOLVED // trace found
      qed
    qed
  qed
qed

lemma NonceAIsSent:
  exists-trace
  "∃ nonce_a #time__0 #label_time__0.
    (!Const__( 'rab__nonce_a', nonce_a ) @ #label_time__0) ∧
    (AliceSendNonceATag( nonce_a ) @ #time__0)"
/*
guarded formula characterizing all satisfying traces:
"∃ nonce_a #time__0 #label_time__0.
  (!Const__( 'rab__nonce_a', nonce_a ) @ #label_time__0) ∧
  (AliceSendNonceATag( nonce_a ) @ #time__0)"
*/
simplify
solve( !Const__( 'rab__nonce_a', nonce_a ) @ #label_time__0 )
  case Const__nonce_a
  solve( AliceSendNonceATag( ~n ) @ #time__0 )
    case Alice__merged_____9_____11__0_0__101
    solve( State__Alice( <'rab_____9', param, %v__>, return__var__32,
                         'rab__', <l__0__32, l__1__32, l__2__32>, 'rab__'
           ) ▶₀ #time__0 )
      case Alice__merged_____1_____9__131
      solve( !Const__( 'rab__nonce_a', ~n ) ▶₁ #time__0 )
        case Const__nonce_a
        solve( File__Alice( 'rab__rab', loc__0, l__1__32 ) ▶₁ #vr )
          case Alice__init_filesys_____0_____1__0
          SOLVED // trace found
        qed
      qed
    qed
  qed
qed

lemma BobOpenReachable_tmrn:
  exists-trace "∃ #i. BobOpen( ) @ #i"
/*
guarded formula characterizing all satisfying traces:
"∃ #i. (BobOpen( ) @ #i)"
*/
simplify
solve( BobOpen( ) @ #i )
  case Bob__merged_____0_____3__0_0__85
  solve( State__Bob( <'rab_____0', param, %v__>, return__var__0, 'rab__',
                     'rab__', 'rab__'
         ) ▶₀ #i )
    case Init__system
    solve( !Const__( 'rab__priv_key_alice', priv_key_alice__0 ) ▶₁ #i )
      case Const__priv_key_alice
      SOLVED // trace found
    qed
  qed
qed

lemma BobOpenReachable:
  exists-trace "∃ #time__0. BobOpen( ) @ #time__0"
/*
guarded formula characterizing all satisfying traces:
"∃ #time__0. (BobOpen( ) @ #time__0)"
*/
simplify
solve( BobOpen( ) @ #time__0 )
  case Bob__merged_____0_____3__0_0__85
  solve( State__Bob( <'rab_____0', param, %v__>, return__var__0, 'rab__',
                     'rab__', 'rab__'
         ) ▶₀ #time__0 )
    case Init__system
    solve( !Const__( 'rab__priv_key_alice', priv_key_alice__0 ) ▶₁ #time__0 )
      case Const__priv_key_alice
      SOLVED // trace found
    qed
  qed
qed

lemma tautology:
  all-traces "∀ #j. (BobClose( ) @ #j) ⇒ (BobClose( ) @ #j)"
/*
guarded formula characterizing all counter-examples:
"∃ #j. (BobClose( ) @ #j) ∧ ¬(BobClose( ) @ #j)"
*/
simplify
by contradiction /* from formulas */



















/*
WARNING: the following wellformedness checks failed!

Unbound variables
=================

  rule `Equality_gen' has unbound variables: 
    x
  
  rule `NEquality_gen' has unbound variables: 
    x, y

Inexistant lemma actions
========================

  lemma `AlwaysStarts__' references action 
    fact "Loop__Back" (arity 2, Linear) 
  but no rule has such an action.
  
  lemma `AlwaysStarts__' references action 
    fact "Loop__Start" (arity 2, Linear) 
  but no rule has such an action.
  
  lemma `AlwaysStartsWhenEnds__' references action 
    fact "Loop__Finish" (arity 2, Linear) 
  but no rule has such an action.
  
  lemma `AlwaysStartsWhenEnds__' references action 
    fact "Loop__Start" (arity 2, Linear) 
  but no rule has such an action.

Derivation Checks
=================

  Derivation checks timed out.
  Use --derivcheck-timeout=INT to configure timeout.
  Set to 0 to deactivate for no timeout.
*/

/*
Generated from:
Tamarin version 1.10.0
Maude version 3.3
Git revision: UNKNOWN, branch: UNKNOWN
Compiled at: 2025-05-25 12:24:05.599972296 UTC
*/

end

==============================================================================
summary of summaries:

analyzed: tamarin_models/needham_schroeder_new_syntax_equals_sign.spthy

  processing time: 145.65s
  
  WARNING: 7 wellformedness check failed!
           The analysis results might be wrong!
  
  AlwaysStarts__ (all-traces): verified (6 steps)
  AlwaysStartsWhenEnds__ (all-traces): verified (6 steps)
  TransitionOnce__ (all-traces): verified (910 steps)
  NonceSecrecyB_tmrn (all-traces): verified (660 steps)
  NonceSecrecyA_tmrn (all-traces): verified (238 steps)
  NonceSecrecyB (all-traces): verified (660 steps)
  NonceSecrecyA (all-traces): verified (238 steps)
  SecrecyCanBeEstablishedB_tmrn (exists-trace): falsified - no trace found (610 steps)
  SecrecyCanBeEstablishedB (exists-trace): falsified - no trace found (611 steps)
  SecrecyCanBeEstablishedA_tmrn (exists-trace): falsified - no trace found (153 steps)
  SecrecyCanBeEstablishedA (exists-trace): falsified - no trace found (154 steps)
  NonceBIsSent_tmrn (exists-trace): verified (8 steps)
  NonceBIsSent (exists-trace): verified (9 steps)
  NonceAIsSent_tmrn (exists-trace): verified (6 steps)
  NonceAIsSent (exists-trace): verified (7 steps)
  BobOpenReachable_tmrn (exists-trace): verified (5 steps)
  BobOpenReachable (exists-trace): verified (5 steps)
  tautology (all-traces): verified (2 steps)

==============================================================================
