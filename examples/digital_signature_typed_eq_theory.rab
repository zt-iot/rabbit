
(* security primitives *)
function vk : key[Sig]@('s, 'i) -> key[Ver]@(Public, 'i)
function sign : 'a -> key[Sig, 'a]@('s, 'i) -> signature@(S('a), 'i)                     (* signature@(S('a), i) will match any "signature security type" *)
function fst : 'a * 'b -> 'a
function snd : 'a * 'b -> 'b
equation fst ((x, y)) = x
equation snd ((x, y)) = y
function true : bool

(* the signature and the term being verified have to have the same security level, which is why we need this typing annotation *)
function verify : signature@('s1, 'i1) -> 'a@('s1, 'i1) -> key[Ver, 'a]@('s2, 'i2) -> bool
equation verify (sign(d, k), d, vk(k)) = true