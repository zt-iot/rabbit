theory rabbit

begin
builtins: natural-numbers


// The signature of our model:






// Initializing the gloval constants and access policy rules:




// Constants:



// Add model inits: Server


rule Init_system[role="system"]
  : [  ]
    --[ Init('system') ]->
    [ !ACP_GEN_('system_', 'str:'),
      State('Server', 'idx_0', 'str:', %1, '()') ]

// Model:  Server


rule Server_let_intro_scall__idx_1_idx_9_41[role="Server"]
  : [ State('Server', 'idx_1', param, %v_, rho_1),
      Fr(n_0_4),
      !ACP_(<'Server', param>, '_secret_pub', 'fopen'),
      !ACP_(<'Server', param>, '_secret_pub', 'fopen'),
      File_Server(param, loc_0, n_0_3) ]
    --[ Transition_(<'Server', param>, 'idx_1', %v_),
        Valid(),
        Eq_(n_0_12, n_0_17),
        Eq_(n_0_3, n_0_12) ]->
    [ State('Server', 'idx_9', param, %v_, '()'),
      File_Server(param, loc_0, n_0_3) ]

rule Server_init_filesys_idx_0_idx_1_0[role="Server"]
  : [ State('Server', 'idx_0', param, %v_, rho_0) ]
    --[ Transition_(<'Server', param>, 'idx_0', %v_) ]->
    [ State('Server', 'idx_1', param, %v_, '()'),
      File_Server(param, '_secret_pub', 'hello'),
      !ACP_(<'Server', param>, '_secret_pub', 'fopen') ]

restriction Init_ : " All x #i #j . Init(x) @ #i & Init(x) @ #j ==> #i = #j "
restriction Equality_rule: "All x y #i. Eq_(x,y) @ #i ==> x = y"
restriction NEquality_rule: "All x #i. NEq_(x,x) @ #i ==> F"

lemma AlwaysStarts_[reuse,use_induction]:
      "All x p #i. Loop_Back(x, p) @i ==> Ex #j. Loop_Start(x, p) @j & j < i"

lemma AlwaysStartsWhenEnds_[reuse,use_induction]:
      "All x p #i. Loop_Finish(x, p) @i ==> Ex #j. Loop_Start(x, p) @j & j < i"

lemma TransitionOnce_[reuse,use_induction]:
      "All x p %i #j #k . Transition_(x, p, %i) @ #j &
        Transition_(x, p, %i) @ #k ==> #j = #k"


lemma Reachable : exists-trace "Ex  #time_0 . Valid()@#time_0 "
end

