theory rabbit

begin
builtins: natural-numbers


// The signature of our model:






// Initializing the gloval constants and access policy rules:




// Constants:



// Add model inits: Server


rule Init_system[role="system"]
  : [  ]
    --[ Init_('rab_system') ]->
    [ !ACP_GEN_('rab_system_', 'rab_rab_str'), State_Server(<'rab___0', 'rab_rab_str', %1>, 'rab_unit', 'rab_empty', 'rab_empty', 'rab_empty') ] 

// Model:  Server


rule Server_let_intro_scall____1___9_41[role="Server"]
  : [ State_Server(<'rab___1', param, %v_>, return_var_1, 'rab_empty', 'rab_empty', 'rab_empty'), Fr(n_0_4), !ACP_(<'rab_Server', param>, 'rab__secret_pub', 'rab_fopen'), !ACP_(<'rab_Server', param>, 'rab__secret_pub', 'rab_fopen'), File_Server(param, loc_0, n_0_3) ]
    --[ Transition_(<'rab_Server', param>, 'rab___1', %v_), Valid(), Eq_(n_0_12, n_0_17), Eq_(n_0_3, n_0_12) ]->
    [ State_Server(<'rab___9', param, %v_>, 'rab_unit', 'rab_empty', 'rab_empty', 'rab_empty'), File_Server(param, loc_0, n_0_3) ] 

rule Server_init_filesys___0___1_0[role="Server"]
  : [ State_Server(<'rab___0', param, %v_>, return_var_0, 'rab_empty', 'rab_empty', 'rab_empty') ]
    --[ Transition_(<'rab_Server', param>, 'rab___0', %v_) ]->
    [ State_Server(<'rab___1', param, %v_>, 'rab_unit', 'rab_empty', 'rab_empty', 'rab_empty'), File_Server(param, 'rab__secret_pub', 'rab_hello'), !ACP_(<'rab_Server', param>, 'rab__secret_pub', 'rab_fopen') ] 

restriction Init_ : " All x #i #j . Init_(x) @ #i & Init_(x) @ #j ==> #i = #j "
restriction Equality_rule: "All x y #i. Eq_(x,y) @ #i ==> x = y"
restriction NEquality_rule: "All x #i. NEq_(x,x) @ #i ==> F"

lemma AlwaysStarts_[reuse,use_induction]:
      "All x p #i. Loop_Back(x, p) @i ==> Ex #j. Loop_Start(x, p) @j & j < i"

lemma AlwaysStartsWhenEnds_[reuse,use_induction]:
      "All x p #i. Loop_Finish(x, p) @i ==> Ex #j. Loop_Start(x, p) @j & j < i"

lemma TransitionOnce_[reuse,use_induction]:
      "All x p %i #j #k . Transition_(x, p, %i) @#j &
        Transition_(x, p, %i) @ #k ==> #j = #k"


lemma Reachable : exists-trace "Ex  #time_0 . Valid()@#time_0 "
end

