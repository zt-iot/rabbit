theory rabbit

begin
builtins: natural-numbers


// The signature of our model:






// Initializing the gloval constants and access policy rules:




// Constants:



// Add model inits: Alice


rule Init__system[role="system"] : []--[Init__('rab__system')]->[!ACP__GEN__('rab__system__', 'rab__rab_str'), State__Alice(<'rab_____0', 'rab__rab_str', %1>, 'rab__', 'rab__', 'rab__', 'rab__')] 


// Access control of Alice:chan



// Fact: !ACP__(<'rab__Alice', 'rab__rab_str'>, 'rab__chan', 'rab__send_one')


rule Init__system__ACP__0[role="system"] : [!ACP__GEN__('rab__system__', 'rab__rab_str')]--[Init__('rab__system__ACP__0')]->[!ACP__(<'rab__Alice', 'rab__rab_str'>, 'rab__chan', 'rab__send_one')] 

// Model:  Alice


rule Alice__scall_intro_put_____0_____0__0_1__5[role="Alice"] : [State__Alice(<'rab_____0', param, %v__>, return__var__0, 'rab__', 'rab__', 'rab__'), !ACP__(<'rab__Alice', param>, 'rab__chan', 'rab__send_one')]--[Transition__(<'rab__Alice', param>, 'rab_____0', %v__)]->[State__Alice(<'rab_____0__0_1', param, %v__>, 'rab__', 'rab__', 'rab__chan', 'rab__'), Send('rab__chan', '1')] 

rule Alice__scall_out_event_____0__0_1_____2__4[role="Alice"] : [State__Alice(<'rab_____0__0_1', param, %v__>, return__var__2, 'rab__', l__0__2, 'rab__')]--[Transition__(<'rab__Alice', param>, 'rab_____0__0_1', %v__), Valid()]->[State__Alice(<'rab_____2', param, %v__>, 'rab__', 'rab__', 'rab__', 'rab__')] 

restriction Init__ : " All x #i #j . Init__(x) @ #i & Init__(x) @ #j ==> #i = #j "
restriction Equality_rule: "All x y #i. Eq__(x,y) @ #i ==> x = y"
restriction NEquality_rule: "All x #i. NEq__(x,x) @ #i ==> F"
lemma AlwaysStarts__[reuse,use_induction]:

      "All x p #i. Loop__Back(x, p) @i ==> Ex #j. Loop__Start(x, p) @j & j < i"
lemma AlwaysStartsWhenEnds__[reuse,use_induction]:

      "All x p #i. Loop__Finish(x, p) @i ==> Ex #j. Loop__Start(x, p) @j & j < i"
lemma TransitionOnce__[reuse,use_induction]:

      "All x p %i #j #k . Transition__(x, p, %i) @#j &
        Transition__(x, p, %i) @ #k ==> #j = #k"

lemma Reachable : exists-trace "Ex  #time__0 . Valid()@#time__0 "
end

