theory rabbit

begin
builtins: natural-numbers


// The signature of our model:






// Initializing the gloval constants and access policy rules:




// Constants:



// Add model inits: Alice


rule Init_system[role="system"]
  : [  ]
    --[ Init('system') ]->
    [ !ACP_GEN_('system_', 'str:'),
      State('Alice', 'idx_0', 'str:', %1, '()') ]


// Access control of Alice:chan



// Fact: !ACP_(<'Alice', 'str:'>, 'chan', 'send_one')


rule Init_system_ACP_0[role="system"]
  : [ !ACP_GEN_('system_', 'str:') ]
    --[ Init('system_ACP_0') ]->
    [ !ACP_(<'Alice', 'str:'>, 'chan', 'send_one') ]

// Model:  Alice


rule Alice_scall_intro_put_idx_0_idx_0__0_1_5[role="Alice"]
  : [ State('Alice', 'idx_0', param, %v_, rho_0),
      !ACP_(<'Alice', param>, 'chan', 'send_one') ]
    --[ Transition_(<'Alice', param>, 'idx_0', %v_) ]->
    [ State('Alice', 'idx_0__0_1', param, %v_, <'()', 'chan'>),
      Send('chan', '1') ]

rule Alice_scall_out_event_idx_0__0_1_idx_2_4[role="Alice"]
  : [ State('Alice', 'idx_0__0_1', param, %v_, <rho_2, l_0_2>) ]
    --[ Transition_(<'Alice', param>, 'idx_0__0_1', %v_),
        Valid() ]->
    [ State('Alice', 'idx_2', param, %v_, '()') ]

restriction Init_ : " All x #i #j . Init(x) @ #i & Init(x) @ #j ==> #i = #j "
restriction Equality_rule: "All x y #i. Eq_(x,y) @ #i ==> x = y"
restriction NEquality_rule: "All x #i. NEq_(x,x) @ #i ==> F"

lemma AlwaysStarts_[reuse,use_induction]:
      "All x p #i. Loop_Back(x, p) @i ==> Ex #j. Loop_Start(x, p) @j & j < i"

lemma AlwaysStartsWhenEnds_[reuse,use_induction]:
      "All x p #i. Loop_Finish(x, p) @i ==> Ex #j. Loop_Start(x, p) @j & j < i"

lemma TransitionOnce_[reuse,use_induction]:
      "All x p %i #j #k . Transition_(x, p, %i) @ #j &
        Transition_(x, p, %i) @ #k ==> #j = #k"


lemma Reachable : exists-trace "Ex  #time_0 . Valid()@#time_0 "
end

