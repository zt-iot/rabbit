const fresh c

(*
rule Const_c
   : [Fr(c)]
   --[Init_('rab_Const_c'),
      Init_(<'rab_Const_c', c>), <----------------- not required!
      !Const_('rab_c', c)]
   ->[!Const_('rab_c', c)] 
*)

const c2 = (c,c)

(*
rule Const_c2
   : [!Const_('rab_c', c),
      !Const_('rab_c', c)]
   --[!Const_('rab_c2', <c, c>)]
   ->[!Const_('rab_c2', <c, c>)] 
*)

const fresh cp<>

(*
rule Const_cp
   : [Fr(cp)]
   --[Init_(<'rab_cp', param>),
      !Const_(<'rab_cp', param>, cp)]
   ->[!Const_(<'rab_cp', param>, cp)] 
*)

const cp2<p> = (cp<p>, cp<(p,p)>)

(*
rule Const_cp2
   : [!Const_(<'rab_cp', param>, cp_0),
      !Const_(<'rab_cp', <param, param>>, cp_1)]
   --[Init_(<'rab_cp2', param>),
      !Const_(<'rab_cp2', param>, <cp_0, cp_1>)]
   ->[!Const_(<'rab_cp2', param>, <cp_0, cp_1>)] 
*)

type proc_t 	  : process

process proc<p>() : proc_t
{
  main 
  {
    event [::Valid()];
    (c, c2, cp<p>, cp2<(p,p)>)
  }
}


system 
  !p.proc<p>()
requires  
[
  lemma Reachable : (* verified *)
    reachable ::Valid()
]
