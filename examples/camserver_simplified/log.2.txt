maude tool: 'maude'
 checking version: 2.7.1. OK.
 checking installation: OK.
[Theory rabbit] Theory loaded
[Theory rabbit] Theory translated
[Theory rabbit] Derivation checks started
[Theory rabbit] Derivation checks ended
[Theory rabbit] Theory closed
[Saturating Sources] Step 1 (Max 5)
[Saturating Sources] Done
theory rabbit begin

// Function signature and definition of the equational theory E

builtins: natural-numbers
functions: fst/1, pair/2, pk/1, sign/2, snd/1, true/0, verify/3
equations:
    fst(<x__2, y__3>) = x__2,
    fst(<x.1, x.2>) = x.1,
    snd(<x__4, y__5>) = y__5,
    snd(<x.1, x.2>) = x.2,
    verify(sign(d__6, k__7), d__6, pk(k__7)) = true







rule (modulo E) Const_priv_k:
   [ Fr( priv_k ) ]
  --[ !Const( 'priv_k', priv_k ), Init( <'Const', 'priv_k'> ) ]->
   [ !Const( 'priv_k', priv_k ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) Const_pub_k:
   [ !Const( 'priv_k', priv_k ) ]
  --[ !Const( 'pub_k', pk(priv_k) ), Init( <'Const', 'pub_k'> ) ]->
   [ !Const( 'pub_k', pk(priv_k) ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) Const_sym_k:
   [ Fr( sym_k ) ]
  --[ !Const( 'sym_k', sym_k ), Init( <'Const', 'sym_k'> ) ]->
   [ !Const( 'sym_k', sym_k ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) Const_init_data:
   [ Fr( init_data ) ]
  --[ !Const( 'init_data', init_data ), Init( <'Const', 'init_data'> ) ]->
   [ !Const( 'init_data', init_data ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) Init_PG_client__45[role=PG_client__45]:
   [ ]
  --[ Init( <'Proc_group', 'PG_client__45'> ) ]->
   [ !Inited_proc_group( 'PG_client__45' ), State_client__44_0_0( %1, '()' )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) Init_PG_server__47[role=PG_server__47]:
   [ ]
  --[ Init( <'Proc_group', 'PG_server__47'> ) ]->
   [ !Inited_proc_group( 'PG_server__47' ), State_server__46_0_0( %1, '()' )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) Init_PG_client_ta__49[role=PG_client_ta__49]:
   [ ]
  --[ Init( <'Proc_group', 'PG_client_ta__49'> ) ]->
   [
   !Inited_proc_group( 'PG_client_ta__49' ),
   State_client_ta__48_0_0( %1, '()' )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) Access_client__44[role=client__44]:
   [ !Inited_proc_group( 'PG_client__45' ) ]
  --[ Init( <'Proc_access', 'client__44'> ) ]->
   [
   !ACP( 'client__44', 'chan:udp', 'send' ),
   !ACP( 'client__44', 'chan:rpc', 'connect_rpc' ),
   !ACP( 'client__44', 'chan:rpc', 'invoke_rpc' ),
   !ACP( 'client__44', 'chan:rpc', 'close_rpc' ),
   !ACP( 'client__44', 'chan:rpc', '.' )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) Access_server__46[role=server__46]:
   [ !Inited_proc_group( 'PG_server__47' ) ]
  --[ Init( <'Proc_access', 'server__46'> ) ]->
   [ !ACP( 'server__46', 'chan:udp', 'recv' ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) Access_client_ta__48[role=client_ta__48]:
   [ !Inited_proc_group( 'PG_client_ta__49' ) ]
  --[ Init( <'Proc_access', 'client_ta__48'> ) ]->
   [ !ACP( 'client_ta__48', 'chan:rpc', '.' ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) connect_rpc_app___236[role=client__44]:
   [
   !ACP( 'client__44', 'chan:rpc', 'connect_rpc' ), Fr( x__13 ),
   State_client__44_0_0( %v, rho__60 )
   ]
  --[ Transition( 'client__44', 'index:0.0', %v ) ]->
   [
   Conn( 'chan:rpc' ), State_client__44_0_2( %v, '()', x__13 ),
   Structure( 'client__44', 'chid', x__13, 'chan:rpc' )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) repeat_in__123[role=client__44]:
   [ State_client__44_0_2( %v, rho__122, conn__33 ) ]
  --[
  Loop_In( 'client__44', 'index:0.2' ),
  Transition( 'client__44', 'index:0.2', %v )
  ]->
   [ State_client__44_0_3( %v, '()', conn__33 ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) case_in_new_intr__243[role=client__44]:
   [
   Fr( image__34 ), State_client__44_0_3( %v, rho__120, conn__33 ),
   Structure( 'client__44', 'chid', conn__33, c__17 )
   ]
  --[ Transition( 'client__44', 'index:0.3', %v ) ]->
   [
   Out( image__34 ),
   State_client__44_0_3_0_3_0_1( %v, '()', c__17, conn__33,
                                 'str:sign_image', image__34, image__34, conn__33
   ),
   Structure( 'client__44', 'chid', conn__33, c__17 )
   ]

  // loop breaker: [2]
  /* has exactly the trivial AC variant */

rule (modulo E) put__77[role=client__44]:
   [
   !ACP( 'client__44', c__17, 'invoke_rpc' ),
   State_client__44_0_3_0_3_0_1( %v, rho__76, c__17, cid__14, f__15,
                                 arg1__16, image__34, conn__33
   )
   ]
  --[ Transition( 'client__44', 'index:0.3_0.3_0.1', %v ) ]->
   [
   Invoke( c__17, f__15, arg1__16 ),
   State_client__44_0_3_0_3_0_2( %v, '()', c__17, cid__14, f__15, arg1__16,
                                 image__34, conn__33
   )
   ]

  // loop breaker: [1]
  /* has exactly the trivial AC variant */

rule (modulo E) case_in_return_c__252[role=client__44]:
   [
   !ACP( 'client__44', c__17, 'invoke_rpc' ), Returned( c__17, v__18 ),
   State_client__44_0_3_0_3_0_2( %v, rho__82, c__17, cid__14, f__15,
                                 arg1__16, image__34, conn__33
   )
   ]
  --[ Transition( 'client__44', 'index:0.3_0.3_0.2', %v ) ]->
   [
   Out( v__18 ),
   State_client__44_0_3_0_7( %v, '()', v__18, image__34, conn__33 )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) event_send_app_i__253[role=client__44]:
   [ State_client__44_0_3_0_7( %v, rho__100, sig__35, image__34, conn__33 )
   ]
  --[ ImgSend( image__34 ), Transition( 'client__44', 'index:0.3_0.7', %v )
  ]->
   [
   State_client__44_0_3_0_8_0_0( %v, '()', 'chan:udp', <sig__35, image__34>,
                                 sig__35, image__34, conn__33
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) put_send_app_out__257[role=client__44]:
   [
   !ACP( 'client__44', c__8, 'send' ),
   State_client__44_0_3_0_8_0_0( %v, rho__102, c__8, v__9, sig__35,
                                 image__34, conn__33
   )
   ]
  --[ Transition( 'client__44', 'index:0.3_0.8_0.0', %v ) ]->
   [ State_client__44_0_3_0_12( %v, '()', conn__33 ), Store( c__8, v__9 ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) case_out__119[role=client__44]:
   [ State_client__44_0_3_0_12( %v, rho__118, conn__33 ) ]
  --[
  Loop_Back( 'client__44', 'index:0.2' ),
  Transition( 'client__44', 'index:0.3_0.12', %v )
  ]->
   [ State_client__44_0_3( (%v%+%1), '()', conn__33 ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) until_in_skip_un__260[role=client__44]:
   [ State_client__44_0_3( %v, rho__66, conn__33 ) ]
  --[
  Loop_Out( 'client__44', 'index:0.2' ),
  Transition( 'client__44', 'index:0.3', %v )
  ]->
   [ State_client__44_0_4_0_0( %v, '()', conn__33, conn__33 ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) get_intro_del_pu__265[role=client__44]:
   [
   !ACP( 'client__44', c__20, 'close_rpc' ),
   State_client__44_0_4_0_0( %v, rho__131, cid__19, conn__33 ),
   Structure( 'client__44', 'chid', cid__19, c__20 )
   ]
  --[ Transition( 'client__44', 'index:0.4_0.0', %v ) ]->
   [ Exit( c__20 ), State_client__44_0_6( %v, '()', conn__33 ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) event_let_exit_c__266[role=client__44]:
   [ State_client__44_0_6( %v, rho__139, conn__33 ) ]
  --[ ClientClose( ), Transition( 'client__44', 'index:0.6', %v ) ]->
   [ State_client__44_0_8( %v, '()' ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) repeat_in__198[role=server__46]:
   [ State_server__46_0_0( %v, rho__197 ) ]
  --[
  Loop_In( 'server__46', 'index:0.0' ),
  Transition( 'server__46', 'index:0.0', %v )
  ]->
   [ State_server__46_0_1( %v, '()' ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) case_in_recv_app__267[role=server__46]:
   [ State_server__46_0_1( %v, rho__195 ) ]
  --[ Transition( 'server__46', 'index:0.1', %v ) ]->
   [ State_server__46_0_1_0_0_0_0( %v, '()', 'chan:udp' ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) case_in_return_c__274[role=server__46]:
   [
   !ACP( 'server__46', c__10, 'recv' ), !Const( 'pub_k', pub_k ),
   State_server__46_0_1_0_0_0_0( %v, rho__165, c__10 ),
   Store( c__10, v__11 )
   ]
  --[ Transition( 'server__46', 'index:0.1_0.0_0.0', %v ) ]->
   [
   State_server__46_0_1_0_4( %v, '()',
                             verify(fst(v__11), snd(v__11), pub_k), v__11
   )
   ]

  // loop breaker: [2]
  /*
  rule (modulo AC) case_in_return_c__274[role=server__46]:
     [
     !ACP( 'server__46', c__10, 'recv' ), !Const( 'pub_k', pub_k ),
     State_server__46_0_1_0_0_0_0( %v, rho__165, c__10 ),
     Store( c__10, v__11 )
     ]
    --[ Transition( 'server__46', 'index:0.1_0.0_0.0', %v ) ]->
     [ State_server__46_0_1_0_4( %v, '()', z, v__11 ) ]
    variants (modulo AC)
    1. pub_k = pub_k.14
       v__11 = v__11.16
       z     = verify(fst(v__11.16), snd(v__11.16), pub_k.14)
    
    2. pub_k = pub_k.53
       v__11 = <x.102, x.103>
       z     = verify(x.102, x.103, pub_k.53)
    
    3. pub_k = pk(x.14)
       v__11 = <sign(x.16, x.14), x.16>
       z     = true
    // loop breaker: [2]
  */

rule (modulo E) case_in_event_ca__288[role=server__46]:
   [ State_server__46_0_1_0_4( %v, rho__183, res__42, p__41 ) ]
  --[
  ImgRecvInvalid( snd(p__41) ), NEq( res__42, true ),
  Transition( 'server__46', 'index:0.1_0.4', %v )
  ]->
   [ State_server__46_0_1_0_7( %v, '()' ) ]

  /*
  rule (modulo AC) case_in_event_ca__288[role=server__46]:
     [ State_server__46_0_1_0_4( %v, rho__183, res__42, p__41 ) ]
    --[
    ImgRecvInvalid( z ), NEq( res__42, true ),
    Transition( 'server__46', 'index:0.1_0.4', %v )
    ]->
     [ State_server__46_0_1_0_7( %v, '()' ) ]
    variants (modulo AC)
    1. p__41 = p__41.8
       z     = snd(p__41.8)
    
    2. p__41 = <x.21, z.14>
       z     = z.14
  */

rule (modulo E) case_out__194[role=server__46]:
   [ State_server__46_0_1_0_7( %v, rho__193 ) ]
  --[
  Loop_Back( 'server__46', 'index:0.0' ),
  Transition( 'server__46', 'index:0.1_0.7', %v )
  ]->
   [ State_server__46_0_1( (%v%+%1), '()' ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) case_in_tamper_c__268[role=server__46]:
   [ State_server__46_0_1( %v, rho__195 ) ]
  --[ Transition( 'server__46', 'index:0.1', %v ) ]->
   [ State_server__46_0_1_0_0_1_0( %v, '()', 'chan:udp' ) ]

  // loop breaker: [0]
  /* has exactly the trivial AC variant */

rule (modulo E) case_in_return_c__280[role=server__46]:
   [
   !ACP( 'server__46', c__27, 'recv' ), !Const( 'pub_k', pub_k ),
   In( w__29 ), State_server__46_0_1_0_0_1_0( %v, rho__155, c__27 ),
   Store( c__27, j__28 )
   ]
  --[ Transition( 'server__46', 'index:0.1_0.0_1.0', %v ) ]->
   [
   State_server__46_0_1_0_4( %v, '()',
                             verify(fst(w__29), snd(w__29), pub_k), w__29
   )
   ]

  /*
  rule (modulo AC) case_in_return_c__280[role=server__46]:
     [
     !ACP( 'server__46', c__27, 'recv' ), !Const( 'pub_k', pub_k ),
     In( w__29 ), State_server__46_0_1_0_0_1_0( %v, rho__155, c__27 ),
     Store( c__27, j__28 )
     ]
    --[ Transition( 'server__46', 'index:0.1_0.0_1.0', %v ) ]->
     [ State_server__46_0_1_0_4( %v, '()', z, w__29 ) ]
    variants (modulo AC)
    1. pub_k = pub_k.15
       w__29 = w__29.17
       z     = verify(fst(w__29.17), snd(w__29.17), pub_k.15)
    
    2. pub_k = pub_k.54
       w__29 = <x.103, x.104>
       z     = verify(x.103, x.104, pub_k.54)
    
    3. pub_k = pk(x.15)
       w__29 = <sign(x.17, x.15), x.17>
       z     = true
  */

rule (modulo E) case_in_event_ca__284[role=server__46]:
   [ State_server__46_0_1_0_4( %v, rho__177, res__42, p__41 ) ]
  --[
  Eq( res__42, true ), ImgRecvValid( snd(p__41) ),
  Transition( 'server__46', 'index:0.1_0.4', %v )
  ]->
   [ State_server__46_0_1_0_7( %v, '()' ) ]

  /*
  rule (modulo AC) case_in_event_ca__284[role=server__46]:
     [ State_server__46_0_1_0_4( %v, rho__177, res__42, p__41 ) ]
    --[
    Eq( res__42, true ), ImgRecvValid( z ),
    Transition( 'server__46', 'index:0.1_0.4', %v )
    ]->
     [ State_server__46_0_1_0_7( %v, '()' ) ]
    variants (modulo AC)
    1. p__41 = p__41.8
       z     = snd(p__41.8)
    
    2. p__41 = <x.21, z.14>
       z     = z.14
  */

rule (modulo E) until_in_skip_un__290[role=server__46]:
   [ False( ), State_server__46_0_1( %v, rho__149 ) ]
  --[
  Loop_Out( 'server__46', 'index:0.0' ),
  Transition( 'server__46', 'index:0.1', %v )
  ]->
   [ State_server__46_0_2( %v, '()' ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) repeat_in__228[role=client_ta__48]:
   [ State_client_ta__48_0_0( %v, rho__227 ) ]
  --[
  Loop_In( 'client_ta__48', 'index:0.0' ),
  Transition( 'client_ta__48', 'index:0.0', %v )
  ]->
   [ State_client_ta__48_0_1( %v, '()' ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) case_in_case_in___299[role=client_ta__48]:
   [
   !ACP( 'client_ta__48', 'chan:rpc', '.' ),
   Invoke( 'chan:rpc', fname__37, image__38 ),
   State_client_ta__48_0_1( %v, rho__225 )
   ]
  --[
  InValidName( 'client_ta__48', fname__37 ),
  NEq( fname__37, 'str:sign_image' ),
  Transition( 'client_ta__48', 'index:0.1', %v )
  ]->
   [ State_client_ta__48_0_1_0_1( %v, '()', image__38, fname__37 ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) case_out__224[role=client_ta__48]:
   [ State_client_ta__48_0_1_0_1( %v, rho__223, image__38, fname__37 ) ]
  --[
  Loop_Back( 'client_ta__48', 'index:0.0' ),
  Transition( 'client_ta__48', 'index:0.1_0.1', %v )
  ]->
   [ State_client_ta__48_0_1( (%v%+%1), '()' ) ]

  // loop breaker: [0]
  /* has exactly the trivial AC variant */

rule (modulo E) case_in_case_in___296[role=client_ta__48]:
   [
   !ACP( 'client_ta__48', 'chan:rpc', '.' ),
   !ACP( 'client_ta__48', 'chan:rpc', '.' ), !Const( 'priv_k', priv_k ),
   Invoke( 'chan:rpc', fname__37, image__38 ),
   State_client_ta__48_0_1( %v, rho__225 )
   ]
  --[
  Eq( fname__37, 'str:sign_image' ),
  Transition( 'client_ta__48', 'index:0.1', %v )
  ]->
   [
   Returned( 'chan:rpc', sign(image__38, priv_k) ),
   State_client_ta__48_0_1_0_1( %v, '()', image__38, fname__37 )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) until_in_skip_un__301[role=client_ta__48]:
   [
   !ACP( 'client_ta__48', 'chan:rpc', '.' ), Exit( 'chan:rpc' ),
   State_client_ta__48_0_1( %v, rho__203 )
   ]
  --[
  Loop_Out( 'client_ta__48', 'index:0.0' ),
  Transition( 'client_ta__48', 'index:0.1', %v )
  ]->
   [ State_client_ta__48_0_2( %v, '()' ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) event__230[role=client_ta__48]:
   [ State_client_ta__48_0_2( %v, rho__229 ) ]
  --[ ClientTAClose( ), Transition( 'client_ta__48', 'index:0.2', %v ) ]->
   [ State_client_ta__48_0_3( %v, '()' ) ]

  /* has exactly the trivial AC variant */

restriction Init:
  "∀ x #i #j. ((Init( x ) @ #i) ∧ (Init( x ) @ #j)) ⇒ (#i = #j)"
  // safety formula

restriction Equality_rule:
  "∀ x y #i. (Eq( x, y ) @ #i) ⇒ (x = y)"
  // safety formula

restriction NEquality_rule:
  "∀ x #i. (NEq( x, x ) @ #i) ⇒ (⊥)"
  // safety formula

lemma AlwaysStarts [reuse, use_induction]:
  all-traces
  "∀ x p #i.
    (Loop_Back( x, p ) @ #i) ⇒ (∃ #j. (Loop_In( x, p ) @ #j) ∧ (#j < #i))"
/*
guarded formula characterizing all counter-examples:
"∃ x p #i.
  (Loop_Back( x, p ) @ #i) ∧ ∀ #j. (Loop_In( x, p ) @ #j) ⇒ ¬(#j < #i)"
*/
by sorry

lemma AlwaysStartsWhenEnds [reuse, use_induction]:
  all-traces
  "∀ x p #i.
    (Loop_Out( x, p ) @ #i) ⇒ (∃ #j. (Loop_In( x, p ) @ #j) ∧ (#j < #i))"
/*
guarded formula characterizing all counter-examples:
"∃ x p #i.
  (Loop_Out( x, p ) @ #i) ∧ ∀ #j. (Loop_In( x, p ) @ #j) ⇒ ¬(#j < #i)"
*/
by sorry

lemma TransitionOnce [reuse, use_induction]:
  all-traces
  "∀ x p %i #j #k.
    ((Transition( x, p, %i ) @ #j) ∧ (Transition( x, p, %i ) @ #k)) ⇒
    (#j = #k)"
/*
guarded formula characterizing all counter-examples:
"∃ x p %i #j #k.
  (Transition( x, p, %i ) @ #j) ∧ (Transition( x, p, %i ) @ #k)
 ∧
  ¬(#j = #k)"
*/
by sorry

lemma Reachable:
  exists-trace
  "∃ x__43 #time_0 #time_1 #time_2.
    ((ClientClose( ) @ #time_0) ∧ (ClientTAClose( ) @ #time_1)) ∧
    (ImgRecvValid( x__43 ) @ #time_2)"
/*
guarded formula characterizing all satisfying traces:
"∃ x__43 #time_0 #time_1 #time_2.
  (ClientClose( ) @ #time_0) ∧
  (ClientTAClose( ) @ #time_1) ∧
  (ImgRecvValid( x__43 ) @ #time_2)"
*/
simplify
solve( State_client__44_0_6( %v, rho__139, conn__33 ) ▶₀ #time_0 )
  case get_intro_del_pu__265_case_06
  solve( State_client_ta__48_0_2( %v.1, rho__229 ) ▶₀ #time_1 )
    case until_in_skip_un__301_case_2
    solve( State_server__46_0_1_0_4( %v.2, rho__177, true, p__41
           ) ▶₀ #time_2 )
      case case_in_return_c__274_case_1
      solve( Loop_In( 'client__44', 'index:0.2' ) @ #j )
        case repeat_in__123
        solve( State_client__44_0_2( %v, rho__122, conn__33 ) ▶₀ #j )
          case connect_rpc_app___236
          solve( Loop_In( 'client__44', 'index:0.2' ) @ #j.1 )
            case repeat_in__123
            solve( State_client__44_0_2( %v.3, rho__122, conn__33 ) ▶₀ #j.1 )
              case connect_rpc_app___236
              solve( Loop_In( 'client_ta__48', 'index:0.0' ) @ #j.1 )
                case repeat_in__228
                solve( State_client_ta__48_0_0( %v.3, rho__227 ) ▶₀ #j.1 )
                  case Init_PG_client_ta__49
                  solve( Loop_In( 'client__44', 'index:0.2' ) @ #j.2 )
                    case repeat_in__123
                    solve( State_client__44_0_2( %v.3, rho__122, conn__33 ) ▶₀ #j.2 )
                      case connect_rpc_app___236
                      solve( Loop_In( 'client_ta__48', 'index:0.0' ) @ #j.2 )
                        case repeat_in__228
                        solve( State_client_ta__48_0_0( %v.3, rho__227 ) ▶₀ #j.2 )
                          case Init_PG_client_ta__49
                          solve( Loop_In( 'client__44', 'index:0.2' ) @ #j.2 )
                            case repeat_in__123
                            solve( State_client__44_0_2( %v.3, rho__122, conn__33 ) ▶₀ #j.2 )
                              case connect_rpc_app___236
                              solve( Structure( 'client__44', 'chid', ~n, 'chan:rpc' ) ▶₂ #vr.3 )
                                case connect_rpc_app___236
                                solve( State_client__44_0_3_0_3_0_1( %v, rho__76, 'chan:rpc', cid__14,
                                                                     f__15, arg1__16, image__34, ~n
                                       ) ▶₁ #vr.11 )
                                  case case_in_new_intr__243_case_1
                                  solve( State_client__44_0_3_0_3_0_1( %v.2, rho__76, 'chan:rpc', cid__14,
                                                                       'str:sign_image', ~n.1, image__34,
                                                                       conn__33
                                         ) ▶₁ #vr.14 )
                                    case case_in_new_intr__243
                                    solve( State_client_ta__48_0_1_0_1( %v, rho__223, image__38, fname__37
                                           ) ▶₀ #vr.16 )
                                      case case_in_case_in___296_case_1
                                      solve( State_server__46_0_1_0_0_0_0( %v, rho__165, 'chan:udp'
                                             ) ▶₂ #vr.17 )
                                        case case_in_recv_app__267_case_1
                                        SOLVED // trace found
                                      qed
                                    qed
                                  qed
                                qed
                              qed
                            qed
                          qed
                        qed
                      qed
                    qed
                  qed
                qed
              qed
            qed
          qed
        qed
      qed
    qed
  qed
qed















/*
WARNING: the following wellformedness checks failed!

Facts occur in the left-hand-side but not in any right-hand-side 
=================================================================

  1. in rule "until_in_skip_un__290":  factName `False' arity: 0 multiplicity: Linear
*/

/*
Generated from:
Tamarin version 1.10.0
Maude version 2.7.1
Git revision: UNKNOWN, branch: UNKNOWN
Compiled at: 2024-10-30 13:42:18.081591 UTC
*/

end

==============================================================================
summary of summaries:

analyzed: _202_camserver.spthy.2

  processing time: 877.15s
  
  WARNING: 1 wellformedness check failed!
           The analysis results might be wrong!
  
  AlwaysStarts (all-traces): analysis incomplete (1 steps)
  AlwaysStartsWhenEnds (all-traces): analysis incomplete (1 steps)
  TransitionOnce (all-traces): analysis incomplete (1 steps)
  Reachable (exists-trace): verified (22 steps)

==============================================================================
