data bool
data string
data connection
data signature
data image
data filedescr

data list['a] (* if we want to declare a type with a polymorphic type parameter, we do it like this *)
              (* these "'a, 'b" etc. can be inferred whenever they are used *)

data keykind      (* we can think of keykind as a set with 5 elements: keykind := {Sym, Enc, Dec, Sig, Chk} *)
data key[keykind] (* declare a simple type which takes an element of another type as a parameter *)

data hash   (* assign this type to the result of a hash computation *)

data cipher['a]   (* ciphertext which is of type 'a when decrypted *)