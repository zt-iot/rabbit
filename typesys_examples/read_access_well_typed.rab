data unit
data message 


type alice_t      : process



(** temporary solution *)
type attacker_ty : process



(** declare security types *)
type client_msg : message



syscall send(c : channel[client_msg], v : client_msg) : unit {
  put [c::store(v)]
}

syscall recv(c : channel[client_msg]) : client_msg {
  case 
  | [c::store(v)] â†’   v
  end
}



allow alice_t client_msg [recv]
allow attacker_ty client_msg [read, provide]



(***********)
(** process templates *)
process alice() : alice_t
{
  	main 
  	{
        new msg : client_msg in (* alice_t attemtps to read client_msg, while this is not allowed according to access control *)
        event [::AliceClose ()]
  	}
}

system alice()